	TITLE	E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\tlen.c
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BG@FJFA@Miranda?1System?1GetMMI?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DNA@Miranda?1System?1GetLI?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@FHMP@Miranda?1System?1GetUTFI?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@DCOH@Miranda?1Thread?1Fork?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@IENN@Miranda?1Thread?1ForkEx?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@FGIN@Miranda?1SysTerm?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@LIGC@Utils?1AddToWindowList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@PEAI@Utils?1RemoveFromWindowList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@GMNB@Utils?1FindWindowInList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@NOMI@Utils?1BroadcastToWindowList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CB@CFCA@Utils?1BroadcastToWindowListAsync@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@MDKL@Utils?1SaveWindowPos?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@GALP@Utils?1RestoreWindowPos?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CHLF@Miranda?1System?1GetMD5I?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@FOPF@Miranda?1System?1GetSHA1I?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@OCFE@Netlib?1CloseHandle?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@EFDJ@Netlib?1Send?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@GFGB@Netlib?1Recv?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@CMGK@Netlib?1Log?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@GDOO@Netlib?1InitSecurityProvider?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@JINJ@Netlib?1DestroySecurityProvider?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@CBFG@Netlib?1NtlmCreateResponse?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@COCL@Proto?1EnumAccounts?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@CCNI@Proto?1GetAccount?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@IFFL@Proto?1BroadcastAck?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@MGBG@DB?1Event?1GetText?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@BEPM@DB?1Contact?1GetSettingStr?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0DA@FLKM@C?3?2MirandaDev?2miranda_svn2?2inclu@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@IGCO@DB?1Contact?1DeleteSetting?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@GNEH@LangPack?1TranslateDialog?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@GFNK@Skin?1Icons?1Load?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@BLFF@Skin?1Icons?1LoadProto?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@CNOA@Skin?1Sounds?1AddNew?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@LENC@Skin?1Sounds?1Play?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@PNGM@PopUp?1AddPopUp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@OBDC@PopUp?1AddPopUpEx?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CGKI@PopUp?1AddPopUpW?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@HIHP@PopUp?1GetContact?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@CCHD@PopUp?1GetPluginData?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@HKEA@PopUp?1IsSecondLineShown?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@KGOE@PopUp?1Changetext?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@LAPD@PopUp?1ChangetextW?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@KOPP@PopUp?1Change?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@BGJ@PopUp?1ShowMessage?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@NFFE@PopUp?1ShowMessageW?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@MAHO@PopUp?1AddPopupClass?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@FLMK@Tlen?5Protocol?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0DK@GNMM@Tlen?5protocol?5plugin?5for?5Miranda@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0DF@OHJP@Santithorn?5Bunchua?0?5Adam?5Strzele@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@DIDF@the_leech?$EAusers?4berlios?4de?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0DC@DAIH@?$CIc?$CJ?52002?92008?5Santithorn?5Bunchua@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@IFLJ@http?3?1?1mtlen?4berlios?4de?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1CK@DAAJ@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAP?$AAl?$AAu?$AAg?$AAi?$AAn@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1KA@GFEM@?$AAT?$AAh?$AAe?$AA?5?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAp?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAp?$AAl@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NFEE@PROTO?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04ELMM@MAIL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03NJCG@MUC?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05CJDN@CHATS?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05DLPA@GRANT?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07GCFD@REQUEST?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05DMCN@VOICE?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@IAIB@MICROPHONE?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07JKL@SPEAKER?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04CBAG@TLEN?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FCKF@?$CFs_?$CFs?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BM@ILLJ@?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAi?$AAc?$AAo?$AAn?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_19KBAK@?$AAM?$AAa?$AAi?$AAl?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BI@PPEG@?$AAG?$AAr?$AAo?$AAu?$AAp?$AA?5?$AAc?$AAh?$AAa?$AAt?$AAs?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BG@DLPE@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAc?$AAh?$AAa?$AAt?$AAs?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1CI@DFCB@?$AAG?$AAr?$AAa?$AAn?$AAt?$AA?5?$AAa?$AAu?$AAt?$AAh?$AAo?$AAr?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1CM@CHLO@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAa?$AAu?$AAt?$AAh?$AAo?$AAr?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BG@PEAC@?$AAV?$AAo?$AAi?$AAc?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAt?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BG@MKBH@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BA@BBKP@?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@EHMA@Skin2?1Icons?1ReleaseIcon?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@MOM@Skin2?1Icons?1GetIcon?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@CGG@CList?1ModifyMenuItem?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_19JAHN@?$AAT?$AAl?$AAe?$AAn?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@HMGE@Skin2?1Icons?1AddIcon?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0EN@LLBA@E?3?2Documents?5and?5Settings?2piotr?2@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03HCJC@jid?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CF@PIBP@?$DMpresence?5to?$DN?8?$CFs?8?5type?$DN?8subscrib@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CG@PEGH@?$DMpresence?5to?$DN?8?$CFs?8?5type?$DN?8subscrib@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FE@FHPI@?$DMmessage?5type?$DN?8pic?8?5to?$DN?8the_leec@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@BEAN@SavePassword?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@NJGE@DB?1GetProfilePath?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04DKBA@?2?$CFs?2?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@CLNP@openinbox?4html?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09ONOL@LoginName?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08NKKK@Password?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@PHIF@DB?1Crypt?1DecodeString?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02IAAH@wt?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BAB@GGCC@?$DMhtml?$DO?$DMhead?$DO?$DM?1head?$DO?$DMbody?5OnLoad?$DN@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NKN@http?3?1?1poczta?4o2?4pl?1?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@EHKK@Utils?1OpenURL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODDI@DB?1Contact?1FindFirst?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@HFIO@Proto?1GetContactBaseProto?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06IOLI@Status?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@LDI@DB?1Contact?1FindNext?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@KEJH@Incoming?5mail?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02DILL@?$CFs?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@DCBH@TlenMailNotify?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05PJFK@Alert?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@NMMF@TlenAlertNotify?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@OJOO@Voice?5chat?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@GHLJ@TlenVoiceNotify?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@MHKM@UserInfo?1Initialise?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@ECNA@CList?1AddMainMenuItem?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@NIOH@?$CFs?1MainMenuChats?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@IDCD@Tlen?5Chats?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@PLDI@?$CFs?1MainMenuMUC?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@KCGH@Multi?9User?5Conference?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@PPFD@?$CFs?1MainMenuInbox?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@KEJH@Tlen?5Inbox?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@PDGE@?$CFs?1ContactMenuMUC?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@GIEG@CList?1AddContactMenuItem?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@LCEH@?$CFs?1ContactMenuVoice?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@EDKM@Voice?5Chat?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@OBOH@?$CFs?1RequestAuth?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@ICHE@Request?5authorization?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FBAI@?$CFs?1GrantAuth?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@FAFD@Grant?5authorization?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@MFKA@?$CFs?1SendPicture?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@LLJI@Send?5picture?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05CNCC@?$CGFile?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@JJLD@SRFile?1SendCommand?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05LFDB@Nudge?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05LELA@?$CFs?1?$CFs?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@JLBI@Opt?1Initialise?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@GNNH@DB?1Contact?1SettingChanged?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@PHPO@DB?1Contact?1Deleted?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@FOAO@CList?1PreBuildContactMenu?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BN@BBKH@Miranda?1System?1ModulesLoaded?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@BJPA@Skin2?1IconsChanged?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@PEDN@Miranda?1System?1PShutdown?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IBOM@LoginServer?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07HCE@tlen?4pl?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@FKFD@ManualHost?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@DIBD@s1?4tlen?4pl?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BO@HNHJ@Miranda?1System?1GetVersionText?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07NCOA@Unicode?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DKCJ@Proto?1RegisterModule?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _mir_getMMI
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _mir_getUTFI
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _mir_getMD5I
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _mir_getSHA1I
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSettingByte_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSettingWord_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSettingDword_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSetting_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSettingString_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBFreeVariant
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBWriteContactSettingWord
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBWriteContactSettingString
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _LoadSkinnedIcon
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _SkinAddNewSoundEx
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DllMain@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _MirandaPluginInfoEx
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _MirandaPluginInterfaces
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _GetIconName
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _GetIconDescription
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenReleaseIcons
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenLoadIcons
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenIconsChanged
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenRegisterIcons
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenPrebuildContactMenu
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenContactMenuHandleRequestAuth
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenContactMenuHandleGrantAuth
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenContactMenuHandleSendPicture
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenMenuHandleInbox
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenOnModulesLoaded
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenPreShutdown
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _initMenuItems
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tlenProtoInit
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tlenProtoUninit
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _Load
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _Unload
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	_isMIrandaUnicode
PUBLIC	_pluginInfoEx
PUBLIC	??_C@_0O@FLMK@Tlen?5Protocol?$AA@		; `string'
PUBLIC	??_C@_0DK@GNMM@Tlen?5protocol?5plugin?5for?5Miranda@ ; `string'
PUBLIC	??_C@_0DF@OHJP@Santithorn?5Bunchua?0?5Adam?5Strzele@ ; `string'
PUBLIC	??_C@_0BL@DIDF@the_leech?$EAusers?4berlios?4de?$AA@ ; `string'
PUBLIC	??_C@_0DC@DAIH@?$CIc?$CJ?52002?92008?5Santithorn?5Bunchua@ ; `string'
PUBLIC	??_C@_0BI@IFLJ@http?3?1?1mtlen?4berlios?4de?$AA@ ; `string'
_DATA	SEGMENT
COMM	_mmi:BYTE:03cH
COMM	_utfi:BYTE:01cH
COMM	_md5i:BYTE:014H
COMM	_sha1i:BYTE:014H
_DATA	ENDS
_BSS	SEGMENT
_isMIrandaUnicode DD 01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
COMM	_mutex:BYTE:018H
COMM	_hInst:DWORD
COMM	_hMainThread:DWORD
COMM	_tlenIcons:DWORD:09H
COMM	_pluginLink:DWORD
_pluginInfoEx DD 038H
	DD	FLAT:??_C@_0O@FLMK@Tlen?5Protocol?$AA@
	DD	01080000H
	DD	FLAT:??_C@_0DK@GNMM@Tlen?5protocol?5plugin?5for?5Miranda@
	DD	FLAT:??_C@_0DF@OHJP@Santithorn?5Bunchua?0?5Adam?5Strzele@
	DD	FLAT:??_C@_0BL@DIDF@the_leech?$EAusers?4berlios?4de?$AA@
	DD	FLAT:??_C@_0DC@DAIH@?$CIc?$CJ?52002?92008?5Santithorn?5Bunchua@
	DD	FLAT:??_C@_0BI@IFLJ@http?3?1?1mtlen?4berlios?4de?$AA@
	DB	00H
	ORG $+3
	DD	00H
	DD	011fc3484H
	DW	0475cH
	DW	011dcH
	DB	083H
	DB	014H
	DB	08H
	DB	00H
	DB	020H
	DB	0cH
	DB	09aH
	DB	066H
_DATA	ENDS
CONST	SEGMENT
_interfaces DD	02a3c815eH
	DW	0a7d9H
	DW	0424bH
	DB	0baH
	DB	030H
	DB	02H
	DB	0d0H
	DB	083H
	DB	022H
	DB	090H
	DB	085H
	DD	00H
	DW	00H
	DW	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
CONST	ENDS
;	COMDAT ??_C@_0O@FLMK@Tlen?5Protocol?$AA@
_DATA	SEGMENT
??_C@_0O@FLMK@Tlen?5Protocol?$AA@ DB 'Tlen Protocol', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0DK@GNMM@Tlen?5protocol?5plugin?5for?5Miranda@
_DATA	SEGMENT
??_C@_0DK@GNMM@Tlen?5protocol?5plugin?5for?5Miranda@ DB 'Tlen protocol pl'
	DB	'ugin for Miranda IM (1.8.0.0 Apr  3 2008)', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0DF@OHJP@Santithorn?5Bunchua?0?5Adam?5Strzele@
_DATA	SEGMENT
??_C@_0DF@OHJP@Santithorn?5Bunchua?0?5Adam?5Strzele@ DB 'Santithorn Bunch'
	DB	'ua, Adam Strzelecki, Piotr Piastucki', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BL@DIDF@the_leech?$EAusers?4berlios?4de?$AA@
_DATA	SEGMENT
??_C@_0BL@DIDF@the_leech?$EAusers?4berlios?4de?$AA@ DB 'the_leech@users.b'
	DB	'erlios.de', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0DC@DAIH@?$CIc?$CJ?52002?92008?5Santithorn?5Bunchua@
_DATA	SEGMENT
??_C@_0DC@DAIH@?$CIc?$CJ?52002?92008?5Santithorn?5Bunchua@ DB '(c) 2002-2'
	DB	'008 Santithorn Bunchua, Piotr Piastucki', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BI@IFLJ@http?3?1?1mtlen?4berlios?4de?$AA@
_DATA	SEGMENT
??_C@_0BI@IFLJ@http?3?1?1mtlen?4berlios?4de?$AA@ DB 'http://mtlen.berlios'
	DB	'.de', 00H					; `string'
_DATA	ENDS
PUBLIC	_DllMain@12
;	COMDAT _DllMain@12
_TEXT	SEGMENT
_hModule$ = 8
_DllMain@12 PROC NEAR					; COMDAT

; 72   : #ifdef _DEBUG
; 73   : 	_CrtSetDbgFlag( _CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF);
; 74   : #endif
; 75   : 
; 76   : 	hInst = hModule;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _hModule$[esp-4]

; 77   : 	return TRUE;

  00004	6a 01		 push	 1
  00006	a3 00 00 00 00	 mov	 DWORD PTR _hInst, eax
  0000b	58		 pop	 eax

; 78   : }

  0000c	c2 0c 00	 ret	 12			; 0000000cH
_DllMain@12 ENDP
_TEXT	ENDS
PUBLIC	_MirandaPluginInfoEx
PUBLIC	??_C@_1CK@DAAJ@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAP?$AAl?$AAu?$AAg?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@	; `string'
PUBLIC	??_C@_1KA@GFEM@?$AAT?$AAh?$AAe?$AA?5?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAp?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAp?$AAl@ ; `string'
EXTRN	__imp__MessageBoxW@16:NEAR
;	COMDAT ??_C@_1CK@DAAJ@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAP?$AAl?$AAu?$AAg?$AAi?$AAn@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\tlen.c
_DATA	SEGMENT
??_C@_1CK@DAAJ@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAP?$AAl?$AAu?$AAg?$AAi?$AAn@ DB 'T'
	DB	00H, 'l', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'P', 00H, 'r', 00H
	DB	'o', 00H, 't', 00H, 'o', 00H, 'c', 00H, 'o', 00H, 'l', 00H, ' '
	DB	00H, 'P', 00H, 'l', 00H, 'u', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	00H, 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@
_DATA	SEGMENT
??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ DB 'LangPack/TranslateStrin'
	DB	'g', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_1KA@GFEM@?$AAT?$AAh?$AAe?$AA?5?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAp?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAp?$AAl@
_DATA	SEGMENT
??_C@_1KA@GFEM@?$AAT?$AAh?$AAe?$AA?5?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAp?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAp?$AAl@ DB 'T'
	DB	00H, 'h', 00H, 'e', 00H, ' ', 00H, 'T', 00H, 'l', 00H, 'e', 00H
	DB	'n', 00H, ' ', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 't', 00H, 'o'
	DB	00H, 'c', 00H, 'o', 00H, 'l', 00H, ' ', 00H, 'p', 00H, 'l', 00H
	DB	'u', 00H, 'g', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'c', 00H, 'a'
	DB	00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'b', 00H
	DB	'e', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'e'
	DB	00H, 'd', 00H, '.', 00H, ' ', 00H, 'I', 00H, 't', 00H, ' ', 00H
	DB	'r', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'i', 00H, 'r', 00H, 'e'
	DB	00H, 's', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'd', 00H, 'a', 00H, ' ', 00H, 'I', 00H, 'M', 00H, ' '
	DB	00H, '0', 00H, '.', 00H, '7', 00H, ' ', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'r', 00H, '.'
	DB	00H, 00H, 00H				; `string'
_DATA	ENDS
;	COMDAT _MirandaPluginInfoEx
_TEXT	SEGMENT
_mirandaVersion$ = 8
_MirandaPluginInfoEx PROC NEAR				; COMDAT

; 83   : 	if ( mirandaVersion < PLUGIN_MAKE_VERSION( 0,8,0,10 )) {

  00000	81 7c 24 04 0a
	00 08 00	 cmp	 DWORD PTR _mirandaVersion$[esp-4], 524298 ; 0008000aH
  00008	73 44		 jae	 SHORT $L83603

; 84   : 		MessageBox( NULL, TranslateT("The Tlen protocol plugin cannot be loaded. It requires Miranda IM 0.7 or later."), TranslateT("Tlen Protocol Plugin"), MB_OK|MB_ICONWARNING|MB_SETFOREGROUND|MB_TOPMOST );

  0000a	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	68 30 00 05 00	 push	 327728			; 00050030H
  00016	bf 00 10 00 00	 mov	 edi, 4096		; 00001000H
  0001b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1CK@DAAJ@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAP?$AAl?$AAu?$AAg?$AAi?$AAn@ ; `string'
  00020	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  00025	57		 push	 edi
  00026	56		 push	 esi
  00027	ff 50 24	 call	 DWORD PTR [eax+36]
  0002a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002d	50		 push	 eax
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00033	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1KA@GFEM@?$AAT?$AAh?$AAe?$AA?5?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAp?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAp?$AAl@ ; `string'
  00038	57		 push	 edi
  00039	56		 push	 esi
  0003a	ff 50 24	 call	 DWORD PTR [eax+36]
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00040	50		 push	 eax
  00041	6a 00		 push	 0
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxW@16
  00049	5f		 pop	 edi

; 85   : 		return NULL;

  0004a	33 c0		 xor	 eax, eax
  0004c	5e		 pop	 esi

; 89   : }

  0004d	c3		 ret	 0
$L83603:

; 86   : 	}
; 87   : 
; 88   : 	return &pluginInfoEx;

  0004e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:_pluginInfoEx

; 89   : }

  00053	c3		 ret	 0
_MirandaPluginInfoEx ENDP
_TEXT	ENDS
PUBLIC	_MirandaPluginInterfaces
;	COMDAT _MirandaPluginInterfaces
_TEXT	SEGMENT
_MirandaPluginInterfaces PROC NEAR			; COMDAT

; 94   : 	return interfaces;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:_interfaces

; 95   : }

  00005	c3		 ret	 0
_MirandaPluginInterfaces ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@	; `string'
PUBLIC	??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@	; `string'
PUBLIC	??_C@_03HCJC@jid?$AA@				; `string'
PUBLIC	_TlenContactMenuHandleRequestAuth
PUBLIC	??_C@_0CF@PIBP@?$DMpresence?5to?$DN?8?$CFs?8?5type?$DN?8subscrib@ ; `string'
EXTRN	_JabberSend:NEAR
;	COMDAT ??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ DB 'DB/Contact/GetSetting', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@
_DATA	SEGMENT
??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ DB 'DB/Contact/FreeVariant', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_03HCJC@jid?$AA@
_DATA	SEGMENT
??_C@_03HCJC@jid?$AA@ DB 'jid', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0CF@PIBP@?$DMpresence?5to?$DN?8?$CFs?8?5type?$DN?8subscrib@
_DATA	SEGMENT
??_C@_0CF@PIBP@?$DMpresence?5to?$DN?8?$CFs?8?5type?$DN?8subscrib@ DB '<pr'
	DB	'esence to=''%s'' type=''subscribe''/>', 00H	; `string'
_DATA	ENDS
;	COMDAT _TlenContactMenuHandleRequestAuth
_TEXT	SEGMENT
_cgs$84273 = -12
_ptr$ = 8
_wParam$ = 12
_dbv$ = -24
_TlenContactMenuHandleRequestAuth PROC NEAR		; COMDAT

; 273  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 274  : 	HANDLE hContact;
; 275  : 	DBVARIANT dbv;
; 276  :     TlenProtocol *proto = (TlenProtocol *)ptr;
; 277  : 	if ((hContact=(HANDLE) wParam)!=NULL && proto->jabberOnline) {

  00006	83 7d 0c 00	 cmp	 DWORD PTR _wParam$[ebp], 0
  0000a	56		 push	 esi
  0000b	74 5e		 je	 SHORT $L84277
  0000d	8b 75 08	 mov	 esi, DWORD PTR _ptr$[ebp]
  00010	83 be 78 01 00
	00 00		 cmp	 DWORD PTR [esi+376], 0
  00017	74 52		 je	 SHORT $L84277

; 278  : 		if (!DBGetContactSetting(hContact, proto->iface.m_szModuleName, "jid", &dbv)) {

  00019	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0001c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$84273[ebp+4], OFFSET FLAT:??_C@_03HCJC@jid?$AA@ ; `string'
  00023	89 45 f4	 mov	 DWORD PTR _cgs$84273[ebp], eax
  00026	8d 45 e8	 lea	 eax, DWORD PTR _dbv$[ebp]
  00029	89 45 fc	 mov	 DWORD PTR _cgs$84273[ebp+8], eax
  0002c	8d 45 f4	 lea	 eax, DWORD PTR _cgs$84273[ebp]
  0002f	50		 push	 eax
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00035	ff 75 0c	 push	 DWORD PTR _wParam$[ebp]
  00038	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  0003d	ff 50 24	 call	 DWORD PTR [eax+36]
  00040	83 c4 0c	 add	 esp, 12			; 0000000cH
  00043	85 c0		 test	 eax, eax
  00045	75 24		 jne	 SHORT $L84277

; 279  : 			JabberSend(proto, "<presence to='%s' type='subscribe'/>", dbv.pszVal);

  00047	ff 75 ec	 push	 DWORD PTR _dbv$[ebp+4]
  0004a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CF@PIBP@?$DMpresence?5to?$DN?8?$CFs?8?5type?$DN?8subscrib@ ; `string'
  0004f	56		 push	 esi
  00050	e8 00 00 00 00	 call	 _JabberSend

; 280  : 			DBFreeVariant(&dbv);

  00055	8d 45 e8	 lea	 eax, DWORD PTR _dbv$[ebp]
  00058	50		 push	 eax
  00059	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0005e	6a 00		 push	 0
  00060	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  00065	ff 50 24	 call	 DWORD PTR [eax+36]
  00068	83 c4 18	 add	 esp, 24			; 00000018H
$L84277:

; 281  : 		}
; 282  : 	}
; 283  : 	return 0;

  0006b	33 c0		 xor	 eax, eax
  0006d	5e		 pop	 esi

; 284  : }

  0006e	c9		 leave
  0006f	c3		 ret	 0
_TlenContactMenuHandleRequestAuth ENDP
_TEXT	ENDS
PUBLIC	_TlenContactMenuHandleGrantAuth
PUBLIC	??_C@_0CG@PEGH@?$DMpresence?5to?$DN?8?$CFs?8?5type?$DN?8subscrib@ ; `string'
;	COMDAT ??_C@_0CG@PEGH@?$DMpresence?5to?$DN?8?$CFs?8?5type?$DN?8subscrib@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_0CG@PEGH@?$DMpresence?5to?$DN?8?$CFs?8?5type?$DN?8subscrib@ DB '<pr'
	DB	'esence to=''%s'' type=''subscribed''/>', 00H ; `string'
_DATA	ENDS
;	COMDAT _TlenContactMenuHandleGrantAuth
_TEXT	SEGMENT
_cgs$84283 = -12
_ptr$ = 8
_wParam$ = 12
_dbv$ = -24
_TlenContactMenuHandleGrantAuth PROC NEAR		; COMDAT

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 288  : 	HANDLE hContact;
; 289  : 	DBVARIANT dbv;
; 290  :     TlenProtocol *proto = (TlenProtocol *)ptr;
; 291  : 	if ((hContact=(HANDLE) wParam)!=NULL && proto->jabberOnline) {

  00006	83 7d 0c 00	 cmp	 DWORD PTR _wParam$[ebp], 0
  0000a	56		 push	 esi
  0000b	74 5e		 je	 SHORT $L84287
  0000d	8b 75 08	 mov	 esi, DWORD PTR _ptr$[ebp]
  00010	83 be 78 01 00
	00 00		 cmp	 DWORD PTR [esi+376], 0
  00017	74 52		 je	 SHORT $L84287

; 292  : 		if (!DBGetContactSetting(hContact, proto->iface.m_szModuleName, "jid", &dbv)) {

  00019	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0001c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$84283[ebp+4], OFFSET FLAT:??_C@_03HCJC@jid?$AA@ ; `string'
  00023	89 45 f4	 mov	 DWORD PTR _cgs$84283[ebp], eax
  00026	8d 45 e8	 lea	 eax, DWORD PTR _dbv$[ebp]
  00029	89 45 fc	 mov	 DWORD PTR _cgs$84283[ebp+8], eax
  0002c	8d 45 f4	 lea	 eax, DWORD PTR _cgs$84283[ebp]
  0002f	50		 push	 eax
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00035	ff 75 0c	 push	 DWORD PTR _wParam$[ebp]
  00038	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  0003d	ff 50 24	 call	 DWORD PTR [eax+36]
  00040	83 c4 0c	 add	 esp, 12			; 0000000cH
  00043	85 c0		 test	 eax, eax
  00045	75 24		 jne	 SHORT $L84287

; 293  : 			JabberSend(proto, "<presence to='%s' type='subscribed'/>", dbv.pszVal);

  00047	ff 75 ec	 push	 DWORD PTR _dbv$[ebp+4]
  0004a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CG@PEGH@?$DMpresence?5to?$DN?8?$CFs?8?5type?$DN?8subscrib@ ; `string'
  0004f	56		 push	 esi
  00050	e8 00 00 00 00	 call	 _JabberSend

; 294  : 			DBFreeVariant(&dbv);

  00055	8d 45 e8	 lea	 eax, DWORD PTR _dbv$[ebp]
  00058	50		 push	 eax
  00059	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0005e	6a 00		 push	 0
  00060	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  00065	ff 50 24	 call	 DWORD PTR [eax+36]
  00068	83 c4 18	 add	 esp, 24			; 00000018H
$L84287:

; 295  : 		}
; 296  : 	}
; 297  : 	return 0;

  0006b	33 c0		 xor	 eax, eax
  0006d	5e		 pop	 esi

; 298  : }

  0006e	c9		 leave
  0006f	c3		 ret	 0
_TlenContactMenuHandleGrantAuth ENDP
_TEXT	ENDS
PUBLIC	_TlenContactMenuHandleSendPicture
PUBLIC	??_C@_0FE@FHPI@?$DMmessage?5type?$DN?8pic?8?5to?$DN?8the_leec@ ; `string'
;	COMDAT ??_C@_0FE@FHPI@?$DMmessage?5type?$DN?8pic?8?5to?$DN?8the_leec@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_0FE@FHPI@?$DMmessage?5type?$DN?8pic?8?5to?$DN?8the_leec@ DB '<messa'
	DB	'ge type=''pic'' to=''the_leech7@tlen.pl'' crc=''da4fe23'' idt'
	DB	'=''2174'' size=''21161''/>', 00H		; `string'
_DATA	ENDS
;	COMDAT _TlenContactMenuHandleSendPicture
_TEXT	SEGMENT
_cgs$84293 = -12
_ptr$ = 8
_wParam$ = 12
_dbv$ = -24
_TlenContactMenuHandleSendPicture PROC NEAR		; COMDAT

; 301  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 302  : 	HANDLE hContact;
; 303  : 	DBVARIANT dbv;
; 304  :     TlenProtocol *proto = (TlenProtocol *)ptr;
; 305  : 	if ((hContact=(HANDLE) wParam)!=NULL && proto->jabberOnline) {

  00006	83 7d 0c 00	 cmp	 DWORD PTR _wParam$[ebp], 0
  0000a	56		 push	 esi
  0000b	74 5b		 je	 SHORT $L84297
  0000d	8b 75 08	 mov	 esi, DWORD PTR _ptr$[ebp]
  00010	83 be 78 01 00
	00 00		 cmp	 DWORD PTR [esi+376], 0
  00017	74 4f		 je	 SHORT $L84297

; 306  : 		if (!DBGetContactSetting(hContact, proto->iface.m_szModuleName, "jid", &dbv)) {

  00019	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0001c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$84293[ebp+4], OFFSET FLAT:??_C@_03HCJC@jid?$AA@ ; `string'
  00023	89 45 f4	 mov	 DWORD PTR _cgs$84293[ebp], eax
  00026	8d 45 e8	 lea	 eax, DWORD PTR _dbv$[ebp]
  00029	89 45 fc	 mov	 DWORD PTR _cgs$84293[ebp+8], eax
  0002c	8d 45 f4	 lea	 eax, DWORD PTR _cgs$84293[ebp]
  0002f	50		 push	 eax
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00035	ff 75 0c	 push	 DWORD PTR _wParam$[ebp]
  00038	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  0003d	ff 50 24	 call	 DWORD PTR [eax+36]
  00040	83 c4 0c	 add	 esp, 12			; 0000000cH
  00043	85 c0		 test	 eax, eax
  00045	75 21		 jne	 SHORT $L84297

; 307  : 			JabberSend(proto, "<message type='pic' to='the_leech7@tlen.pl' crc='da4fe23' idt='2174' size='21161'/>");

  00047	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FE@FHPI@?$DMmessage?5type?$DN?8pic?8?5to?$DN?8the_leec@ ; `string'
  0004c	56		 push	 esi
  0004d	e8 00 00 00 00	 call	 _JabberSend

; 308  : //			JabberSend(proto, "<message type='pic' to='%s' crc='b4f7bdd' idt='6195' size='5583'/>", dbv.pszVal);
; 309  : 			DBFreeVariant(&dbv);

  00052	8d 45 e8	 lea	 eax, DWORD PTR _dbv$[ebp]
  00055	50		 push	 eax
  00056	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0005b	6a 00		 push	 0
  0005d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  00062	ff 50 24	 call	 DWORD PTR [eax+36]
  00065	83 c4 14	 add	 esp, 20			; 00000014H
$L84297:

; 310  : 		}
; 311  : 	}
; 312  : 	return 0;

  00068	33 c0		 xor	 eax, eax
  0006a	5e		 pop	 esi

; 313  : }

  0006b	c9		 leave
  0006c	c3		 ret	 0
_TlenContactMenuHandleSendPicture ENDP
_TEXT	ENDS
PUBLIC	_TlenMenuHandleInbox
PUBLIC	??_C@_0N@BEAN@SavePassword?$AA@			; `string'
PUBLIC	??_C@_0BC@NJGE@DB?1GetProfilePath?$AA@		; `string'
PUBLIC	??_C@_04DKBA@?2?$CFs?2?$AA@			; `string'
PUBLIC	??_C@_0P@CLNP@openinbox?4html?$AA@		; `string'
PUBLIC	??_C@_09ONOL@LoginName?$AA@			; `string'
PUBLIC	??_C@_08NKKK@Password?$AA@			; `string'
PUBLIC	??_C@_0BG@PHIF@DB?1Crypt?1DecodeString?$AA@	; `string'
PUBLIC	??_C@_02IAAH@wt?$AA@				; `string'
PUBLIC	??_C@_0BAB@GGCC@?$DMhtml?$DO?$DMhead?$DO?$DM?1head?$DO?$DMbody?5OnLoad?$DN@ ; `string'
PUBLIC	??_C@_0BF@NKN@http?3?1?1poczta?4o2?4pl?1?$AA@	; `string'
PUBLIC	??_C@_0O@EHKK@Utils?1OpenURL?$AA@		; `string'
EXTRN	__imp__CreateDirectoryA@8:NEAR
EXTRN	__imp__fclose:NEAR
EXTRN	_strcat:NEAR
EXTRN	_strlen:NEAR
EXTRN	__imp__fopen:NEAR
EXTRN	__imp__fprintf:NEAR
;	COMDAT ??_C@_0N@BEAN@SavePassword?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_0N@BEAN@SavePassword?$AA@ DB 'SavePassword', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@NJGE@DB?1GetProfilePath?$AA@
_DATA	SEGMENT
??_C@_0BC@NJGE@DB?1GetProfilePath?$AA@ DB 'DB/GetProfilePath', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_04DKBA@?2?$CFs?2?$AA@
_DATA	SEGMENT
??_C@_04DKBA@?2?$CFs?2?$AA@ DB '\%s\', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@CLNP@openinbox?4html?$AA@
_DATA	SEGMENT
??_C@_0P@CLNP@openinbox?4html?$AA@ DB 'openinbox.html', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_09ONOL@LoginName?$AA@
_DATA	SEGMENT
??_C@_09ONOL@LoginName?$AA@ DB 'LoginName', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08NKKK@Password?$AA@
_DATA	SEGMENT
??_C@_08NKKK@Password?$AA@ DB 'Password', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@PHIF@DB?1Crypt?1DecodeString?$AA@
_DATA	SEGMENT
??_C@_0BG@PHIF@DB?1Crypt?1DecodeString?$AA@ DB 'DB/Crypt/DecodeString', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_02IAAH@wt?$AA@
_DATA	SEGMENT
??_C@_02IAAH@wt?$AA@ DB 'wt', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BAB@GGCC@?$DMhtml?$DO?$DMhead?$DO?$DM?1head?$DO?$DMbody?5OnLoad?$DN@
_DATA	SEGMENT
??_C@_0BAB@GGCC@?$DMhtml?$DO?$DMhead?$DO?$DM?1head?$DO?$DMbody?5OnLoad?$DN@ DB '<'
	DB	'html><head></head><body OnLoad="document.forms[0].submit();">'
	DB	'<form action="http://poczta.o2.pl/index.php" method="post" na'
	DB	'me="login_form"><input type="hidden" name="username" value="%'
	DB	's"><input type="hidden" name="password" value="%s"></form></b'
	DB	'ody></html>', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NKN@http?3?1?1poczta?4o2?4pl?1?$AA@
_DATA	SEGMENT
??_C@_0BF@NKN@http?3?1?1poczta?4o2?4pl?1?$AA@ DB 'http://poczta.o2.pl/', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@EHKK@Utils?1OpenURL?$AA@
_DATA	SEGMENT
??_C@_0O@EHKK@Utils?1OpenURL?$AA@ DB 'Utils/OpenURL', 00H ; `string'
_DATA	ENDS
;	COMDAT _TlenMenuHandleInbox
_TEXT	SEGMENT
_dbv$84302 = -44
_cgs$84303 = -20
_cgs$84312 = -20
_cgs$84322 = -20
_ptr$ = 8
_dbv$ = -32
_login$ = -8
_password$ = -4
_szFileName$ = -304
_TlenMenuHandleInbox PROC NEAR				; COMDAT

; 316  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 30 01 00
	00		 sub	 esp, 304		; 00000130H
  00009	53		 push	 ebx

; 317  : 	DBVARIANT dbv;
; 318  : 	char *login = NULL, *password = NULL;
; 319  : 	char szFileName[ MAX_PATH ];
; 320  :     TlenProtocol *proto = (TlenProtocol *)ptr;
; 321  :     if (DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "SavePassword", TRUE) == TRUE) {

  0000a	8b 5d 08	 mov	 ebx, DWORD PTR _ptr$[ebp]
  0000d	56		 push	 esi
  0000e	33 c0		 xor	 eax, eax
  00010	8b 4b 1c	 mov	 ecx, DWORD PTR [ebx+28]
  00013	89 45 f8	 mov	 DWORD PTR _login$[ebp], eax
  00016	89 4d ec	 mov	 DWORD PTR _cgs$84303[ebp], ecx
  00019	8d 4d d4	 lea	 ecx, DWORD PTR _dbv$84302[ebp]
  0001c	89 4d f4	 mov	 DWORD PTR _cgs$84303[ebp+8], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR _cgs$84303[ebp]
  00022	51		 push	 ecx
  00023	89 45 fc	 mov	 DWORD PTR _password$[ebp], eax
  00026	50		 push	 eax
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0002c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00031	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cgs$84303[ebp+4], OFFSET FLAT:??_C@_0N@BEAN@SavePassword?$AA@ ; `string'
  00038	ff 50 24	 call	 DWORD PTR [eax+36]
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003e	85 c0		 test	 eax, eax
  00040	75 0d		 jne	 SHORT $L84328
  00042	0f b6 45 d8	 movzx	 eax, BYTE PTR _dbv$84302[ebp+4]
  00046	83 f8 01	 cmp	 eax, 1
  00049	0f 85 68 01 00
	00		 jne	 $L83863
$L84328:
  0004f	57		 push	 edi

; 322  : 		int tPathLen;
; 323  : 		CallService( MS_DB_GETPROFILEPATH, MAX_PATH, (LPARAM) szFileName );

  00050	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _szFileName$[ebp]
  00056	bf 04 01 00 00	 mov	 edi, 260		; 00000104H
  0005b	50		 push	 eax
  0005c	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00061	57		 push	 edi
  00062	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@NJGE@DB?1GetProfilePath?$AA@ ; `string'
  00067	ff 50 24	 call	 DWORD PTR [eax+36]

; 324  : 		tPathLen = strlen( szFileName );

  0006a	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _szFileName$[ebp]
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 _strlen

; 325  : 		tPathLen += mir_snprintf( szFileName + tPathLen, MAX_PATH - tPathLen, "\\%s\\", proto->iface.m_szProtoName);

  00076	ff 73 18	 push	 DWORD PTR [ebx+24]
  00079	8b f0		 mov	 esi, eax
  0007b	8b c7		 mov	 eax, edi
  0007d	2b c6		 sub	 eax, esi
  0007f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04DKBA@?2?$CFs?2?$AA@ ; `string'
  00084	50		 push	 eax
  00085	8d 84 35 d0 fe
	ff ff		 lea	 eax, DWORD PTR _szFileName$[ebp+esi]
  0008c	50		 push	 eax
  0008d	ff 15 1c 00 00
	00		 call	 DWORD PTR _mmi+28
  00093	83 c4 20	 add	 esp, 32			; 00000020H
  00096	03 f0		 add	 esi, eax

; 326  : 		CreateDirectoryA( szFileName, NULL );

  00098	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _szFileName$[ebp]
  0009e	6a 00		 push	 0
  000a0	50		 push	 eax
  000a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateDirectoryA@8

; 327  : 		mir_snprintf( szFileName + tPathLen, MAX_PATH - tPathLen, "openinbox.html" );

  000a7	2b fe		 sub	 edi, esi
  000a9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@CLNP@openinbox?4html?$AA@ ; `string'
  000ae	8d 84 35 d0 fe
	ff ff		 lea	 eax, DWORD PTR _szFileName$[ebp+esi]
  000b5	57		 push	 edi
  000b6	50		 push	 eax
  000b7	ff 15 1c 00 00
	00		 call	 DWORD PTR _mmi+28

; 328  : 		if (!DBGetContactSetting(NULL, proto->iface.m_szModuleName, "LoginName", &dbv)) {

  000bd	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  000c0	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  000c5	89 45 ec	 mov	 DWORD PTR _cgs$84312[ebp], eax
  000c8	8d 45 e0	 lea	 eax, DWORD PTR _dbv$[ebp]
  000cb	89 45 f4	 mov	 DWORD PTR _cgs$84312[ebp+8], eax
  000ce	8d 45 ec	 lea	 eax, DWORD PTR _cgs$84312[ebp]
  000d1	50		 push	 eax
  000d2	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000d7	6a 00		 push	 0
  000d9	56		 push	 esi
  000da	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cgs$84312[ebp+4], OFFSET FLAT:??_C@_09ONOL@LoginName?$AA@ ; `string'
  000e1	ff 50 24	 call	 DWORD PTR [eax+36]
  000e4	83 c4 18	 add	 esp, 24			; 00000018H
  000e7	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  000ec	85 c0		 test	 eax, eax
  000ee	75 1e		 jne	 SHORT $L84317

; 329  : 			login = mir_strdup(dbv.pszVal);

  000f0	ff 75 e4	 push	 DWORD PTR _dbv$[ebp+4]
  000f3	ff 15 14 00 00
	00		 call	 DWORD PTR _mmi+20
  000f9	89 45 f8	 mov	 DWORD PTR _login$[ebp], eax

; 330  : 			DBFreeVariant(&dbv);

  000fc	8d 45 e0	 lea	 eax, DWORD PTR _dbv$[ebp]
  000ff	50		 push	 eax
  00100	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00105	6a 00		 push	 0
  00107	57		 push	 edi
  00108	ff 50 24	 call	 DWORD PTR [eax+36]
  0010b	83 c4 10	 add	 esp, 16			; 00000010H
$L84317:

; 331  : 
; 332  : 		}
; 333  : 		if (!DBGetContactSetting(NULL, proto->iface.m_szModuleName, "Password", &dbv)) {

  0010e	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  00111	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cgs$84322[ebp+4], OFFSET FLAT:??_C@_08NKKK@Password?$AA@ ; `string'
  00118	89 45 ec	 mov	 DWORD PTR _cgs$84322[ebp], eax
  0011b	8d 45 e0	 lea	 eax, DWORD PTR _dbv$[ebp]
  0011e	89 45 f4	 mov	 DWORD PTR _cgs$84322[ebp+8], eax
  00121	8d 45 ec	 lea	 eax, DWORD PTR _cgs$84322[ebp]
  00124	50		 push	 eax
  00125	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0012a	6a 00		 push	 0
  0012c	56		 push	 esi
  0012d	ff 50 24	 call	 DWORD PTR [eax+36]
  00130	83 c4 0c	 add	 esp, 12			; 0000000cH
  00133	85 c0		 test	 eax, eax
  00135	75 3b		 jne	 SHORT $L84327

; 334  : 			CallService(MS_DB_CRYPT_DECODESTRING, strlen(dbv.pszVal)+1, (LPARAM) dbv.pszVal);

  00137	ff 75 e4	 push	 DWORD PTR _dbv$[ebp+4]
  0013a	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0013f	ff 75 e4	 push	 DWORD PTR _dbv$[ebp+4]
  00142	8d 70 24	 lea	 esi, DWORD PTR [eax+36]
  00145	e8 00 00 00 00	 call	 _strlen
  0014a	59		 pop	 ecx
  0014b	40		 inc	 eax
  0014c	50		 push	 eax
  0014d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@PHIF@DB?1Crypt?1DecodeString?$AA@ ; `string'
  00152	ff 16		 call	 DWORD PTR [esi]

; 335  : 			password = mir_strdup(dbv.pszVal);

  00154	ff 75 e4	 push	 DWORD PTR _dbv$[ebp+4]
  00157	ff 15 14 00 00
	00		 call	 DWORD PTR _mmi+20
  0015d	89 45 fc	 mov	 DWORD PTR _password$[ebp], eax

; 336  : 			DBFreeVariant(&dbv);

  00160	8d 45 e0	 lea	 eax, DWORD PTR _dbv$[ebp]
  00163	50		 push	 eax
  00164	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00169	6a 00		 push	 0
  0016b	57		 push	 edi
  0016c	ff 50 24	 call	 DWORD PTR [eax+36]
  0016f	83 c4 1c	 add	 esp, 28			; 0000001cH
$L84327:

; 337  : 		}
; 338  : 	}
; 339  : 	if (login != NULL && password != NULL) {

  00172	83 7d f8 00	 cmp	 DWORD PTR _login$[ebp], 0
  00176	5f		 pop	 edi
  00177	74 3e		 je	 SHORT $L83863
  00179	83 7d fc 00	 cmp	 DWORD PTR _password$[ebp], 0
  0017d	74 38		 je	 SHORT $L83863

; 340  : 		FILE *out;
; 341  : 		out = fopen( szFileName, "wt" );

  0017f	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _szFileName$[ebp]
  00185	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_02IAAH@wt?$AA@ ; `string'
  0018a	50		 push	 eax
  0018b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  00191	8b f0		 mov	 esi, eax
  00193	59		 pop	 ecx

; 342  : 		if ( out != NULL ) {

  00194	85 f6		 test	 esi, esi
  00196	59		 pop	 ecx
  00197	74 1e		 je	 SHORT $L83863

; 343  : 			fprintf(out, "<html><head></head><body OnLoad=\"document.forms[0].submit();\">"
; 344  : 						 "<form action=\"http://poczta.o2.pl/index.php\" method=\"post\" name=\"login_form\">"
; 345  : 						 "<input type=\"hidden\" name=\"username\" value=\"%s\">"
; 346  : 						 "<input type=\"hidden\" name=\"password\" value=\"%s\">"
; 347  : 						 "</form></body></html>", login, password);

  00199	ff 75 fc	 push	 DWORD PTR _password$[ebp]
  0019c	ff 75 f8	 push	 DWORD PTR _login$[ebp]
  0019f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BAB@GGCC@?$DMhtml?$DO?$DMhead?$DO?$DM?1head?$DO?$DMbody?5OnLoad?$DN@ ; `string'
  001a4	56		 push	 esi
  001a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf

; 348  : 			fclose( out );

  001ab	56		 push	 esi
  001ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  001b2	83 c4 14	 add	 esp, 20			; 00000014H

; 349  : 		} else {

  001b5	eb 13		 jmp	 SHORT $L83867
$L83863:

; 350  : 			strcat(szFileName, "http://poczta.o2.pl/");
; 351  : 		}
; 352  : 	} else {
; 353  : 		strcat(szFileName, "http://poczta.o2.pl/");

  001b7	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _szFileName$[ebp]
  001bd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@NKN@http?3?1?1poczta?4o2?4pl?1?$AA@ ; `string'
  001c2	50		 push	 eax
  001c3	e8 00 00 00 00	 call	 _strcat
  001c8	59		 pop	 ecx
  001c9	59		 pop	 ecx
$L83867:

; 354  : 	}
; 355  : 	mir_free(login);

  001ca	ff 75 f8	 push	 DWORD PTR _login$[ebp]
  001cd	ff 15 0c 00 00
	00		 call	 DWORD PTR _mmi+12

; 356  : 	mir_free(password);

  001d3	ff 75 fc	 push	 DWORD PTR _password$[ebp]
  001d6	ff 15 0c 00 00
	00		 call	 DWORD PTR _mmi+12

; 357  : 	CallService(MS_UTILS_OPENURL, (WPARAM) 1, (LPARAM) szFileName);

  001dc	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _szFileName$[ebp]
  001e2	50		 push	 eax
  001e3	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001e8	6a 01		 push	 1
  001ea	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@EHKK@Utils?1OpenURL?$AA@ ; `string'
  001ef	ff 50 24	 call	 DWORD PTR [eax+36]
  001f2	83 c4 14	 add	 esp, 20			; 00000014H

; 358  : 	return 0;

  001f5	33 c0		 xor	 eax, eax
  001f7	5e		 pop	 esi
  001f8	5b		 pop	 ebx

; 359  : }

  001f9	c9		 leave
  001fa	c3		 ret	 0
_TlenMenuHandleInbox ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@	; `string'
PUBLIC	??_C@_0BD@CNOA@Skin?1Sounds?1AddNew?$AA@	; `string'
PUBLIC	_TlenOnModulesLoaded
PUBLIC	??_C@_0BF@ODDI@DB?1Contact?1FindFirst?$AA@	; `string'
PUBLIC	??_C@_0BK@HFIO@Proto?1GetContactBaseProto?$AA@	; `string'
PUBLIC	??_C@_06IOLI@Status?$AA@			; `string'
PUBLIC	??_C@_0BE@LDI@DB?1Contact?1FindNext?$AA@	; `string'
PUBLIC	??_C@_0O@KEJH@Incoming?5mail?$AA@		; `string'
PUBLIC	??_C@_02DILL@?$CFs?$AA@				; `string'
PUBLIC	??_C@_0P@DCBH@TlenMailNotify?$AA@		; `string'
PUBLIC	??_C@_05PJFK@Alert?$AA@				; `string'
PUBLIC	??_C@_0BA@NMMF@TlenAlertNotify?$AA@		; `string'
PUBLIC	??_C@_0L@OJOO@Voice?5chat?$AA@			; `string'
PUBLIC	??_C@_0BA@GHLJ@TlenVoiceNotify?$AA@		; `string'
PUBLIC	??_C@_0BE@MHKM@UserInfo?1Initialise?$AA@	; `string'
EXTRN	_memset:NEAR
EXTRN	_strcmp:NEAR
EXTRN	__imp__sprintf:NEAR
EXTRN	_TlenUserInfoInit:NEAR
EXTRN	_HookEventObj_Ex:NEAR
EXTRN	_TlenMUCInit:NEAR
;	COMDAT ??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_skin.h
_DATA	SEGMENT
??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ DB 'DB/Contact/WriteSetting'
	DB	00H						; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@CNOA@Skin?1Sounds?1AddNew?$AA@
_DATA	SEGMENT
??_C@_0BD@CNOA@Skin?1Sounds?1AddNew?$AA@ DB 'Skin/Sounds/AddNew', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODDI@DB?1Contact?1FindFirst?$AA@
_DATA	SEGMENT
??_C@_0BF@ODDI@DB?1Contact?1FindFirst?$AA@ DB 'DB/Contact/FindFirst', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BK@HFIO@Proto?1GetContactBaseProto?$AA@
_DATA	SEGMENT
??_C@_0BK@HFIO@Proto?1GetContactBaseProto?$AA@ DB 'Proto/GetContactBasePr'
	DB	'oto', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_06IOLI@Status?$AA@
_DATA	SEGMENT
??_C@_06IOLI@Status?$AA@ DB 'Status', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@LDI@DB?1Contact?1FindNext?$AA@
_DATA	SEGMENT
??_C@_0BE@LDI@DB?1Contact?1FindNext?$AA@ DB 'DB/Contact/FindNext', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@KEJH@Incoming?5mail?$AA@
_DATA	SEGMENT
??_C@_0O@KEJH@Incoming?5mail?$AA@ DB 'Incoming mail', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_02DILL@?$CFs?$AA@
_DATA	SEGMENT
??_C@_02DILL@?$CFs?$AA@ DB '%s', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@DCBH@TlenMailNotify?$AA@
_DATA	SEGMENT
??_C@_0P@DCBH@TlenMailNotify?$AA@ DB 'TlenMailNotify', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_05PJFK@Alert?$AA@
_DATA	SEGMENT
??_C@_05PJFK@Alert?$AA@ DB 'Alert', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@NMMF@TlenAlertNotify?$AA@
_DATA	SEGMENT
??_C@_0BA@NMMF@TlenAlertNotify?$AA@ DB 'TlenAlertNotify', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@OJOO@Voice?5chat?$AA@
_DATA	SEGMENT
??_C@_0L@OJOO@Voice?5chat?$AA@ DB 'Voice chat', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@GHLJ@TlenVoiceNotify?$AA@
_DATA	SEGMENT
??_C@_0BA@GHLJ@TlenVoiceNotify?$AA@ DB 'TlenVoiceNotify', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@MHKM@UserInfo?1Initialise?$AA@
_DATA	SEGMENT
??_C@_0BE@MHKM@UserInfo?1Initialise?$AA@ DB 'UserInfo/Initialise', 00H ; `string'
_DATA	ENDS
;	COMDAT _TlenOnModulesLoaded
_TEXT	SEGMENT
_dbv$84335 = -12
_cgs$84336 = -32
_cws$84343 = -52
_ssd$84348 = -20
_ssd$84353 = -20
$T84354 = 8
_ssd$84358 = -20
_ptr$ = 8
_str$ = -180
_TlenOnModulesLoaded PROC NEAR				; COMDAT

; 361  : int TlenOnModulesLoaded(void *ptr, WPARAM wParam, LPARAM lParam) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H

; 362  :     
; 363  : 	char str[128];
; 364  :     TlenProtocol *proto = (TlenProtocol *)ptr;
; 365  :     /* Set all contacts to offline */
; 366  : 	HANDLE hContact = (HANDLE) CallService(MS_DB_CONTACT_FINDFIRST, 0, 0);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	6a 00		 push	 0
  00013	6a 00		 push	 0
  00015	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@ODDI@DB?1Contact?1FindFirst?$AA@ ; `string'
  0001a	ff 50 24	 call	 DWORD PTR [eax+36]

; 367  : 	while (hContact != NULL) {

  0001d	8b 75 08	 mov	 esi, DWORD PTR _ptr$[ebp]
  00020	8b d8		 mov	 ebx, eax
  00022	83 c4 0c	 add	 esp, 12			; 0000000cH
  00025	85 db		 test	 ebx, ebx
  00027	0f 84 a3 00 00
	00		 je	 $L83888
  0002d	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_06IOLI@Status?$AA@ ; `string'
$L83887:

; 368  : 		char *szProto = (char *) CallService(MS_PROTO_GETCONTACTBASEPROTO, (WPARAM) hContact, 0);

  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00037	6a 00		 push	 0
  00039	53		 push	 ebx
  0003a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BK@HFIO@Proto?1GetContactBaseProto?$AA@ ; `string'
  0003f	ff 50 24	 call	 DWORD PTR [eax+36]
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH

; 369  : 		if(szProto!=NULL && !strcmp(szProto, proto->iface.m_szModuleName)) {

  00045	85 c0		 test	 eax, eax
  00047	74 6a		 je	 SHORT $L84342
  00049	ff 76 1c	 push	 DWORD PTR [esi+28]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 _strcmp
  00052	59		 pop	 ecx
  00053	85 c0		 test	 eax, eax
  00055	59		 pop	 ecx
  00056	75 5b		 jne	 SHORT $L84342

; 370  : 			if (DBGetContactSettingWord(hContact, proto->iface.m_szModuleName, "Status", ID_STATUS_OFFLINE) != ID_STATUS_OFFLINE) {

  00058	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0005b	89 7d e4	 mov	 DWORD PTR _cgs$84336[ebp+4], edi
  0005e	89 45 e0	 mov	 DWORD PTR _cgs$84336[ebp], eax
  00061	8d 45 f4	 lea	 eax, DWORD PTR _dbv$84335[ebp]
  00064	89 45 e8	 mov	 DWORD PTR _cgs$84336[ebp+8], eax
  00067	8d 45 e0	 lea	 eax, DWORD PTR _cgs$84336[ebp]
  0006a	50		 push	 eax
  0006b	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00070	53		 push	 ebx
  00071	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00076	ff 50 24	 call	 DWORD PTR [eax+36]
  00079	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007c	85 c0		 test	 eax, eax
  0007e	75 33		 jne	 SHORT $L84342
  00080	0f b7 45 f8	 movzx	 eax, WORD PTR _dbv$84335[ebp+4]
  00084	3d 87 9c 00 00	 cmp	 eax, 40071		; 00009c87H
  00089	74 28		 je	 SHORT $L84342

; 371  : 				DBWriteContactSettingWord(hContact, proto->iface.m_szModuleName, "Status", ID_STATUS_OFFLINE);

  0008b	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0008e	89 7d d0	 mov	 DWORD PTR _cws$84343[ebp+4], edi
  00091	89 45 cc	 mov	 DWORD PTR _cws$84343[ebp], eax
  00094	8d 45 cc	 lea	 eax, DWORD PTR _cws$84343[ebp]
  00097	50		 push	 eax
  00098	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0009d	53		 push	 ebx
  0009e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ ; `string'
  000a3	c6 45 d4 02	 mov	 BYTE PTR _cws$84343[ebp+8], 2
  000a7	66 c7 45 d8 87
	9c		 mov	 WORD PTR _cws$84343[ebp+12], 40071 ; 00009c87H
  000ad	ff 50 24	 call	 DWORD PTR [eax+36]
  000b0	83 c4 0c	 add	 esp, 12			; 0000000cH
$L84342:

; 372  : 			}
; 373  : 		}
; 374  : 		hContact = (HANDLE) CallService(MS_DB_CONTACT_FINDNEXT, (WPARAM) hContact, 0);

  000b3	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000b8	6a 00		 push	 0
  000ba	53		 push	 ebx
  000bb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@LDI@DB?1Contact?1FindNext?$AA@ ; `string'
  000c0	ff 50 24	 call	 DWORD PTR [eax+36]
  000c3	8b d8		 mov	 ebx, eax
  000c5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c8	85 db		 test	 ebx, ebx
  000ca	0f 85 62 ff ff
	ff		 jne	 $L83887
$L83888:

; 375  : 	}
; 376  : 	TlenMUCInit(proto);

  000d0	56		 push	 esi
  000d1	e8 00 00 00 00	 call	 _TlenMUCInit

; 377  : 	sprintf(str, "%s", Translate("Incoming mail"));

  000d6	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000db	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], OFFSET FLAT:??_C@_0O@KEJH@Incoming?5mail?$AA@ ; `string'
  000e2	6a 00		 push	 0
  000e4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  000e9	ff 50 24	 call	 DWORD PTR [eax+36]
  000ec	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__sprintf
  000f2	50		 push	 eax
  000f3	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  000f9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_02DILL@?$CFs?$AA@ ; `string'
  000fe	50		 push	 eax
  000ff	ff d7		 call	 edi

; 378  : 	SkinAddNewSoundEx("TlenMailNotify", proto->iface.m_szProtoName, str);

  00101	8b 5e 18	 mov	 ebx, DWORD PTR [esi+24]
  00104	6a 14		 push	 20			; 00000014H
  00106	8d 45 ec	 lea	 eax, DWORD PTR _ssd$84348[ebp]
  00109	6a 00		 push	 0
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 _memset
  00111	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00117	89 5d fc	 mov	 DWORD PTR _ssd$84348[ebp+16], ebx
  0011a	89 45 f4	 mov	 DWORD PTR _ssd$84348[ebp+8], eax
  0011d	8d 45 ec	 lea	 eax, DWORD PTR _ssd$84348[ebp]
  00120	50		 push	 eax
  00121	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00126	bb 00 00 00 00	 mov	 ebx, OFFSET FLAT:??_C@_0BD@CNOA@Skin?1Sounds?1AddNew?$AA@ ; `string'
  0012b	6a 00		 push	 0
  0012d	53		 push	 ebx
  0012e	c7 45 ec 14 00
	00 00		 mov	 DWORD PTR _ssd$84348[ebp], 20 ; 00000014H
  00135	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _ssd$84348[ebp+4], OFFSET FLAT:??_C@_0P@DCBH@TlenMailNotify?$AA@ ; `string'
  0013c	ff 50 24	 call	 DWORD PTR [eax+36]

; 379  : 	sprintf(str, "%s", Translate("Alert"));

  0013f	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00144	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05PJFK@Alert?$AA@ ; `string'
  00149	6a 00		 push	 0
  0014b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  00150	ff 50 24	 call	 DWORD PTR [eax+36]
  00153	50		 push	 eax
  00154	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  0015a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_02DILL@?$CFs?$AA@ ; `string'
  0015f	50		 push	 eax
  00160	ff d7		 call	 edi

; 380  : 	SkinAddNewSoundEx("TlenAlertNotify", proto->iface.m_szProtoName, str);

  00162	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00165	83 c4 48	 add	 esp, 72			; 00000048H
  00168	89 45 08	 mov	 DWORD PTR $T84354[ebp], eax
  0016b	8d 45 ec	 lea	 eax, DWORD PTR _ssd$84353[ebp]
  0016e	6a 14		 push	 20			; 00000014H
  00170	6a 00		 push	 0
  00172	50		 push	 eax
  00173	e8 00 00 00 00	 call	 _memset
  00178	8b 45 08	 mov	 eax, DWORD PTR $T84354[ebp]
  0017b	c7 45 ec 14 00
	00 00		 mov	 DWORD PTR _ssd$84353[ebp], 20 ; 00000014H
  00182	89 45 fc	 mov	 DWORD PTR _ssd$84353[ebp+16], eax
  00185	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  0018b	89 45 f4	 mov	 DWORD PTR _ssd$84353[ebp+8], eax
  0018e	8d 45 ec	 lea	 eax, DWORD PTR _ssd$84353[ebp]
  00191	50		 push	 eax
  00192	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00197	6a 00		 push	 0
  00199	53		 push	 ebx
  0019a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _ssd$84353[ebp+4], OFFSET FLAT:??_C@_0BA@NMMF@TlenAlertNotify?$AA@ ; `string'
  001a1	ff 50 24	 call	 DWORD PTR [eax+36]

; 381  : 	sprintf(str, "%s", Translate("Voice chat"));

  001a4	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001a9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@OJOO@Voice?5chat?$AA@ ; `string'
  001ae	6a 00		 push	 0
  001b0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  001b5	ff 50 24	 call	 DWORD PTR [eax+36]
  001b8	50		 push	 eax
  001b9	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  001bf	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_02DILL@?$CFs?$AA@ ; `string'
  001c4	50		 push	 eax
  001c5	ff d7		 call	 edi

; 382  : 	SkinAddNewSoundEx("TlenVoiceNotify", proto->iface.m_szProtoName, str);

  001c7	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  001ca	6a 14		 push	 20			; 00000014H
  001cc	8d 45 ec	 lea	 eax, DWORD PTR _ssd$84358[ebp]
  001cf	6a 00		 push	 0
  001d1	50		 push	 eax
  001d2	e8 00 00 00 00	 call	 _memset
  001d7	c7 45 ec 14 00
	00 00		 mov	 DWORD PTR _ssd$84358[ebp], 20 ; 00000014H
  001de	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _ssd$84358[ebp+4], OFFSET FLAT:??_C@_0BA@GHLJ@TlenVoiceNotify?$AA@ ; `string'
  001e5	89 7d fc	 mov	 DWORD PTR _ssd$84358[ebp+16], edi
  001e8	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  001ee	89 45 f4	 mov	 DWORD PTR _ssd$84358[ebp+8], eax
  001f1	8d 45 ec	 lea	 eax, DWORD PTR _ssd$84358[ebp]
  001f4	50		 push	 eax
  001f5	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001fa	6a 00		 push	 0
  001fc	53		 push	 ebx
  001fd	ff 50 24	 call	 DWORD PTR [eax+36]
  00200	83 c4 48	 add	 esp, 72			; 00000048H

; 383  : 
; 384  :     HookEventObj_Ex(ME_USERINFO_INITIALISE, proto, TlenUserInfoInit);

  00203	68 00 00 00 00	 push	 OFFSET FLAT:_TlenUserInfoInit
  00208	56		 push	 esi
  00209	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@MHKM@UserInfo?1Initialise?$AA@ ; `string'
  0020e	e8 00 00 00 00	 call	 _HookEventObj_Ex
  00213	83 c4 0c	 add	 esp, 12			; 0000000cH

; 385  : 
; 386  :     return 0;

  00216	33 c0		 xor	 eax, eax
  00218	5f		 pop	 edi
  00219	5e		 pop	 esi
  0021a	5b		 pop	 ebx

; 387  : }

  0021b	c9		 leave
  0021c	c3		 ret	 0
_TlenOnModulesLoaded ENDP
_TEXT	ENDS
PUBLIC	_TlenPreShutdown
EXTRN	_TlenVoiceCancelAll:NEAR
EXTRN	_TlenFileCancelAll:NEAR
;	COMDAT _TlenPreShutdown
_TEXT	SEGMENT
_ptr$ = 8
_TlenPreShutdown PROC NEAR				; COMDAT

; 391  :     TlenProtocol *proto = (TlenProtocol *)ptr;
; 392  : 	TlenVoiceCancelAll(proto);

  00000	ff 74 24 04	 push	 DWORD PTR _ptr$[esp-4]
  00004	e8 00 00 00 00	 call	 _TlenVoiceCancelAll

; 393  : 	TlenFileCancelAll(proto);

  00009	ff 74 24 08	 push	 DWORD PTR _ptr$[esp]
  0000d	e8 00 00 00 00	 call	 _TlenFileCancelAll
  00012	59		 pop	 ecx

; 394  : 	return 0;

  00013	33 c0		 xor	 eax, eax
  00015	59		 pop	 ecx

; 395  : }

  00016	c3		 ret	 0
_TlenPreShutdown ENDP
_TEXT	ENDS
PUBLIC	_Load
PUBLIC	??_C@_0BO@HNHJ@Miranda?1System?1GetVersionText?$AA@ ; `string'
PUBLIC	??_C@_07NCOA@Unicode?$AA@			; `string'
PUBLIC	??_C@_0BF@DKCJ@Proto?1RegisterModule?$AA@	; `string'
PUBLIC	??_C@_0BG@FJFA@Miranda?1System?1GetMMI?$AA@	; `string'
PUBLIC	??_C@_0BH@FHMP@Miranda?1System?1GetUTFI?$AA@	; `string'
PUBLIC	??_C@_0BH@CHLF@Miranda?1System?1GetMD5I?$AA@	; `string'
PUBLIC	??_C@_0BI@FOPF@Miranda?1System?1GetSHA1I?$AA@	; `string'
PUBLIC	??_C@_04CBAG@TLEN?$AA@				; `string'
EXTRN	__imp__InitializeCriticalSection@4:NEAR
EXTRN	__imp__srand:NEAR
EXTRN	__imp__DuplicateHandle@28:NEAR
EXTRN	__imp__strstr:NEAR
EXTRN	__imp__time:NEAR
EXTRN	__imp__GetCurrentProcess@0:NEAR
EXTRN	__imp__GetCurrentThread@0:NEAR
;	COMDAT ??_C@_0BG@FJFA@Miranda?1System?1GetMMI?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_system.h
_DATA	SEGMENT
??_C@_0BG@FJFA@Miranda?1System?1GetMMI?$AA@ DB 'Miranda/System/GetMMI', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@FHMP@Miranda?1System?1GetUTFI?$AA@
_DATA	SEGMENT
??_C@_0BH@FHMP@Miranda?1System?1GetUTFI?$AA@ DB 'Miranda/System/GetUTFI', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CHLF@Miranda?1System?1GetMD5I?$AA@
_DATA	SEGMENT
??_C@_0BH@CHLF@Miranda?1System?1GetMD5I?$AA@ DB 'Miranda/System/GetMD5I', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BI@FOPF@Miranda?1System?1GetSHA1I?$AA@
_DATA	SEGMENT
??_C@_0BI@FOPF@Miranda?1System?1GetSHA1I?$AA@ DB 'Miranda/System/GetSHA1I'
	DB	00H						; `string'
_DATA	ENDS
;	COMDAT ??_C@_04CBAG@TLEN?$AA@
_DATA	SEGMENT
??_C@_04CBAG@TLEN?$AA@ DB 'TLEN', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BO@HNHJ@Miranda?1System?1GetVersionText?$AA@
_DATA	SEGMENT
??_C@_0BO@HNHJ@Miranda?1System?1GetVersionText?$AA@ DB 'Miranda/System/Ge'
	DB	'tVersionText', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_07NCOA@Unicode?$AA@
_DATA	SEGMENT
??_C@_07NCOA@Unicode?$AA@ DB 'Unicode', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DKCJ@Proto?1RegisterModule?$AA@
_DATA	SEGMENT
??_C@_0BF@DKCJ@Proto?1RegisterModule?$AA@ DB 'Proto/RegisterModule', 00H ; `string'
_DATA	ENDS
;	COMDAT _Load
_TEXT	SEGMENT
_link$ = 8
_str$ = -524
_pd$ = -24
_Load	PROC NEAR					; COMDAT

; 576  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 02 00
	00		 sub	 esp, 524		; 0000020cH

; 577  :     char str[500];
; 578  : 	PROTOCOLDESCRIPTOR pd;
; 579  :     
; 580  : 	pluginLink = link;

  00009	8b 45 08	 mov	 eax, DWORD PTR _link$[ebp]
  0000c	56		 push	 esi
  0000d	57		 push	 edi

; 581  : 	mir_getMMI( &mmi );

  0000e	33 ff		 xor	 edi, edi
  00010	68 00 00 00 00	 push	 OFFSET FLAT:_mmi
  00015	57		 push	 edi
  00016	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@FJFA@Miranda?1System?1GetMMI?$AA@ ; `string'
  0001b	a3 00 00 00 00	 mov	 DWORD PTR _pluginLink, eax
  00020	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR _mmi, 60	; 0000003cH
  0002a	ff 50 24	 call	 DWORD PTR [eax+36]

; 582  :     mir_getMD5I( &md5i );

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00032	6a 14		 push	 20			; 00000014H
  00034	5e		 pop	 esi
  00035	68 00 00 00 00	 push	 OFFSET FLAT:_md5i
  0003a	57		 push	 edi
  0003b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@CHLF@Miranda?1System?1GetMD5I?$AA@ ; `string'
  00040	89 35 00 00 00
	00		 mov	 DWORD PTR _md5i, esi
  00046	ff 50 24	 call	 DWORD PTR [eax+36]

; 583  :     mir_getSHA1I( &sha1i );

  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0004e	68 00 00 00 00	 push	 OFFSET FLAT:_sha1i
  00053	57		 push	 edi
  00054	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@FOPF@Miranda?1System?1GetSHA1I?$AA@ ; `string'
  00059	89 35 00 00 00
	00		 mov	 DWORD PTR _sha1i, esi
  0005f	ff 50 24	 call	 DWORD PTR [eax+36]

; 584  : 	mir_getUTFI( &utfi );

  00062	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00067	68 00 00 00 00	 push	 OFFSET FLAT:_utfi
  0006c	57		 push	 edi
  0006d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@FHMP@Miranda?1System?1GetUTFI?$AA@ ; `string'
  00072	c7 05 00 00 00
	00 1c 00 00 00	 mov	 DWORD PTR _utfi, 28	; 0000001cH
  0007c	ff 50 24	 call	 DWORD PTR [eax+36]

; 585  : 
; 586  : 	DuplicateHandle(GetCurrentProcess(), GetCurrentThread(), GetCurrentProcess(), &hMainThread, THREAD_SET_CONTEXT, FALSE, 0);

  0007f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetCurrentProcess@0
  00085	83 c4 30	 add	 esp, 48			; 00000030H
  00088	57		 push	 edi
  00089	57		 push	 edi
  0008a	6a 10		 push	 16			; 00000010H
  0008c	68 00 00 00 00	 push	 OFFSET FLAT:_hMainThread
  00091	ff d6		 call	 esi
  00093	50		 push	 eax
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThread@0
  0009a	50		 push	 eax
  0009b	ff d6		 call	 esi
  0009d	50		 push	 eax
  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DuplicateHandle@28

; 587  : 
; 588  :     srand((unsigned) time(NULL));

  000a4	57		 push	 edi
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__time
  000ab	50		 push	 eax
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__srand

; 589  : 
; 590  :     CallService(MS_SYSTEM_GETVERSIONTEXT, (WPARAM)sizeof(str), (LPARAM)(char*)str);

  000b2	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  000b8	50		 push	 eax
  000b9	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000be	68 f4 01 00 00	 push	 500			; 000001f4H
  000c3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BO@HNHJ@Miranda?1System?1GetVersionText?$AA@ ; `string'
  000c8	ff 50 24	 call	 DWORD PTR [eax+36]

; 591  :     if (strstr(str, "Unicode")) {

  000cb	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  000d1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07NCOA@Unicode?$AA@ ; `string'
  000d6	50		 push	 eax
  000d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strstr
  000dd	83 c4 1c	 add	 esp, 28			; 0000001cH
  000e0	85 c0		 test	 eax, eax
  000e2	74 0a		 je	 SHORT $L84047

; 592  :         isMIrandaUnicode = TRUE;

  000e4	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _isMIrandaUnicode, 1
$L84047:

; 593  : 	}
; 594  : 	TlenRegisterIcons();

  000ee	e8 00 00 00 00	 call	 _TlenRegisterIcons

; 595  :     
; 596  : 	// Register protocol module
; 597  : 	ZeroMemory(&pd, sizeof(PROTOCOLDESCRIPTOR));

  000f3	6a 18		 push	 24			; 00000018H
  000f5	8d 45 e8	 lea	 eax, DWORD PTR _pd$[ebp]
  000f8	5e		 pop	 esi
  000f9	56		 push	 esi
  000fa	57		 push	 edi
  000fb	50		 push	 eax
  000fc	e8 00 00 00 00	 call	 _memset

; 598  : 	pd.cbSize = sizeof(PROTOCOLDESCRIPTOR);
; 599  : 	pd.szName = "TLEN";
; 600  :     pd.fnInit = ( pfnInitProto )tlenProtoInit;
; 601  : 	pd.fnUninit = ( pfnUninitProto )tlenProtoUninit;
; 602  : 	pd.type = PROTOTYPE_PROTOCOL;
; 603  : 	CallService(MS_PROTO_REGISTERMODULE, 0, (LPARAM) &pd);

  00101	8d 45 e8	 lea	 eax, DWORD PTR _pd$[ebp]
  00104	89 75 e8	 mov	 DWORD PTR _pd$[ebp], esi
  00107	50		 push	 eax
  00108	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0010d	57		 push	 edi
  0010e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@DKCJ@Proto?1RegisterModule?$AA@ ; `string'
  00113	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pd$[ebp+4], OFFSET FLAT:??_C@_04CBAG@TLEN?$AA@ ; `string'
  0011a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pd$[ebp+12], OFFSET FLAT:_tlenProtoInit
  00121	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pd$[ebp+16], OFFSET FLAT:_tlenProtoUninit
  00128	c7 45 f0 e8 03
	00 00		 mov	 DWORD PTR _pd$[ebp+8], 1000 ; 000003e8H
  0012f	ff 50 24	 call	 DWORD PTR [eax+36]
  00132	83 c4 18	 add	 esp, 24			; 00000018H

; 604  :   
; 605  : 	InitializeCriticalSection(&mutex);

  00135	68 00 00 00 00	 push	 OFFSET FLAT:_mutex
  0013a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4
  00140	5f		 pop	 edi

; 606  :    
; 607  : 	return 0;

  00141	33 c0		 xor	 eax, eax
  00143	5e		 pop	 esi

; 608  : }

  00144	c9		 leave
  00145	c3		 ret	 0
_Load	ENDP
_TEXT	ENDS
PUBLIC	??_C@_19JAHN@?$AAT?$AAl?$AAe?$AAn?$AA?$AA@	; `string'
PUBLIC	??_C@_0BE@HMGE@Skin2?1Icons?1AddIcon?$AA@	; `string'
EXTRN	__imp__GetModuleFileNameA@12:NEAR
;	COMDAT ??_C@_19JAHN@?$AAT?$AAl?$AAe?$AAn?$AA?$AA@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\tlen.c
_DATA	SEGMENT
??_C@_19JAHN@?$AAT?$AAl?$AAe?$AAn?$AA?$AA@ DB 'T', 00H, 'l', 00H, 'e', 00H
	DB	'n', 00H, 00H, 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@HMGE@Skin2?1Icons?1AddIcon?$AA@
_DATA	SEGMENT
??_C@_0BE@HMGE@Skin2?1Icons?1AddIcon?$AA@ DB 'Skin2/Icons/AddIcon', 00H ; `string'
_DATA	ENDS
;	COMDAT _TlenRegisterIcons
_TEXT	SEGMENT
_iconName$ = -296
_path$ = -556
_sid$ = -40
_TlenRegisterIcons PROC NEAR				; COMDAT

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 2c 02 00
	00		 sub	 esp, 556		; 0000022cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 164  :     char iconName[256];
; 165  :     char path[MAX_PATH];
; 166  :     SKINICONDESC sid = { 0 };

  0000c	6a 09		 push	 9
  0000e	33 db		 xor	 ebx, ebx
  00010	59		 pop	 ecx
  00011	33 c0		 xor	 eax, eax
  00013	8d 7d dc	 lea	 edi, DWORD PTR _sid$[ebp+4]
  00016	89 5d d8	 mov	 DWORD PTR _sid$[ebp], ebx

; 167  :     GetModuleFileNameA(hInst, path, MAX_PATH);

  00019	68 04 01 00 00	 push	 260			; 00000104H
  0001e	f3 ab		 rep stosd
  00020	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _path$[ebp]
  00026	50		 push	 eax
  00027	ff 35 00 00 00
	00		 push	 DWORD PTR _hInst
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleFileNameA@12

; 168  :     sid.cbSize = sizeof(SKINICONDESC);
; 169  :     sid.cx = sid.cy = 16;

  00033	6a 10		 push	 16			; 00000010H

; 170  :     sid.ptszSection = _T("Tlen");
; 171  :     sid.pszDefaultFile = path;
; 172  :     #ifdef UNICODE
; 173  :     sid.flags = SIDF_UNICODE;

  00035	be 00 01 00 00	 mov	 esi, 256		; 00000100H
  0003a	58		 pop	 eax
  0003b	c7 45 d8 28 00
	00 00		 mov	 DWORD PTR _sid$[ebp], 40 ; 00000028H
  00042	89 45 f8	 mov	 DWORD PTR _sid$[ebp+32], eax
  00045	89 45 f4	 mov	 DWORD PTR _sid$[ebp+28], eax
  00048	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _path$[ebp]

; 174  :     #endif
; 175  :     GetIconName(iconName, sizeof(iconName), TLEN_IDI_TLEN);

  0004e	53		 push	 ebx
  0004f	89 45 e8	 mov	 DWORD PTR _sid$[ebp+16], eax
  00052	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  00058	56		 push	 esi
  00059	50		 push	 eax
  0005a	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _sid$[ebp+4], OFFSET FLAT:??_C@_19JAHN@?$AAT?$AAl?$AAe?$AAn?$AA?$AA@ ; `string'
  00061	89 75 fc	 mov	 DWORD PTR _sid$[ebp+36], esi
  00064	e8 00 00 00 00	 call	 _GetIconName

; 176  :     sid.pszName = (char *) iconName;

  00069	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]

; 177  :     sid.iDefaultIndex = -IDI_TLEN;
; 178  :     sid.ptszDescription = GetIconDescription(TLEN_IDI_TLEN);

  0006f	53		 push	 ebx
  00070	89 45 e4	 mov	 DWORD PTR _sid$[ebp+12], eax
  00073	c7 45 ec 9c ff
	ff ff		 mov	 DWORD PTR _sid$[ebp+20], -100 ; ffffff9cH
  0007a	e8 00 00 00 00	 call	 _GetIconDescription
  0007f	89 45 e0	 mov	 DWORD PTR _sid$[ebp+8], eax

; 179  :     CallService(MS_SKIN2_ADDICON, 0, (LPARAM)&sid);

  00082	8d 45 d8	 lea	 eax, DWORD PTR _sid$[ebp]
  00085	50		 push	 eax
  00086	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0008b	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_0BE@HMGE@Skin2?1Icons?1AddIcon?$AA@ ; `string'
  00090	53		 push	 ebx
  00091	57		 push	 edi
  00092	ff 50 24	 call	 DWORD PTR [eax+36]

; 180  :     GetIconName(iconName, sizeof(iconName), TLEN_IDI_MAIL);

  00095	6a 01		 push	 1
  00097	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  0009d	56		 push	 esi
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 _GetIconName

; 181  :     sid.pszName = (char *) iconName;

  000a4	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]

; 182  :     sid.iDefaultIndex = -IDI_MAIL;
; 183  :     sid.ptszDescription = GetIconDescription(TLEN_IDI_MAIL);

  000aa	6a 01		 push	 1
  000ac	89 45 e4	 mov	 DWORD PTR _sid$[ebp+12], eax
  000af	c7 45 ec 9b ff
	ff ff		 mov	 DWORD PTR _sid$[ebp+20], -101 ; ffffff9bH
  000b6	e8 00 00 00 00	 call	 _GetIconDescription
  000bb	89 45 e0	 mov	 DWORD PTR _sid$[ebp+8], eax

; 184  :     CallService(MS_SKIN2_ADDICON, 0, (LPARAM)&sid);

  000be	8d 45 d8	 lea	 eax, DWORD PTR _sid$[ebp]
  000c1	50		 push	 eax
  000c2	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000c7	53		 push	 ebx
  000c8	57		 push	 edi
  000c9	ff 50 24	 call	 DWORD PTR [eax+36]

; 185  :     GetIconName(iconName, sizeof(iconName), TLEN_IDI_MUC);

  000cc	6a 02		 push	 2
  000ce	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  000d4	56		 push	 esi
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 _GetIconName
  000db	83 c4 44	 add	 esp, 68			; 00000044H

; 186  :     sid.pszName = (char *) iconName;

  000de	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  000e4	89 45 e4	 mov	 DWORD PTR _sid$[ebp+12], eax

; 187  :     sid.iDefaultIndex = -IDI_MUC;

  000e7	c7 45 ec 9a ff
	ff ff		 mov	 DWORD PTR _sid$[ebp+20], -102 ; ffffff9aH

; 188  :     sid.ptszDescription = GetIconDescription(TLEN_IDI_MUC);

  000ee	6a 02		 push	 2
  000f0	e8 00 00 00 00	 call	 _GetIconDescription
  000f5	89 45 e0	 mov	 DWORD PTR _sid$[ebp+8], eax

; 189  :     CallService(MS_SKIN2_ADDICON, 0, (LPARAM)&sid);

  000f8	8d 45 d8	 lea	 eax, DWORD PTR _sid$[ebp]
  000fb	50		 push	 eax
  000fc	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00101	53		 push	 ebx
  00102	57		 push	 edi
  00103	ff 50 24	 call	 DWORD PTR [eax+36]

; 190  :     GetIconName(iconName, sizeof(iconName), TLEN_IDI_CHATS);

  00106	6a 03		 push	 3
  00108	56		 push	 esi
  00109	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  0010f	50		 push	 eax
  00110	e8 00 00 00 00	 call	 _GetIconName

; 191  :     sid.pszName = (char *) iconName;

  00115	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]

; 192  :     sid.iDefaultIndex = -IDI_CHATS;
; 193  :     sid.ptszDescription = GetIconDescription(TLEN_IDI_CHATS);

  0011b	6a 03		 push	 3
  0011d	89 45 e4	 mov	 DWORD PTR _sid$[ebp+12], eax
  00120	c7 45 ec 99 ff
	ff ff		 mov	 DWORD PTR _sid$[ebp+20], -103 ; ffffff99H
  00127	e8 00 00 00 00	 call	 _GetIconDescription
  0012c	89 45 e0	 mov	 DWORD PTR _sid$[ebp+8], eax

; 194  :     CallService(MS_SKIN2_ADDICON, 0, (LPARAM)&sid);

  0012f	8d 45 d8	 lea	 eax, DWORD PTR _sid$[ebp]
  00132	50		 push	 eax
  00133	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00138	53		 push	 ebx
  00139	57		 push	 edi
  0013a	ff 50 24	 call	 DWORD PTR [eax+36]

; 195  :     GetIconName(iconName, sizeof(iconName), TLEN_IDI_GRANT);

  0013d	6a 04		 push	 4
  0013f	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  00145	56		 push	 esi
  00146	50		 push	 eax
  00147	e8 00 00 00 00	 call	 _GetIconName

; 196  :     sid.pszName = (char *) iconName;

  0014c	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]

; 197  :     sid.iDefaultIndex = -IDI_GRANT;
; 198  :     sid.ptszDescription = GetIconDescription(TLEN_IDI_GRANT);

  00152	6a 04		 push	 4
  00154	89 45 e4	 mov	 DWORD PTR _sid$[ebp+12], eax
  00157	c7 45 ec 98 ff
	ff ff		 mov	 DWORD PTR _sid$[ebp+20], -104 ; ffffff98H
  0015e	e8 00 00 00 00	 call	 _GetIconDescription
  00163	89 45 e0	 mov	 DWORD PTR _sid$[ebp+8], eax

; 199  :     CallService(MS_SKIN2_ADDICON, 0, (LPARAM)&sid);

  00166	8d 45 d8	 lea	 eax, DWORD PTR _sid$[ebp]
  00169	50		 push	 eax
  0016a	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0016f	53		 push	 ebx
  00170	57		 push	 edi
  00171	ff 50 24	 call	 DWORD PTR [eax+36]
  00174	83 c4 48	 add	 esp, 72			; 00000048H

; 200  :     GetIconName(iconName, sizeof(iconName), TLEN_IDI_REQUEST);

  00177	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  0017d	6a 05		 push	 5
  0017f	56		 push	 esi
  00180	50		 push	 eax
  00181	e8 00 00 00 00	 call	 _GetIconName

; 201  :     sid.pszName = (char *) iconName;

  00186	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]

; 202  :     sid.iDefaultIndex = -IDI_REQUEST;
; 203  :     sid.ptszDescription = GetIconDescription(TLEN_IDI_REQUEST);

  0018c	6a 05		 push	 5
  0018e	89 45 e4	 mov	 DWORD PTR _sid$[ebp+12], eax
  00191	c7 45 ec 97 ff
	ff ff		 mov	 DWORD PTR _sid$[ebp+20], -105 ; ffffff97H
  00198	e8 00 00 00 00	 call	 _GetIconDescription
  0019d	89 45 e0	 mov	 DWORD PTR _sid$[ebp+8], eax

; 204  :     CallService(MS_SKIN2_ADDICON, 0, (LPARAM)&sid);

  001a0	8d 45 d8	 lea	 eax, DWORD PTR _sid$[ebp]
  001a3	50		 push	 eax
  001a4	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001a9	53		 push	 ebx
  001aa	57		 push	 edi
  001ab	ff 50 24	 call	 DWORD PTR [eax+36]

; 205  :     GetIconName(iconName, sizeof(iconName), TLEN_IDI_VOICE);

  001ae	6a 06		 push	 6
  001b0	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  001b6	56		 push	 esi
  001b7	50		 push	 eax
  001b8	e8 00 00 00 00	 call	 _GetIconName

; 206  :     sid.pszName = (char *) iconName;

  001bd	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]

; 207  :     sid.iDefaultIndex = -IDI_VOICE;
; 208  :     sid.ptszDescription = GetIconDescription(TLEN_IDI_VOICE);

  001c3	6a 06		 push	 6
  001c5	89 45 e4	 mov	 DWORD PTR _sid$[ebp+12], eax
  001c8	c7 45 ec 96 ff
	ff ff		 mov	 DWORD PTR _sid$[ebp+20], -106 ; ffffff96H
  001cf	e8 00 00 00 00	 call	 _GetIconDescription
  001d4	89 45 e0	 mov	 DWORD PTR _sid$[ebp+8], eax

; 209  :     CallService(MS_SKIN2_ADDICON, 0, (LPARAM)&sid);

  001d7	8d 45 d8	 lea	 eax, DWORD PTR _sid$[ebp]
  001da	50		 push	 eax
  001db	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001e0	53		 push	 ebx
  001e1	57		 push	 edi
  001e2	ff 50 24	 call	 DWORD PTR [eax+36]

; 210  :     GetIconName(iconName, sizeof(iconName), TLEN_IDI_MICROPHONE);

  001e5	6a 07		 push	 7
  001e7	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  001ed	56		 push	 esi
  001ee	50		 push	 eax
  001ef	e8 00 00 00 00	 call	 _GetIconName
  001f4	83 c4 44	 add	 esp, 68			; 00000044H

; 211  :     sid.pszName = (char *) iconName;

  001f7	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  001fd	89 45 e4	 mov	 DWORD PTR _sid$[ebp+12], eax

; 212  :     sid.iDefaultIndex = -IDI_MICROPHONE;

  00200	c7 45 ec 95 ff
	ff ff		 mov	 DWORD PTR _sid$[ebp+20], -107 ; ffffff95H

; 213  :     sid.ptszDescription = GetIconDescription(TLEN_IDI_MICROPHONE);

  00207	6a 07		 push	 7
  00209	e8 00 00 00 00	 call	 _GetIconDescription
  0020e	89 45 e0	 mov	 DWORD PTR _sid$[ebp+8], eax

; 214  :     CallService(MS_SKIN2_ADDICON, 0, (LPARAM)&sid);

  00211	8d 45 d8	 lea	 eax, DWORD PTR _sid$[ebp]
  00214	50		 push	 eax
  00215	53		 push	 ebx
  00216	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0021b	57		 push	 edi
  0021c	ff 50 24	 call	 DWORD PTR [eax+36]

; 215  :     GetIconName(iconName, sizeof(iconName), TLEN_IDI_SPEAKER);

  0021f	6a 08		 push	 8
  00221	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  00227	56		 push	 esi
  00228	50		 push	 eax
  00229	e8 00 00 00 00	 call	 _GetIconName

; 216  :     sid.pszName = (char *) iconName;

  0022e	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]

; 217  :     sid.iDefaultIndex = -IDI_SPEAKER;
; 218  :     sid.ptszDescription = GetIconDescription(TLEN_IDI_SPEAKER);

  00234	6a 08		 push	 8
  00236	89 45 e4	 mov	 DWORD PTR _sid$[ebp+12], eax
  00239	c7 45 ec 94 ff
	ff ff		 mov	 DWORD PTR _sid$[ebp+20], -108 ; ffffff94H
  00240	e8 00 00 00 00	 call	 _GetIconDescription
  00245	89 45 e0	 mov	 DWORD PTR _sid$[ebp+8], eax

; 219  :     CallService(MS_SKIN2_ADDICON, 0, (LPARAM)&sid);

  00248	8d 45 d8	 lea	 eax, DWORD PTR _sid$[ebp]
  0024b	50		 push	 eax
  0024c	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00251	53		 push	 ebx
  00252	57		 push	 edi
  00253	ff 50 24	 call	 DWORD PTR [eax+36]
  00256	83 c4 2c	 add	 esp, 44			; 0000002cH

; 220  : 	TlenLoadIcons();

  00259	e8 00 00 00 00	 call	 _TlenLoadIcons
  0025e	5f		 pop	 edi
  0025f	5e		 pop	 esi
  00260	5b		 pop	 ebx

; 221  : }

  00261	c9		 leave
  00262	c3		 ret	 0
_TlenRegisterIcons ENDP
_TEXT	ENDS
PUBLIC	??_C@_05NFEE@PROTO?$AA@				; `string'
PUBLIC	??_C@_04ELMM@MAIL?$AA@				; `string'
PUBLIC	??_C@_03NJCG@MUC?$AA@				; `string'
PUBLIC	??_C@_05CJDN@CHATS?$AA@				; `string'
PUBLIC	??_C@_05DLPA@GRANT?$AA@				; `string'
PUBLIC	??_C@_07GCFD@REQUEST?$AA@			; `string'
PUBLIC	??_C@_05DMCN@VOICE?$AA@				; `string'
PUBLIC	??_C@_0L@IAIB@MICROPHONE?$AA@			; `string'
PUBLIC	??_C@_07JKL@SPEAKER?$AA@			; `string'
PUBLIC	??_C@_05FCKF@?$CFs_?$CFs?$AA@			; `string'
;	COMDAT ??_C@_05NFEE@PROTO?$AA@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\tlen.c
_DATA	SEGMENT
??_C@_05NFEE@PROTO?$AA@ DB 'PROTO', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04ELMM@MAIL?$AA@
_DATA	SEGMENT
??_C@_04ELMM@MAIL?$AA@ DB 'MAIL', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_03NJCG@MUC?$AA@
_DATA	SEGMENT
??_C@_03NJCG@MUC?$AA@ DB 'MUC', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05CJDN@CHATS?$AA@
_DATA	SEGMENT
??_C@_05CJDN@CHATS?$AA@ DB 'CHATS', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05DLPA@GRANT?$AA@
_DATA	SEGMENT
??_C@_05DLPA@GRANT?$AA@ DB 'GRANT', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_07GCFD@REQUEST?$AA@
_DATA	SEGMENT
??_C@_07GCFD@REQUEST?$AA@ DB 'REQUEST', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05DMCN@VOICE?$AA@
_DATA	SEGMENT
??_C@_05DMCN@VOICE?$AA@ DB 'VOICE', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@IAIB@MICROPHONE?$AA@
_DATA	SEGMENT
??_C@_0L@IAIB@MICROPHONE?$AA@ DB 'MICROPHONE', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_07JKL@SPEAKER?$AA@
_DATA	SEGMENT
??_C@_07JKL@SPEAKER?$AA@ DB 'SPEAKER', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05FCKF@?$CFs_?$CFs?$AA@
_DATA	SEGMENT
??_C@_05FCKF@?$CFs_?$CFs?$AA@ DB '%s_%s', 00H		; `string'
_DATA	ENDS
;	COMDAT _GetIconName
_TEXT	SEGMENT
_buffer$ = 8
_bufferSize$ = 12
_icon$ = 16
_sufixes$ = -36
_GetIconName PROC NEAR					; COMDAT

; 97   : static void GetIconName(char *buffer, int bufferSize, int icon) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H

; 98   : 	const char *sufixes[]= {
; 99   : 		"PROTO", "MAIL", "MUC", "CHATS", "GRANT", "REQUEST", "VOICE", "MICROPHONE", "SPEAKER"
; 100  : 	};
; 101  : 	mir_snprintf(buffer, bufferSize, "%s_%s", "TLEN", sufixes[icon]);

  00006	8b 45 10	 mov	 eax, DWORD PTR _icon$[ebp]
  00009	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _sufixes$[ebp], OFFSET FLAT:??_C@_05NFEE@PROTO?$AA@ ; `string'
  00010	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _sufixes$[ebp+4], OFFSET FLAT:??_C@_04ELMM@MAIL?$AA@ ; `string'
  00017	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _sufixes$[ebp+8], OFFSET FLAT:??_C@_03NJCG@MUC?$AA@ ; `string'
  0001e	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _sufixes$[ebp+12], OFFSET FLAT:??_C@_05CJDN@CHATS?$AA@ ; `string'
  00025	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _sufixes$[ebp+16], OFFSET FLAT:??_C@_05DLPA@GRANT?$AA@ ; `string'
  0002c	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _sufixes$[ebp+20], OFFSET FLAT:??_C@_07GCFD@REQUEST?$AA@ ; `string'
  00033	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _sufixes$[ebp+24], OFFSET FLAT:??_C@_05DMCN@VOICE?$AA@ ; `string'
  0003a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _sufixes$[ebp+28], OFFSET FLAT:??_C@_0L@IAIB@MICROPHONE?$AA@ ; `string'
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _sufixes$[ebp+32], OFFSET FLAT:??_C@_07JKL@SPEAKER?$AA@ ; `string'
  00048	ff 74 85 dc	 push	 DWORD PTR _sufixes$[ebp+eax*4]
  0004c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04CBAG@TLEN?$AA@ ; `string'
  00051	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05FCKF@?$CFs_?$CFs?$AA@ ; `string'
  00056	ff 75 0c	 push	 DWORD PTR _bufferSize$[ebp]
  00059	ff 75 08	 push	 DWORD PTR _buffer$[ebp]
  0005c	ff 15 1c 00 00
	00		 call	 DWORD PTR _mmi+28
  00062	83 c4 14	 add	 esp, 20			; 00000014H

; 102  : }

  00065	c9		 leave
  00066	c3		 ret	 0
_GetIconName ENDP
_TEXT	ENDS
PUBLIC	??_C@_1BM@ILLJ@?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAi?$AAc?$AAo?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_19KBAK@?$AAM?$AAa?$AAi?$AAl?$AA?$AA@	; `string'
PUBLIC	??_C@_1BI@PPEG@?$AAG?$AAr?$AAo?$AAu?$AAp?$AA?5?$AAc?$AAh?$AAa?$AAt?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@DLPE@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAc?$AAh?$AAa?$AAt?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CI@DFCB@?$AAG?$AAr?$AAa?$AAn?$AAt?$AA?5?$AAa?$AAu?$AAt?$AAh?$AAo?$AAr?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CM@CHLO@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAa?$AAu?$AAt?$AAh?$AAo?$AAr?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo@ ; `string'
PUBLIC	??_C@_1BG@PEAC@?$AAV?$AAo?$AAi?$AAc?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@MKBH@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@BBKP@?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1BM@ILLJ@?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAi?$AAc?$AAo?$AAn?$AA?$AA@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\tlen.c
_DATA	SEGMENT
??_C@_1BM@ILLJ@?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAi?$AAc?$AAo?$AAn?$AA?$AA@ DB 'P'
	DB	00H, 'r', 00H, 'o', 00H, 't', 00H, 'o', 00H, 'c', 00H, 'o', 00H
	DB	'l', 00H, ' ', 00H, 'i', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 00H
	DB	00H						; `string'
_DATA	ENDS
;	COMDAT ??_C@_19KBAK@?$AAM?$AAa?$AAi?$AAl?$AA?$AA@
_DATA	SEGMENT
??_C@_19KBAK@?$AAM?$AAa?$AAi?$AAl?$AA?$AA@ DB 'M', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 00H, 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BI@PPEG@?$AAG?$AAr?$AAo?$AAu?$AAp?$AA?5?$AAc?$AAh?$AAa?$AAt?$AAs?$AA?$AA@
_DATA	SEGMENT
??_C@_1BI@PPEG@?$AAG?$AAr?$AAo?$AAu?$AAp?$AA?5?$AAc?$AAh?$AAa?$AAt?$AAs?$AA?$AA@ DB 'G'
	DB	00H, 'r', 00H, 'o', 00H, 'u', 00H, 'p', 00H, ' ', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 't', 00H, 's', 00H, 00H, 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BG@DLPE@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAc?$AAh?$AAa?$AAt?$AAs?$AA?$AA@
_DATA	SEGMENT
??_C@_1BG@DLPE@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAc?$AAh?$AAa?$AAt?$AAs?$AA?$AA@ DB 'T'
	DB	00H, 'l', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 't', 00H, 's', 00H, 00H, 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_1CI@DFCB@?$AAG?$AAr?$AAa?$AAn?$AAt?$AA?5?$AAa?$AAu?$AAt?$AAh?$AAo?$AAr?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
_DATA	SEGMENT
??_C@_1CI@DFCB@?$AAG?$AAr?$AAa?$AAn?$AAt?$AA?5?$AAa?$AAu?$AAt?$AAh?$AAo?$AAr?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ DB 'G'
	DB	00H, 'r', 00H, 'a', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'a', 00H
	DB	'u', 00H, 't', 00H, 'h', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'z'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_1CM@CHLO@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAa?$AAu?$AAt?$AAh?$AAo?$AAr?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo@
_DATA	SEGMENT
??_C@_1CM@CHLO@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAa?$AAu?$AAt?$AAh?$AAo?$AAr?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo@ DB 'R'
	DB	00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H, 's', 00H, 't', 00H
	DB	' ', 00H, 'a', 00H, 'u', 00H, 't', 00H, 'h', 00H, 'o', 00H, 'r'
	DB	00H, 'i', 00H, 'z', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, 00H, 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BG@PEAC@?$AAV?$AAo?$AAi?$AAc?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAt?$AA?$AA@
_DATA	SEGMENT
??_C@_1BG@PEAC@?$AAV?$AAo?$AAi?$AAc?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAt?$AA?$AA@ DB 'V'
	DB	00H, 'o', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 't', 00H, 00H, 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BG@MKBH@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@
_DATA	SEGMENT
??_C@_1BG@MKBH@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@ DB 'M'
	DB	00H, 'i', 00H, 'c', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'h', 00H
	DB	'o', 00H, 'n', 00H, 'e', 00H, 00H, 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BA@BBKP@?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AA?$AA@
_DATA	SEGMENT
??_C@_1BA@BBKP@?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AA?$AA@ DB 'S', 00H, 'p'
	DB	00H, 'e', 00H, 'a', 00H, 'k', 00H, 'e', 00H, 'r', 00H, 00H, 00H ; `string'
_DATA	ENDS
;	COMDAT _GetIconDescription
_TEXT	SEGMENT
_icon$ = 8
_keys$ = -36
_GetIconDescription PROC NEAR				; COMDAT

; 104  : static TCHAR *GetIconDescription(int icon) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H

; 105  : 	const TCHAR *keys[]= {
; 106  : 		_T("Protocol icon"),
; 107  : 		_T("Mail"),
; 108  : 		_T("Group chats"),
; 109  : 		_T("Tlen chats"),
; 110  : 		_T("Grant authorization"),
; 111  : 		_T("Request authorization"),
; 112  : 		_T("Voice chat"),
; 113  : 		_T("Microphone"),
; 114  : 		_T("Speaker")
; 115  : 	};
; 116  : 	return TranslateTS(keys[icon]);

  00006	8b 45 08	 mov	 eax, DWORD PTR _icon$[ebp]
  00009	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _keys$[ebp], OFFSET FLAT:??_C@_1BM@ILLJ@?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAi?$AAc?$AAo?$AAn?$AA?$AA@ ; `string'
  00010	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _keys$[ebp+4], OFFSET FLAT:??_C@_19KBAK@?$AAM?$AAa?$AAi?$AAl?$AA?$AA@ ; `string'
  00017	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _keys$[ebp+8], OFFSET FLAT:??_C@_1BI@PPEG@?$AAG?$AAr?$AAo?$AAu?$AAp?$AA?5?$AAc?$AAh?$AAa?$AAt?$AAs?$AA?$AA@ ; `string'
  0001e	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _keys$[ebp+12], OFFSET FLAT:??_C@_1BG@DLPE@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAc?$AAh?$AAa?$AAt?$AAs?$AA?$AA@ ; `string'
  00025	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _keys$[ebp+16], OFFSET FLAT:??_C@_1CI@DFCB@?$AAG?$AAr?$AAa?$AAn?$AAt?$AA?5?$AAa?$AAu?$AAt?$AAh?$AAo?$AAr?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ ; `string'
  0002c	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _keys$[ebp+20], OFFSET FLAT:??_C@_1CM@CHLO@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAa?$AAu?$AAt?$AAh?$AAo?$AAr?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo@ ; `string'
  00033	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _keys$[ebp+24], OFFSET FLAT:??_C@_1BG@PEAC@?$AAV?$AAo?$AAi?$AAc?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAt?$AA?$AA@ ; `string'
  0003a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _keys$[ebp+28], OFFSET FLAT:??_C@_1BG@MKBH@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@ ; `string'
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _keys$[ebp+32], OFFSET FLAT:??_C@_1BA@BBKP@?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AA?$AA@ ; `string'
  00048	ff 74 85 dc	 push	 DWORD PTR _keys$[ebp+eax*4]
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00051	68 00 10 00 00	 push	 4096			; 00001000H
  00056	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  0005b	ff 50 24	 call	 DWORD PTR [eax+36]
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 117  : }

  00061	c9		 leave
  00062	c3		 ret	 0
_GetIconDescription ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@MOM@Skin2?1Icons?1GetIcon?$AA@	; `string'
;	COMDAT ??_C@_0BE@MOM@Skin2?1Icons?1GetIcon?$AA@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\tlen.c
_DATA	SEGMENT
??_C@_0BE@MOM@Skin2?1Icons?1GetIcon?$AA@ DB 'Skin2/Icons/GetIcon', 00H ; `string'
_DATA	ENDS
;	COMDAT _TlenLoadIcons
_TEXT	SEGMENT
_iconName$ = -256
_TlenLoadIcons PROC NEAR				; COMDAT

; 128  : static void TlenLoadIcons() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	56		 push	 esi
  0000a	57		 push	 edi

; 129  : 	int i;
; 130  : 	char iconName[256];
; 131  : 	for (i=0; i<TLEN_ICON_TOTAL; i++) {

  0000b	33 ff		 xor	 edi, edi
  0000d	be 00 00 00 00	 mov	 esi, OFFSET FLAT:_tlenIcons
$L83666:

; 132  : 		GetIconName(iconName, sizeof(iconName), i);

  00012	57		 push	 edi
  00013	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  00019	68 00 01 00 00	 push	 256			; 00000100H
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 _GetIconName

; 133  : 		tlenIcons[i] = (HICON) CallService(MS_SKIN2_GETICON, 0, (LPARAM)iconName);

  00024	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  0002a	50		 push	 eax
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00030	6a 00		 push	 0
  00032	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@MOM@Skin2?1Icons?1GetIcon?$AA@ ; `string'
  00037	ff 50 24	 call	 DWORD PTR [eax+36]
  0003a	89 06		 mov	 DWORD PTR [esi], eax
  0003c	83 c4 18	 add	 esp, 24			; 00000018H
  0003f	83 c6 04	 add	 esi, 4
  00042	47		 inc	 edi
  00043	81 fe 24 00 00
	00		 cmp	 esi, OFFSET FLAT:_tlenIcons+36
  00049	7c c7		 jl	 SHORT $L83666
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi

; 134  : 	}
; 135  : }

  0004d	c9		 leave
  0004e	c3		 ret	 0
_TlenLoadIcons ENDP
_TEXT	ENDS
PUBLIC	??_C@_05LFDB@Nudge?$AA@				; `string'
PUBLIC	??_C@_05LELA@?$CFs?1?$CFs?$AA@			; `string'
PUBLIC	??_C@_0P@JLBI@Opt?1Initialise?$AA@		; `string'
PUBLIC	??_C@_0BK@GNNH@DB?1Contact?1SettingChanged?$AA@	; `string'
PUBLIC	??_C@_0BD@PHPO@DB?1Contact?1Deleted?$AA@	; `string'
PUBLIC	??_C@_0BK@FOAO@CList?1PreBuildContactMenu?$AA@	; `string'
PUBLIC	??_C@_0BN@BBKH@Miranda?1System?1ModulesLoaded?$AA@ ; `string'
PUBLIC	??_C@_0BD@BJPA@Skin2?1IconsChanged?$AA@		; `string'
PUBLIC	??_C@_0BJ@PEDN@Miranda?1System?1PShutdown?$AA@	; `string'
PUBLIC	??_C@_0M@IBOM@LoginServer?$AA@			; `string'
PUBLIC	??_C@_07HCE@tlen?4pl?$AA@			; `string'
PUBLIC	??_C@_0L@FKFD@ManualHost?$AA@			; `string'
PUBLIC	??_C@_0L@DIBD@s1?4tlen?4pl?$AA@			; `string'
EXTRN	_JabberListInit:NEAR
EXTRN	__imp__toupper:NEAR
EXTRN	_JabberIqInit:NEAR
EXTRN	__imp___strlwr:NEAR
EXTRN	_TlenLoadOptions:NEAR
EXTRN	_TlenOptionsInit:NEAR
EXTRN	_TlenInitServicesVTbl:NEAR
EXTRN	_JabberContactDeleted:NEAR
EXTRN	_JabberDbSettingChanged:NEAR
EXTRN	_JabberWsInit:NEAR
EXTRN	_JabberSerialInit:NEAR
;	COMDAT ??_C@_05LFDB@Nudge?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_05LFDB@Nudge?$AA@ DB 'Nudge', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05LELA@?$CFs?1?$CFs?$AA@
_DATA	SEGMENT
??_C@_05LELA@?$CFs?1?$CFs?$AA@ DB '%s/%s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@JLBI@Opt?1Initialise?$AA@
_DATA	SEGMENT
??_C@_0P@JLBI@Opt?1Initialise?$AA@ DB 'Opt/Initialise', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BK@GNNH@DB?1Contact?1SettingChanged?$AA@
_DATA	SEGMENT
??_C@_0BK@GNNH@DB?1Contact?1SettingChanged?$AA@ DB 'DB/Contact/SettingCha'
	DB	'nged', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@PHPO@DB?1Contact?1Deleted?$AA@
_DATA	SEGMENT
??_C@_0BD@PHPO@DB?1Contact?1Deleted?$AA@ DB 'DB/Contact/Deleted', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BK@FOAO@CList?1PreBuildContactMenu?$AA@
_DATA	SEGMENT
??_C@_0BK@FOAO@CList?1PreBuildContactMenu?$AA@ DB 'CList/PreBuildContactM'
	DB	'enu', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BN@BBKH@Miranda?1System?1ModulesLoaded?$AA@
_DATA	SEGMENT
??_C@_0BN@BBKH@Miranda?1System?1ModulesLoaded?$AA@ DB 'Miranda/System/Mod'
	DB	'ulesLoaded', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@BJPA@Skin2?1IconsChanged?$AA@
_DATA	SEGMENT
??_C@_0BD@BJPA@Skin2?1IconsChanged?$AA@ DB 'Skin2/IconsChanged', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@PEDN@Miranda?1System?1PShutdown?$AA@
_DATA	SEGMENT
??_C@_0BJ@PEDN@Miranda?1System?1PShutdown?$AA@ DB 'Miranda/System/PShutdo'
	DB	'wn', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@IBOM@LoginServer?$AA@
_DATA	SEGMENT
??_C@_0M@IBOM@LoginServer?$AA@ DB 'LoginServer', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_07HCE@tlen?4pl?$AA@
_DATA	SEGMENT
??_C@_07HCE@tlen?4pl?$AA@ DB 'tlen.pl', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@FKFD@ManualHost?$AA@
_DATA	SEGMENT
??_C@_0L@FKFD@ManualHost?$AA@ DB 'ManualHost', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@DIBD@s1?4tlen?4pl?$AA@
_DATA	SEGMENT
??_C@_0L@DIBD@s1?4tlen?4pl?$AA@ DB 's1.tlen.pl', 00H	; `string'
_DATA	ENDS
;	COMDAT _tlenProtoInit
_TEXT	SEGMENT
_pszProtoName$ = 8
_tszUserName$ = 12
_dbv$ = -32
_text$ = -292
_cgs$84389 = -12
_cws$84398 = -20
_cgs$84405 = -12
_cws$84414 = -20
_tlenProtoInit PROC NEAR				; COMDAT

; 505  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 506  : 	DBVARIANT dbv;
; 507  :     char text[_MAX_PATH];
; 508  : 	TlenProtocol *proto = (TlenProtocol *)mir_alloc(sizeof(TlenProtocol));

  0000c	bf f4 01 00 00	 mov	 edi, 500		; 000001f4H
  00011	57		 push	 edi
  00012	ff 15 04 00 00
	00		 call	 DWORD PTR _mmi+4

; 509  :     memset(proto, 0, sizeof(TlenProtocol));

  00018	33 db		 xor	 ebx, ebx
  0001a	8b f0		 mov	 esi, eax
  0001c	57		 push	 edi
  0001d	53		 push	 ebx
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 _memset

; 510  :     proto->iface.m_tszUserName = mir_tstrdup( tszUserName );

  00024	ff 75 0c	 push	 DWORD PTR _tszUserName$[ebp]
  00027	ff 15 18 00 00
	00		 call	 DWORD PTR _mmi+24

; 511  :     proto->iface.m_szModuleName = mir_strdup(pszProtoName);

  0002d	ff 75 08	 push	 DWORD PTR _pszProtoName$[ebp]
  00030	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00033	ff 15 14 00 00
	00		 call	 DWORD PTR _mmi+20

; 512  :     proto->iface.m_szProtoName = mir_strdup(pszProtoName);

  00039	ff 75 08	 push	 DWORD PTR _pszProtoName$[ebp]
  0003c	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  0003f	ff 15 14 00 00
	00		 call	 DWORD PTR _mmi+20

; 513  :     _strlwr( proto->iface.m_szProtoName );

  00045	50		 push	 eax
  00046	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___strlwr

; 514  : 	proto->iface.m_szProtoName[0] = toupper( proto->iface.m_szProtoName[0] );

  0004f	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00052	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00055	50		 push	 eax
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__toupper
  0005c	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]

; 515  :     proto->iface.m_iStatus = ID_STATUS_OFFLINE;
; 516  :     proto->jabberCodePage = CP_ACP;
; 517  :     TlenInitServicesVTbl(proto);

  0005f	56		 push	 esi
  00060	88 01		 mov	 BYTE PTR [ecx], al
  00062	c7 46 04 87 9c
	00 00		 mov	 DWORD PTR [esi+4], 40071 ; 00009c87H
  00069	89 9e b0 01 00
	00		 mov	 DWORD PTR [esi+432], ebx
  0006f	e8 00 00 00 00	 call	 _TlenInitServicesVTbl
  00074	83 c4 28	 add	 esp, 40			; 00000028H

; 518  : 
; 519  : 	InitializeCriticalSection(&proto->modeMsgMutex);

  00077	8d 86 80 01 00
	00		 lea	 eax, DWORD PTR [esi+384]
  0007d	50		 push	 eax
  0007e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4

; 520  :     
; 521  : 	sprintf(text, "%s/%s", proto->iface.m_szModuleName, "Nudge");

  00084	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05LFDB@Nudge?$AA@ ; `string'
  00089	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  0008f	ff 76 1c	 push	 DWORD PTR [esi+28]
  00092	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05LELA@?$CFs?1?$CFs?$AA@ ; `string'
  00097	50		 push	 eax
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf

; 522  : 	proto->hTlenNudge = CreateHookableEvent(text);

  0009e	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  000a4	50		 push	 eax
  000a5	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000aa	ff 10		 call	 DWORD PTR [eax]

; 523  :     
; 524  : 	HookEventObj_Ex(ME_OPT_INITIALISE, proto, TlenOptionsInit);

  000ac	68 00 00 00 00	 push	 OFFSET FLAT:_TlenOptionsInit
  000b1	56		 push	 esi
  000b2	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@JLBI@Opt?1Initialise?$AA@ ; `string'
  000b7	89 86 e4 00 00
	00		 mov	 DWORD PTR [esi+228], eax
  000bd	e8 00 00 00 00	 call	 _HookEventObj_Ex

; 525  : 	HookEventObj_Ex(ME_DB_CONTACT_SETTINGCHANGED, proto, JabberDbSettingChanged);

  000c2	68 00 00 00 00	 push	 OFFSET FLAT:_JabberDbSettingChanged
  000c7	56		 push	 esi
  000c8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BK@GNNH@DB?1Contact?1SettingChanged?$AA@ ; `string'
  000cd	e8 00 00 00 00	 call	 _HookEventObj_Ex

; 526  : 	HookEventObj_Ex(ME_DB_CONTACT_DELETED, proto, JabberContactDeleted);

  000d2	68 00 00 00 00	 push	 OFFSET FLAT:_JabberContactDeleted
  000d7	56		 push	 esi
  000d8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@PHPO@DB?1Contact?1Deleted?$AA@ ; `string'
  000dd	e8 00 00 00 00	 call	 _HookEventObj_Ex

; 527  : 	HookEventObj_Ex(ME_CLIST_PREBUILDCONTACTMENU, proto, TlenPrebuildContactMenu);

  000e2	68 00 00 00 00	 push	 OFFSET FLAT:_TlenPrebuildContactMenu
  000e7	56		 push	 esi
  000e8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BK@FOAO@CList?1PreBuildContactMenu?$AA@ ; `string'
  000ed	e8 00 00 00 00	 call	 _HookEventObj_Ex
  000f2	83 c4 44	 add	 esp, 68			; 00000044H

; 528  :     HookEventObj_Ex(ME_SYSTEM_MODULESLOADED, proto, TlenOnModulesLoaded);

  000f5	68 00 00 00 00	 push	 OFFSET FLAT:_TlenOnModulesLoaded
  000fa	56		 push	 esi
  000fb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@BBKH@Miranda?1System?1ModulesLoaded?$AA@ ; `string'
  00100	e8 00 00 00 00	 call	 _HookEventObj_Ex

; 529  : 	HookEventObj_Ex(ME_SKIN2_ICONSCHANGED, proto, TlenIconsChanged);

  00105	68 00 00 00 00	 push	 OFFSET FLAT:_TlenIconsChanged
  0010a	56		 push	 esi
  0010b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@BJPA@Skin2?1IconsChanged?$AA@ ; `string'
  00110	e8 00 00 00 00	 call	 _HookEventObj_Ex

; 530  : 	HookEventObj_Ex(ME_SYSTEM_PRESHUTDOWN, proto, TlenPreShutdown);

  00115	68 00 00 00 00	 push	 OFFSET FLAT:_TlenPreShutdown
  0011a	56		 push	 esi
  0011b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@PEDN@Miranda?1System?1PShutdown?$AA@ ; `string'
  00120	e8 00 00 00 00	 call	 _HookEventObj_Ex

; 531  : 
; 532  : 	if (!DBGetContactSetting(NULL, proto->iface.m_szModuleName, "LoginServer", &dbv)) {

  00125	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00128	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_0M@IBOM@LoginServer?$AA@ ; `string'
  0012d	89 45 f4	 mov	 DWORD PTR _cgs$84389[ebp], eax
  00130	89 7d f8	 mov	 DWORD PTR _cgs$84389[ebp+4], edi
  00133	8d 45 e0	 lea	 eax, DWORD PTR _dbv$[ebp]
  00136	89 45 fc	 mov	 DWORD PTR _cgs$84389[ebp+8], eax
  00139	8d 45 f4	 lea	 eax, DWORD PTR _cgs$84389[ebp]
  0013c	50		 push	 eax
  0013d	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00142	53		 push	 ebx
  00143	bb 00 00 00 00	 mov	 ebx, OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00148	53		 push	 ebx
  00149	ff 50 24	 call	 DWORD PTR [eax+36]
  0014c	83 c4 30	 add	 esp, 48			; 00000030H
  0014f	85 c0		 test	 eax, eax
  00151	75 0d		 jne	 SHORT $L84019

; 533  : 		DBFreeVariant(&dbv);

  00153	8d 45 e0	 lea	 eax, DWORD PTR _dbv$[ebp]
  00156	50		 push	 eax
  00157	6a 00		 push	 0
  00159	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'

; 534  : 	} else {

  0015e	eb 1f		 jmp	 SHORT $L84417
$L84019:

; 535  : 		DBWriteContactSettingString(NULL, proto->iface.m_szModuleName, "LoginServer", "tlen.pl");

  00160	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00163	80 4d f4 ff	 or	 BYTE PTR _cws$84398[ebp+8], 255 ; 000000ffH
  00167	89 45 ec	 mov	 DWORD PTR _cws$84398[ebp], eax
  0016a	8d 45 ec	 lea	 eax, DWORD PTR _cws$84398[ebp]
  0016d	50		 push	 eax
  0016e	6a 00		 push	 0
  00170	89 7d f0	 mov	 DWORD PTR _cws$84398[ebp+4], edi
  00173	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cws$84398[ebp+12], OFFSET FLAT:??_C@_07HCE@tlen?4pl?$AA@ ; `string'
  0017a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ ; `string'
$L84417:
  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00184	ff 50 24	 call	 DWORD PTR [eax+36]

; 536  : 	}
; 537  : 	if (!DBGetContactSetting(NULL, proto->iface.m_szModuleName, "ManualHost", &dbv)) {

  00187	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0018a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0018d	89 45 f4	 mov	 DWORD PTR _cgs$84405[ebp], eax
  00190	8d 45 e0	 lea	 eax, DWORD PTR _dbv$[ebp]
  00193	89 45 fc	 mov	 DWORD PTR _cgs$84405[ebp+8], eax
  00196	8d 45 f4	 lea	 eax, DWORD PTR _cgs$84405[ebp]
  00199	50		 push	 eax
  0019a	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0019f	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_0L@FKFD@ManualHost?$AA@ ; `string'
  001a4	6a 00		 push	 0
  001a6	53		 push	 ebx
  001a7	89 7d f8	 mov	 DWORD PTR _cgs$84405[ebp+4], edi
  001aa	ff 50 24	 call	 DWORD PTR [eax+36]
  001ad	83 c4 0c	 add	 esp, 12			; 0000000cH
  001b0	85 c0		 test	 eax, eax
  001b2	75 0d		 jne	 SHORT $L84025

; 538  : 		DBFreeVariant(&dbv);

  001b4	8d 45 e0	 lea	 eax, DWORD PTR _dbv$[ebp]
  001b7	50		 push	 eax
  001b8	6a 00		 push	 0
  001ba	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'

; 539  : 	} else {

  001bf	eb 1f		 jmp	 SHORT $L84418
$L84025:

; 540  : 		DBWriteContactSettingString(NULL, proto->iface.m_szModuleName, "ManualHost", "s1.tlen.pl");

  001c1	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  001c4	80 4d f4 ff	 or	 BYTE PTR _cws$84414[ebp+8], 255 ; 000000ffH
  001c8	89 45 ec	 mov	 DWORD PTR _cws$84414[ebp], eax
  001cb	8d 45 ec	 lea	 eax, DWORD PTR _cws$84414[ebp]
  001ce	50		 push	 eax
  001cf	6a 00		 push	 0
  001d1	89 7d f0	 mov	 DWORD PTR _cws$84414[ebp+4], edi
  001d4	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cws$84414[ebp+12], OFFSET FLAT:??_C@_0L@DIBD@s1?4tlen?4pl?$AA@ ; `string'
  001db	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ ; `string'
$L84418:
  001e0	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001e5	ff 50 24	 call	 DWORD PTR [eax+36]
  001e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 541  : 	}
; 542  :     
; 543  : 	TlenLoadOptions(proto);

  001eb	56		 push	 esi
  001ec	e8 00 00 00 00	 call	 _TlenLoadOptions

; 544  :    
; 545  :     JabberWsInit(proto);

  001f1	56		 push	 esi
  001f2	e8 00 00 00 00	 call	 _JabberWsInit

; 546  : 	JabberSerialInit(proto);

  001f7	56		 push	 esi
  001f8	e8 00 00 00 00	 call	 _JabberSerialInit

; 547  : 	JabberIqInit(proto);

  001fd	56		 push	 esi
  001fe	e8 00 00 00 00	 call	 _JabberIqInit

; 548  : 	JabberListInit(proto);

  00203	56		 push	 esi
  00204	e8 00 00 00 00	 call	 _JabberListInit

; 549  :     initMenuItems(proto);

  00209	56		 push	 esi
  0020a	e8 00 00 00 00	 call	 _initMenuItems
  0020f	83 c4 18	 add	 esp, 24			; 00000018H

; 550  : 
; 551  :     return proto;

  00212	8b c6		 mov	 eax, esi
  00214	5f		 pop	 edi
  00215	5e		 pop	 esi
  00216	5b		 pop	 ebx

; 552  : }

  00217	c9		 leave
  00218	c3		 ret	 0
_tlenProtoInit ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BF@CGG@CList?1ModifyMenuItem?$AA@	; `string'
;	COMDAT ??_C@_0BF@CGG@CList?1ModifyMenuItem?$AA@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\tlen.c
_DATA	SEGMENT
??_C@_0BF@CGG@CList?1ModifyMenuItem?$AA@ DB 'CList/ModifyMenuItem', 00H ; `string'
_DATA	ENDS
;	COMDAT _TlenIconsChanged
_TEXT	SEGMENT
_ptr$ = 8
_mi$ = -40
_TlenIconsChanged PROC NEAR				; COMDAT

; 138  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	56		 push	 esi
  00007	57		 push	 edi

; 139  : 	CLISTMENUITEM mi;
; 140  :     TlenProtocol *proto = (TlenProtocol *)ptr;
; 141  : 	mi.cbSize = sizeof(mi);

  00008	c7 45 d8 28 00
	00 00		 mov	 DWORD PTR _mi$[ebp], 40	; 00000028H

; 142  : 	mi.flags = CMIM_ICON;

  0000f	c7 45 e0 00 00
	00 20		 mov	 DWORD PTR _mi$[ebp+8], 536870912 ; 20000000H

; 143  : 	TlenReleaseIcons();

  00016	e8 00 00 00 00	 call	 _TlenReleaseIcons

; 144  : 	TlenLoadIcons();

  0001b	e8 00 00 00 00	 call	 _TlenLoadIcons

; 145  : 	mi.hIcon = tlenIcons[TLEN_IDI_MUC];

  00020	a1 08 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+8

; 146  : 	CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuMUC, (LPARAM) &mi);

  00025	8b 7d 08	 mov	 edi, DWORD PTR _ptr$[ebp]
  00028	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax
  0002b	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  0002e	50		 push	 eax
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00034	ff b7 e8 00 00
	00		 push	 DWORD PTR [edi+232]
  0003a	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0BF@CGG@CList?1ModifyMenuItem?$AA@ ; `string'
  0003f	56		 push	 esi
  00040	ff 50 24	 call	 DWORD PTR [eax+36]

; 147  : 	mi.hIcon = tlenIcons[TLEN_IDI_CHATS];

  00043	a1 0c 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+12
  00048	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 148  : 	CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuChats, (LPARAM) &mi);

  0004b	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  0004e	50		 push	 eax
  0004f	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00054	ff b7 ec 00 00
	00		 push	 DWORD PTR [edi+236]
  0005a	56		 push	 esi
  0005b	ff 50 24	 call	 DWORD PTR [eax+36]

; 149  : 	mi.hIcon = tlenIcons[TLEN_IDI_MAIL];

  0005e	a1 04 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+4
  00063	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 150  : 	CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuInbox, (LPARAM) &mi);

  00066	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  00069	50		 push	 eax
  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0006f	ff b7 f0 00 00
	00		 push	 DWORD PTR [edi+240]
  00075	56		 push	 esi
  00076	ff 50 24	 call	 DWORD PTR [eax+36]

; 151  : 	mi.hIcon = tlenIcons[TLEN_IDI_MUC];

  00079	a1 08 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+8
  0007e	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 152  : 	CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuContactMUC, (LPARAM) &mi);

  00081	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  00084	50		 push	 eax
  00085	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0008a	ff b7 f4 00 00
	00		 push	 DWORD PTR [edi+244]
  00090	56		 push	 esi
  00091	ff 50 24	 call	 DWORD PTR [eax+36]

; 153  : 	mi.hIcon = tlenIcons[TLEN_IDI_VOICE];

  00094	a1 18 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+24
  00099	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 154  : 	CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuContactVoice, (LPARAM) &mi);

  0009c	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  0009f	50		 push	 eax
  000a0	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000a5	ff b7 fc 00 00
	00		 push	 DWORD PTR [edi+252]
  000ab	56		 push	 esi
  000ac	ff 50 24	 call	 DWORD PTR [eax+36]

; 155  : 	mi.hIcon = tlenIcons[TLEN_IDI_GRANT];

  000af	a1 10 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+16
  000b4	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 156  : 	CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuContactGrantAuth, (LPARAM) &mi);

  000b7	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  000ba	50		 push	 eax
  000bb	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000c0	ff b7 00 01 00
	00		 push	 DWORD PTR [edi+256]
  000c6	56		 push	 esi
  000c7	ff 50 24	 call	 DWORD PTR [eax+36]

; 157  : 	mi.hIcon = tlenIcons[TLEN_IDI_REQUEST];

  000ca	a1 14 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+20
  000cf	83 c4 48	 add	 esp, 72			; 00000048H
  000d2	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 158  : 	CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuContactRequestAuth, (LPARAM) &mi);

  000d5	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  000d8	50		 push	 eax
  000d9	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000de	ff b7 04 01 00
	00		 push	 DWORD PTR [edi+260]
  000e4	56		 push	 esi
  000e5	ff 50 24	 call	 DWORD PTR [eax+36]
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 159  : 	return 0;

  000eb	33 c0		 xor	 eax, eax
  000ed	5f		 pop	 edi
  000ee	5e		 pop	 esi

; 160  : }

  000ef	c9		 leave
  000f0	c3		 ret	 0
_TlenIconsChanged ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BI@EHMA@Skin2?1Icons?1ReleaseIcon?$AA@	; `string'
;	COMDAT ??_C@_0BI@EHMA@Skin2?1Icons?1ReleaseIcon?$AA@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\tlen.c
_DATA	SEGMENT
??_C@_0BI@EHMA@Skin2?1Icons?1ReleaseIcon?$AA@ DB 'Skin2/Icons/ReleaseIcon'
	DB	00H						; `string'
_DATA	ENDS
;	COMDAT _TlenReleaseIcons
_TEXT	SEGMENT
_iconName$ = -256
_TlenReleaseIcons PROC NEAR				; COMDAT

; 119  : static void TlenReleaseIcons() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	56		 push	 esi

; 120  : 	int i;
; 121  : 	char iconName[256];
; 122  : 	for (i=0; i<TLEN_ICON_TOTAL; i++) {

  0000a	33 f6		 xor	 esi, esi
$L83657:

; 123  : 		GetIconName(iconName, sizeof(iconName), i);

  0000c	56		 push	 esi
  0000d	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  00013	68 00 01 00 00	 push	 256			; 00000100H
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 _GetIconName

; 124  : 		CallService(MS_SKIN2_RELEASEICON, 0, (LPARAM)iconName);

  0001e	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _iconName$[ebp]
  00024	50		 push	 eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0002a	6a 00		 push	 0
  0002c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@EHMA@Skin2?1Icons?1ReleaseIcon?$AA@ ; `string'
  00031	ff 50 24	 call	 DWORD PTR [eax+36]
  00034	83 c4 18	 add	 esp, 24			; 00000018H
  00037	46		 inc	 esi
  00038	83 fe 09	 cmp	 esi, 9
  0003b	7c cf		 jl	 SHORT $L83657
  0003d	5e		 pop	 esi

; 125  : 	}
; 126  : }

  0003e	c9		 leave
  0003f	c3		 ret	 0
_TlenReleaseIcons ENDP
_TEXT	ENDS
EXTRN	_TlenVoiceIsInUse:NEAR
EXTRN	_JabberListGetItemPtr:NEAR
;	COMDAT _TlenPrebuildContactMenu
_TEXT	SEGMENT
_cgs$84428 = -12
_ptr$ = 8
_wParam$ = 12
_dbv$ = -24
_clmi$ = -64
_TlenPrebuildContactMenu PROC NEAR			; COMDAT

; 224  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 225  : 	HANDLE hContact;
; 226  : 	DBVARIANT dbv;
; 227  : 	CLISTMENUITEM clmi = {0};

  00009	6a 09		 push	 9
  0000b	59		 pop	 ecx
  0000c	33 c0		 xor	 eax, eax
  0000e	8d 7d c4	 lea	 edi, DWORD PTR _clmi$[ebp+4]

; 228  : 	JABBER_LIST_ITEM *item;
; 229  :     TlenProtocol *proto = (TlenProtocol *)ptr;
; 230  : 	clmi.cbSize = sizeof(CLISTMENUITEM);
; 231  : 	if ((hContact=(HANDLE) wParam)!=NULL && proto->jabberOnline) {

  00011	33 f6		 xor	 esi, esi
  00013	39 75 0c	 cmp	 DWORD PTR _wParam$[ebp], esi
  00016	f3 ab		 rep stosd
  00018	8b 7d 08	 mov	 edi, DWORD PTR _ptr$[ebp]
  0001b	c7 45 c0 28 00
	00 00		 mov	 DWORD PTR _clmi$[ebp], 40 ; 00000028H
  00022	0f 84 46 01 00
	00		 je	 $L84435
  00028	39 b7 78 01 00
	00		 cmp	 DWORD PTR [edi+376], esi
  0002e	0f 84 3a 01 00
	00		 je	 $L84435

; 232  : 		if (!DBGetContactSetting(hContact, proto->iface.m_szModuleName, "jid", &dbv)) {

  00034	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00037	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$84428[ebp+4], OFFSET FLAT:??_C@_03HCJC@jid?$AA@ ; `string'
  0003e	89 45 f4	 mov	 DWORD PTR _cgs$84428[ebp], eax
  00041	8d 45 e8	 lea	 eax, DWORD PTR _dbv$[ebp]
  00044	89 45 fc	 mov	 DWORD PTR _cgs$84428[ebp+8], eax
  00047	8d 45 f4	 lea	 eax, DWORD PTR _cgs$84428[ebp]
  0004a	50		 push	 eax
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00050	ff 75 0c	 push	 DWORD PTR _wParam$[ebp]
  00053	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00058	ff 50 24	 call	 DWORD PTR [eax+36]
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	85 c0		 test	 eax, eax
  00060	0f 85 08 01 00
	00		 jne	 $L84435

; 233  : 			if ((item=JabberListGetItemPtr(proto, LIST_ROSTER, dbv.pszVal)) != NULL) {

  00066	ff 75 ec	 push	 DWORD PTR _dbv$[ebp+4]
  00069	56		 push	 esi
  0006a	57		 push	 edi
  0006b	e8 00 00 00 00	 call	 _JabberListGetItemPtr
  00070	8b d8		 mov	 ebx, eax
  00072	83 c4 0c	 add	 esp, 12			; 0000000cH
  00075	3b de		 cmp	 ebx, esi
  00077	0f 84 dc 00 00
	00		 je	 $L83746

; 234  : 				if (item->subscription==SUB_NONE || item->subscription==SUB_FROM)

  0007d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00080	3b c6		 cmp	 eax, esi
  00082	74 0c		 je	 SHORT $L83748
  00084	83 f8 02	 cmp	 eax, 2

; 236  : 				else
; 237  : 					clmi.flags = CMIM_FLAGS|CMIF_HIDDEN;

  00087	c7 45 c8 04 00
	00 40		 mov	 DWORD PTR _clmi$[ebp+8], 1073741828 ; 40000004H
  0008e	75 07		 jne	 SHORT $L83749
$L83748:

; 235  : 					clmi.flags = CMIM_FLAGS;

  00090	c7 45 c8 00 00
	00 40		 mov	 DWORD PTR _clmi$[ebp+8], 1073741824 ; 40000000H
$L83749:

; 238  : 				CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuContactRequestAuth, (LPARAM) &clmi);

  00097	8d 45 c0	 lea	 eax, DWORD PTR _clmi$[ebp]
  0009a	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0BF@CGG@CList?1ModifyMenuItem?$AA@ ; `string'
  0009f	50		 push	 eax
  000a0	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000a5	ff b7 04 01 00
	00		 push	 DWORD PTR [edi+260]
  000ab	56		 push	 esi
  000ac	ff 50 24	 call	 DWORD PTR [eax+36]

; 239  : 
; 240  : 				if (item->subscription==SUB_NONE || item->subscription==SUB_TO)

  000af	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  000b2	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b5	85 c0		 test	 eax, eax
  000b7	74 0c		 je	 SHORT $L83753
  000b9	83 f8 01	 cmp	 eax, 1

; 242  : 				else
; 243  : 					clmi.flags = CMIM_FLAGS|CMIF_HIDDEN;

  000bc	c7 45 c8 04 00
	00 40		 mov	 DWORD PTR _clmi$[ebp+8], 1073741828 ; 40000004H
  000c3	75 07		 jne	 SHORT $L83754
$L83753:

; 241  : 					clmi.flags = CMIM_FLAGS;

  000c5	c7 45 c8 00 00
	00 40		 mov	 DWORD PTR _clmi$[ebp+8], 1073741824 ; 40000000H
$L83754:

; 244  : 				CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuContactGrantAuth, (LPARAM) &clmi);

  000cc	8d 45 c0	 lea	 eax, DWORD PTR _clmi$[ebp]
  000cf	50		 push	 eax
  000d0	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000d5	ff b7 00 01 00
	00		 push	 DWORD PTR [edi+256]
  000db	56		 push	 esi
  000dc	ff 50 24	 call	 DWORD PTR [eax+36]

; 245  : 
; 246  : 				if (item->status!=ID_STATUS_OFFLINE)

  000df	33 c0		 xor	 eax, eax
  000e1	81 7b 10 87 9c
	00 00		 cmp	 DWORD PTR [ebx+16], 40071 ; 00009c87H
  000e8	0f 94 c0	 sete	 al
  000eb	48		 dec	 eax
  000ec	24 fc		 and	 al, -4			; fffffffcH
  000ee	05 04 00 00 40	 add	 eax, 1073741828		; 40000004H
  000f3	89 45 c8	 mov	 DWORD PTR _clmi$[ebp+8], eax

; 247  : 					clmi.flags = CMIM_FLAGS;
; 248  : 				else
; 249  : 					clmi.flags = CMIM_FLAGS|CMIF_HIDDEN;
; 250  : 				CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuContactMUC, (LPARAM) &clmi);

  000f6	8d 45 c0	 lea	 eax, DWORD PTR _clmi$[ebp]
  000f9	50		 push	 eax
  000fa	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000ff	ff b7 f4 00 00
	00		 push	 DWORD PTR [edi+244]
  00105	56		 push	 esi
  00106	ff 50 24	 call	 DWORD PTR [eax+36]
  00109	83 c4 18	 add	 esp, 24			; 00000018H

; 251  : 
; 252  : 				if (item->status!=ID_STATUS_OFFLINE && !TlenVoiceIsInUse(proto))

  0010c	81 7b 10 87 9c
	00 00		 cmp	 DWORD PTR [ebx+16], 40071 ; 00009c87H
  00113	74 12		 je	 SHORT $L83761
  00115	57		 push	 edi
  00116	e8 00 00 00 00	 call	 _TlenVoiceIsInUse
  0011b	85 c0		 test	 eax, eax
  0011d	59		 pop	 ecx

; 253  : 					clmi.flags = CMIM_FLAGS;

  0011e	c7 45 c8 00 00
	00 40		 mov	 DWORD PTR _clmi$[ebp+8], 1073741824 ; 40000000H
  00125	74 07		 je	 SHORT $L83762
$L83761:

; 254  : 				else
; 255  : 					clmi.flags = CMIM_FLAGS|CMIF_HIDDEN;

  00127	c7 45 c8 04 00
	00 40		 mov	 DWORD PTR _clmi$[ebp+8], 1073741828 ; 40000004H
$L83762:

; 256  : 				CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuContactVoice, (LPARAM) &clmi);

  0012e	8d 45 c0	 lea	 eax, DWORD PTR _clmi$[ebp]
  00131	50		 push	 eax
  00132	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00137	ff b7 fc 00 00
	00		 push	 DWORD PTR [edi+252]
  0013d	56		 push	 esi
  0013e	ff 50 24	 call	 DWORD PTR [eax+36]

; 257  : 
; 258  : 				DBFreeVariant(&dbv);

  00141	8d 45 e8	 lea	 eax, DWORD PTR _dbv$[ebp]
  00144	50		 push	 eax
  00145	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0014a	6a 00		 push	 0
  0014c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  00151	ff 50 24	 call	 DWORD PTR [eax+36]
  00154	83 c4 18	 add	 esp, 24			; 00000018H

; 259  : 				return 0;

  00157	eb 70		 jmp	 SHORT $L84436
$L83746:

; 260  : 			}
; 261  : 			DBFreeVariant(&dbv);

  00159	8d 45 e8	 lea	 eax, DWORD PTR _dbv$[ebp]
  0015c	50		 push	 eax
  0015d	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00162	56		 push	 esi
  00163	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  00168	ff 50 24	 call	 DWORD PTR [eax+36]
  0016b	83 c4 0c	 add	 esp, 12			; 0000000cH
$L84435:

; 262  : 		}
; 263  : 	}
; 264  : 	clmi.flags = CMIM_FLAGS|CMIF_HIDDEN;
; 265  : 	CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuContactMUC, (LPARAM) &clmi);

  0016e	8d 45 c0	 lea	 eax, DWORD PTR _clmi$[ebp]
  00171	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0BF@CGG@CList?1ModifyMenuItem?$AA@ ; `string'
  00176	50		 push	 eax
  00177	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0017c	ff b7 f4 00 00
	00		 push	 DWORD PTR [edi+244]
  00182	c7 45 c8 04 00
	00 40		 mov	 DWORD PTR _clmi$[ebp+8], 1073741828 ; 40000004H
  00189	56		 push	 esi
  0018a	ff 50 24	 call	 DWORD PTR [eax+36]

; 266  : 	CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuContactVoice, (LPARAM) &clmi);

  0018d	8d 45 c0	 lea	 eax, DWORD PTR _clmi$[ebp]
  00190	50		 push	 eax
  00191	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00196	ff b7 fc 00 00
	00		 push	 DWORD PTR [edi+252]
  0019c	56		 push	 esi
  0019d	ff 50 24	 call	 DWORD PTR [eax+36]

; 267  : 	CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuContactRequestAuth, (LPARAM) &clmi);

  001a0	8d 45 c0	 lea	 eax, DWORD PTR _clmi$[ebp]
  001a3	50		 push	 eax
  001a4	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001a9	ff b7 04 01 00
	00		 push	 DWORD PTR [edi+260]
  001af	56		 push	 esi
  001b0	ff 50 24	 call	 DWORD PTR [eax+36]

; 268  : 	CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuContactGrantAuth, (LPARAM) &clmi);

  001b3	8d 45 c0	 lea	 eax, DWORD PTR _clmi$[ebp]
  001b6	50		 push	 eax
  001b7	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001bc	ff b7 00 01 00
	00		 push	 DWORD PTR [edi+256]
  001c2	56		 push	 esi
  001c3	ff 50 24	 call	 DWORD PTR [eax+36]
  001c6	83 c4 30	 add	 esp, 48			; 00000030H
$L84436:
  001c9	5f		 pop	 edi
  001ca	5e		 pop	 esi

; 269  : 	return 0;

  001cb	33 c0		 xor	 eax, eax
  001cd	5b		 pop	 ebx

; 270  : }

  001ce	c9		 leave
  001cf	c3		 ret	 0
_TlenPrebuildContactMenu ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BJ@GIEG@CList?1AddContactMenuItem?$AA@	; `string'
PUBLIC	??_C@_0BE@LCEH@?$CFs?1ContactMenuVoice?$AA@	; `string'
PUBLIC	??_C@_0L@EDKM@Voice?5Chat?$AA@			; `string'
PUBLIC	??_C@_0P@OBOH@?$CFs?1RequestAuth?$AA@		; `string'
PUBLIC	??_C@_0BG@ICHE@Request?5authorization?$AA@	; `string'
PUBLIC	??_C@_0N@FBAI@?$CFs?1GrantAuth?$AA@		; `string'
PUBLIC	??_C@_0BE@FAFD@Grant?5authorization?$AA@	; `string'
PUBLIC	??_C@_0P@MFKA@?$CFs?1SendPicture?$AA@		; `string'
PUBLIC	??_C@_0N@LLJI@Send?5picture?$AA@		; `string'
PUBLIC	??_C@_05CNCC@?$CGFile?$AA@			; `string'
PUBLIC	??_C@_0BD@JJLD@SRFile?1SendCommand?$AA@		; `string'
PUBLIC	??_C@_0BA@GFNK@Skin?1Icons?1Load?$AA@		; `string'
PUBLIC	??_C@_0BG@ECNA@CList?1AddMainMenuItem?$AA@	; `string'
PUBLIC	??_C@_0BB@NIOH@?$CFs?1MainMenuChats?$AA@	; `string'
PUBLIC	??_C@_0L@IDCD@Tlen?5Chats?$AA@			; `string'
PUBLIC	??_C@_0P@PLDI@?$CFs?1MainMenuMUC?$AA@		; `string'
PUBLIC	??_C@_0BG@KCGH@Multi?9User?5Conference?$AA@	; `string'
PUBLIC	??_C@_0BB@PPFD@?$CFs?1MainMenuInbox?$AA@	; `string'
PUBLIC	??_C@_0L@KEJH@Tlen?5Inbox?$AA@			; `string'
PUBLIC	??_C@_0BC@PDGE@?$CFs?1ContactMenuMUC?$AA@	; `string'
EXTRN	_TlenVoiceContactMenuHandleVoice:NEAR
EXTRN	_CreateServiceFunction_Ex:NEAR
EXTRN	_TlenMUCMenuHandleMUC:NEAR
EXTRN	_TlenMUCMenuHandleChats:NEAR
EXTRN	_TlenMUCContactMenuHandleMUC:NEAR
;	COMDAT ??_C@_0BA@GFNK@Skin?1Icons?1Load?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_skin.h
_DATA	SEGMENT
??_C@_0BA@GFNK@Skin?1Icons?1Load?$AA@ DB 'Skin/Icons/Load', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@ECNA@CList?1AddMainMenuItem?$AA@
_DATA	SEGMENT
??_C@_0BG@ECNA@CList?1AddMainMenuItem?$AA@ DB 'CList/AddMainMenuItem', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@NIOH@?$CFs?1MainMenuChats?$AA@
_DATA	SEGMENT
??_C@_0BB@NIOH@?$CFs?1MainMenuChats?$AA@ DB '%s/MainMenuChats', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@IDCD@Tlen?5Chats?$AA@
_DATA	SEGMENT
??_C@_0L@IDCD@Tlen?5Chats?$AA@ DB 'Tlen Chats', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@PLDI@?$CFs?1MainMenuMUC?$AA@
_DATA	SEGMENT
??_C@_0P@PLDI@?$CFs?1MainMenuMUC?$AA@ DB '%s/MainMenuMUC', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@KCGH@Multi?9User?5Conference?$AA@
_DATA	SEGMENT
??_C@_0BG@KCGH@Multi?9User?5Conference?$AA@ DB 'Multi-User Conference', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@PPFD@?$CFs?1MainMenuInbox?$AA@
_DATA	SEGMENT
??_C@_0BB@PPFD@?$CFs?1MainMenuInbox?$AA@ DB '%s/MainMenuInbox', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@KEJH@Tlen?5Inbox?$AA@
_DATA	SEGMENT
??_C@_0L@KEJH@Tlen?5Inbox?$AA@ DB 'Tlen Inbox', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@PDGE@?$CFs?1ContactMenuMUC?$AA@
_DATA	SEGMENT
??_C@_0BC@PDGE@?$CFs?1ContactMenuMUC?$AA@ DB '%s/ContactMenuMUC', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@GIEG@CList?1AddContactMenuItem?$AA@
_DATA	SEGMENT
??_C@_0BJ@GIEG@CList?1AddContactMenuItem?$AA@ DB 'CList/AddContactMenuIte'
	DB	'm', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@LCEH@?$CFs?1ContactMenuVoice?$AA@
_DATA	SEGMENT
??_C@_0BE@LCEH@?$CFs?1ContactMenuVoice?$AA@ DB '%s/ContactMenuVoice', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@EDKM@Voice?5Chat?$AA@
_DATA	SEGMENT
??_C@_0L@EDKM@Voice?5Chat?$AA@ DB 'Voice Chat', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@OBOH@?$CFs?1RequestAuth?$AA@
_DATA	SEGMENT
??_C@_0P@OBOH@?$CFs?1RequestAuth?$AA@ DB '%s/RequestAuth', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@ICHE@Request?5authorization?$AA@
_DATA	SEGMENT
??_C@_0BG@ICHE@Request?5authorization?$AA@ DB 'Request authorization', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@FBAI@?$CFs?1GrantAuth?$AA@
_DATA	SEGMENT
??_C@_0N@FBAI@?$CFs?1GrantAuth?$AA@ DB '%s/GrantAuth', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@FAFD@Grant?5authorization?$AA@
_DATA	SEGMENT
??_C@_0BE@FAFD@Grant?5authorization?$AA@ DB 'Grant authorization', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@MFKA@?$CFs?1SendPicture?$AA@
_DATA	SEGMENT
??_C@_0P@MFKA@?$CFs?1SendPicture?$AA@ DB '%s/SendPicture', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@LLJI@Send?5picture?$AA@
_DATA	SEGMENT
??_C@_0N@LLJI@Send?5picture?$AA@ DB 'Send picture', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_05CNCC@?$CGFile?$AA@
_DATA	SEGMENT
??_C@_05CNCC@?$CGFile?$AA@ DB '&File', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@JJLD@SRFile?1SendCommand?$AA@
_DATA	SEGMENT
??_C@_0BD@JJLD@SRFile?1SendCommand?$AA@ DB 'SRFile/SendCommand', 00H ; `string'
_DATA	ENDS
;	COMDAT _initMenuItems
_TEXT	SEGMENT
_proto$ = 8
_text$ = -340
_mi$ = -40
_clmi$ = -80
_initMenuItems PROC NEAR				; COMDAT

; 399  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 54 01 00
	00		 sub	 esp, 340		; 00000154H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 400  : 	char text[_MAX_PATH];
; 401  : 	CLISTMENUITEM mi, clmi;
; 402  : 	memset(&mi, 0, sizeof(CLISTMENUITEM));

  0000c	6a 28		 push	 40			; 00000028H
  0000e	5e		 pop	 esi
  0000f	33 ff		 xor	 edi, edi
  00011	56		 push	 esi
  00012	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  00015	57		 push	 edi
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 _memset

; 403  : 	mi.cbSize = sizeof(CLISTMENUITEM);
; 404  : 	memset(&clmi, 0, sizeof(CLISTMENUITEM));

  0001c	56		 push	 esi
  0001d	8d 45 b0	 lea	 eax, DWORD PTR _clmi$[ebp]
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	89 75 d8	 mov	 DWORD PTR _mi$[ebp], esi
  00025	e8 00 00 00 00	 call	 _memset

; 405  : 	clmi.cbSize = sizeof(CLISTMENUITEM);

  0002a	89 75 b0	 mov	 DWORD PTR _clmi$[ebp], esi

; 406  : 	clmi.flags = CMIM_FLAGS | CMIF_GRAYED;
; 407  : 
; 408  : 	mi.pszContactOwner = proto->iface.m_szModuleName;

  0002d	8b 75 08	 mov	 esi, DWORD PTR _proto$[ebp]

; 409  : 	mi.popupPosition = 500090000;
; 410  : 
; 411  : 	mi.pszService = text;
; 412  : 	mi.ptszName = proto->iface.m_tszUserName;
; 413  : 	mi.position = -1999901009;
; 414  : 	mi.pszPopupName = (char *)-1;

  00030	83 4d f0 ff	 or	 DWORD PTR _mi$[ebp+24], -1
  00034	c7 45 b8 01 00
	00 40		 mov	 DWORD PTR _clmi$[ebp+8], 1073741825 ; 40000001H
  0003b	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0003e	c7 45 f4 90 c4
	ce 1d		 mov	 DWORD PTR _mi$[ebp+28], 500090000 ; 1dcec490H
  00045	89 45 fc	 mov	 DWORD PTR _mi$[ebp+36], eax
  00048	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  0004e	89 45 ec	 mov	 DWORD PTR _mi$[ebp+20], eax
  00051	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00054	89 45 dc	 mov	 DWORD PTR _mi$[ebp+4], eax

; 415  : 	mi.flags = CMIF_ROOTPOPUP | CMIF_TCHAR;
; 416  : 	mi.hIcon = tlenIcons[TLEN_IDI_TLEN];

  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR _tlenIcons
  0005c	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 417  : 	proto->hMenuRoot = (HANDLE)CallService( MS_CLIST_ADDMAINMENUITEM,  (WPARAM)0, (LPARAM)&mi);

  0005f	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  00062	50		 push	 eax
  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00068	57		 push	 edi
  00069	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@ECNA@CList?1AddMainMenuItem?$AA@ ; `string'
  0006e	c7 45 e4 af ee
	cb 88		 mov	 DWORD PTR _mi$[ebp+12], -1999901009 ; 88cbeeafH
  00075	c7 45 e0 80 02
	00 00		 mov	 DWORD PTR _mi$[ebp+8], 640 ; 00000280H
  0007c	ff 50 24	 call	 DWORD PTR [eax+36]

; 418  :     
; 419  :     mi.flags = CMIF_CHILDPOPUP;
; 420  : 
; 421  : 	sprintf(text, "%s/MainMenuChats", proto->iface.m_szModuleName);

  0007f	ff 76 1c	 push	 DWORD PTR [esi+28]
  00082	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__sprintf
  00088	89 86 98 01 00
	00		 mov	 DWORD PTR [esi+408], eax
  0008e	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00094	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@NIOH@?$CFs?1MainMenuChats?$AA@ ; `string'
  00099	50		 push	 eax
  0009a	c7 45 e0 00 01
	00 00		 mov	 DWORD PTR _mi$[ebp+8], 256 ; 00000100H
  000a1	ff d3		 call	 ebx

; 422  : 	CreateServiceFunction_Ex(text, proto, TlenMUCMenuHandleChats);

  000a3	68 00 00 00 00	 push	 OFFSET FLAT:_TlenMUCMenuHandleChats
  000a8	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  000ae	56		 push	 esi
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 _CreateServiceFunction_Ex

; 423  : 	mi.pszName = Translate("Tlen Chats");

  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000ba	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@IDCD@Tlen?5Chats?$AA@ ; `string'
  000bf	57		 push	 edi
  000c0	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  000c5	57		 push	 edi
  000c6	ff 50 24	 call	 DWORD PTR [eax+36]
  000c9	89 45 dc	 mov	 DWORD PTR _mi$[ebp+4], eax

; 424  : 	mi.position = 2000050001;
; 425  : 	mi.hIcon = tlenIcons[TLEN_IDI_CHATS];

  000cc	a1 0c 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+12
  000d1	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 426  : 	mi.pszService = text;

  000d4	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  000da	89 45 ec	 mov	 DWORD PTR _mi$[ebp+20], eax

; 427  :     mi.pszPopupName = (char *)proto->hMenuRoot;

  000dd	8b 86 98 01 00
	00		 mov	 eax, DWORD PTR [esi+408]
  000e3	83 c4 48	 add	 esp, 72			; 00000048H
  000e6	89 45 f0	 mov	 DWORD PTR _mi$[ebp+24], eax

; 428  : 	proto->hMenuChats = (HANDLE) CallService(MS_CLIST_ADDMAINMENUITEM, 0, (LPARAM) &mi);

  000e9	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  000ec	c7 45 e4 51 57
	36 77		 mov	 DWORD PTR _mi$[ebp+12], 2000050001 ; 77365751H
  000f3	50		 push	 eax
  000f4	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000f9	6a 00		 push	 0
  000fb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@ECNA@CList?1AddMainMenuItem?$AA@ ; `string'
  00100	ff 50 24	 call	 DWORD PTR [eax+36]

; 429  : 	CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuChats, (LPARAM) &clmi);

  00103	8d 4d b0	 lea	 ecx, DWORD PTR _clmi$[ebp]
  00106	89 86 ec 00 00
	00		 mov	 DWORD PTR [esi+236], eax
  0010c	51		 push	 ecx
  0010d	50		 push	 eax
  0010e	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00113	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@CGG@CList?1ModifyMenuItem?$AA@ ; `string'
  00118	ff 50 24	 call	 DWORD PTR [eax+36]

; 430  : 
; 431  : 	// "Multi-User Conference"
; 432  : 	sprintf(text, "%s/MainMenuMUC", proto->iface.m_szModuleName);

  0011b	ff 76 1c	 push	 DWORD PTR [esi+28]
  0011e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@PLDI@?$CFs?1MainMenuMUC?$AA@ ; `string'
  00123	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00129	50		 push	 eax
  0012a	ff d3		 call	 ebx

; 433  : 	CreateServiceFunction_Ex(text, proto, TlenMUCMenuHandleMUC);

  0012c	68 00 00 00 00	 push	 OFFSET FLAT:_TlenMUCMenuHandleMUC
  00131	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00137	56		 push	 esi
  00138	50		 push	 eax
  00139	e8 00 00 00 00	 call	 _CreateServiceFunction_Ex

; 434  : 	mi.pszName = Translate("Multi-User Conference");

  0013e	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00143	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@KCGH@Multi?9User?5Conference?$AA@ ; `string'
  00148	6a 00		 push	 0
  0014a	57		 push	 edi
  0014b	ff 50 24	 call	 DWORD PTR [eax+36]
  0014e	89 45 dc	 mov	 DWORD PTR _mi$[ebp+4], eax

; 435  : 	mi.position = 2000050002;
; 436  : 	mi.hIcon = tlenIcons[TLEN_IDI_MUC];

  00151	a1 08 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+8
  00156	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 437  : 	mi.pszService = text;

  00159	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  0015f	89 45 ec	 mov	 DWORD PTR _mi$[ebp+20], eax

; 438  : 	proto->hMenuMUC = (HANDLE) CallService(MS_CLIST_ADDMAINMENUITEM, 0, (LPARAM) &mi);

  00162	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  00165	50		 push	 eax
  00166	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0016b	6a 00		 push	 0
  0016d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@ECNA@CList?1AddMainMenuItem?$AA@ ; `string'
  00172	c7 45 e4 52 57
	36 77		 mov	 DWORD PTR _mi$[ebp+12], 2000050002 ; 77365752H
  00179	ff 50 24	 call	 DWORD PTR [eax+36]
  0017c	83 c4 48	 add	 esp, 72			; 00000048H

; 439  : 	CallService(MS_CLIST_MODIFYMENUITEM, (WPARAM) proto->hMenuMUC, (LPARAM) &clmi);

  0017f	8d 4d b0	 lea	 ecx, DWORD PTR _clmi$[ebp]
  00182	89 86 e8 00 00
	00		 mov	 DWORD PTR [esi+232], eax
  00188	51		 push	 ecx
  00189	50		 push	 eax
  0018a	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0018f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@CGG@CList?1ModifyMenuItem?$AA@ ; `string'
  00194	ff 50 24	 call	 DWORD PTR [eax+36]

; 440  : 
; 441  : 	sprintf(text, "%s/MainMenuInbox", proto->iface.m_szModuleName);

  00197	ff 76 1c	 push	 DWORD PTR [esi+28]
  0019a	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  001a0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@PPFD@?$CFs?1MainMenuInbox?$AA@ ; `string'
  001a5	50		 push	 eax
  001a6	ff d3		 call	 ebx

; 442  : 	CreateServiceFunction_Ex(text, proto, TlenMenuHandleInbox);

  001a8	68 00 00 00 00	 push	 OFFSET FLAT:_TlenMenuHandleInbox
  001ad	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  001b3	56		 push	 esi
  001b4	50		 push	 eax
  001b5	e8 00 00 00 00	 call	 _CreateServiceFunction_Ex

; 443  : 	mi.pszName = Translate("Tlen Inbox");

  001ba	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001bf	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@KEJH@Tlen?5Inbox?$AA@ ; `string'
  001c4	6a 00		 push	 0
  001c6	57		 push	 edi
  001c7	ff 50 24	 call	 DWORD PTR [eax+36]
  001ca	89 45 dc	 mov	 DWORD PTR _mi$[ebp+4], eax

; 444  : 	mi.position = 2000050003;
; 445  : 	mi.hIcon = tlenIcons[TLEN_IDI_MAIL];

  001cd	a1 04 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+4
  001d2	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 446  : 	mi.pszService = text;

  001d5	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  001db	89 45 ec	 mov	 DWORD PTR _mi$[ebp+20], eax

; 447  : 	proto->hMenuInbox = (HANDLE) CallService(MS_CLIST_ADDMAINMENUITEM, 0, (LPARAM) &mi);

  001de	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  001e1	50		 push	 eax
  001e2	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001e7	6a 00		 push	 0
  001e9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@ECNA@CList?1AddMainMenuItem?$AA@ ; `string'
  001ee	c7 45 e4 53 57
	36 77		 mov	 DWORD PTR _mi$[ebp+12], 2000050003 ; 77365753H
  001f5	ff 50 24	 call	 DWORD PTR [eax+36]

; 448  : 
; 449  : 	// "Invite to MUC"
; 450  : 	sprintf(text, "%s/ContactMenuMUC", proto->iface.m_szModuleName);

  001f8	ff 76 1c	 push	 DWORD PTR [esi+28]
  001fb	89 86 f0 00 00
	00		 mov	 DWORD PTR [esi+240], eax
  00201	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00207	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@PDGE@?$CFs?1ContactMenuMUC?$AA@ ; `string'
  0020c	50		 push	 eax
  0020d	ff d3		 call	 ebx
  0020f	83 c4 48	 add	 esp, 72			; 00000048H

; 451  : 	CreateServiceFunction_Ex(text, proto, TlenMUCContactMenuHandleMUC);

  00212	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00218	68 00 00 00 00	 push	 OFFSET FLAT:_TlenMUCContactMenuHandleMUC
  0021d	56		 push	 esi
  0021e	50		 push	 eax
  0021f	e8 00 00 00 00	 call	 _CreateServiceFunction_Ex

; 452  : 	mi.pszName = Translate("Multi-User Conference");

  00224	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00229	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@KCGH@Multi?9User?5Conference?$AA@ ; `string'
  0022e	6a 00		 push	 0
  00230	57		 push	 edi
  00231	ff 50 24	 call	 DWORD PTR [eax+36]
  00234	89 45 dc	 mov	 DWORD PTR _mi$[ebp+4], eax

; 453  : 	mi.position = -2000020000;
; 454  : 	mi.hIcon = tlenIcons[TLEN_IDI_MUC];

  00237	a1 08 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+8
  0023c	c7 45 e4 e0 1d
	ca 88		 mov	 DWORD PTR _mi$[ebp+12], -2000020000 ; 88ca1de0H
  00243	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 455  : 	mi.pszService = text;

  00246	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  0024c	89 45 ec	 mov	 DWORD PTR _mi$[ebp+20], eax

; 456  : 	proto->hMenuContactMUC = (HANDLE) CallService(MS_CLIST_ADDCONTACTMENUITEM, 0, (LPARAM) &mi);

  0024f	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  00252	50		 push	 eax
  00253	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00258	6a 00		 push	 0
  0025a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@GIEG@CList?1AddContactMenuItem?$AA@ ; `string'
  0025f	ff 50 24	 call	 DWORD PTR [eax+36]

; 457  : 
; 458  : 	// "Invite to voice chat"
; 459  : 	sprintf(text, "%s/ContactMenuVoice", proto->iface.m_szModuleName);

  00262	ff 76 1c	 push	 DWORD PTR [esi+28]
  00265	89 86 f4 00 00
	00		 mov	 DWORD PTR [esi+244], eax
  0026b	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00271	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@LCEH@?$CFs?1ContactMenuVoice?$AA@ ; `string'
  00276	50		 push	 eax
  00277	ff d3		 call	 ebx

; 460  : 	CreateServiceFunction_Ex(text, proto, TlenVoiceContactMenuHandleVoice);

  00279	68 00 00 00 00	 push	 OFFSET FLAT:_TlenVoiceContactMenuHandleVoice
  0027e	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00284	56		 push	 esi
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 _CreateServiceFunction_Ex

; 461  : 	mi.pszName = Translate("Voice Chat");

  0028b	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00290	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@EDKM@Voice?5Chat?$AA@ ; `string'
  00295	6a 00		 push	 0
  00297	57		 push	 edi
  00298	ff 50 24	 call	 DWORD PTR [eax+36]
  0029b	89 45 dc	 mov	 DWORD PTR _mi$[ebp+4], eax

; 462  : 	mi.position = -2000018000;
; 463  : 	mi.hIcon = tlenIcons[TLEN_IDI_VOICE];

  0029e	a1 18 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+24
  002a3	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 464  : 	mi.pszService = text;

  002a6	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  002ac	83 c4 48	 add	 esp, 72			; 00000048H
  002af	89 45 ec	 mov	 DWORD PTR _mi$[ebp+20], eax

; 465  : 	proto->hMenuContactVoice = (HANDLE) CallService(MS_CLIST_ADDCONTACTMENUITEM, 0, (LPARAM) &mi);

  002b2	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  002b5	c7 45 e4 b0 25
	ca 88		 mov	 DWORD PTR _mi$[ebp+12], -2000018000 ; 88ca25b0H
  002bc	50		 push	 eax
  002bd	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  002c2	6a 00		 push	 0
  002c4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@GIEG@CList?1AddContactMenuItem?$AA@ ; `string'
  002c9	ff 50 24	 call	 DWORD PTR [eax+36]

; 466  : 
; 467  : 	// "Request authorization"
; 468  : 	sprintf(text, "%s/RequestAuth", proto->iface.m_szModuleName);

  002cc	ff 76 1c	 push	 DWORD PTR [esi+28]
  002cf	89 86 fc 00 00
	00		 mov	 DWORD PTR [esi+252], eax
  002d5	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  002db	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@OBOH@?$CFs?1RequestAuth?$AA@ ; `string'
  002e0	50		 push	 eax
  002e1	ff d3		 call	 ebx

; 469  : 	CreateServiceFunction_Ex(text, proto, TlenContactMenuHandleRequestAuth);

  002e3	68 00 00 00 00	 push	 OFFSET FLAT:_TlenContactMenuHandleRequestAuth
  002e8	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  002ee	56		 push	 esi
  002ef	50		 push	 eax
  002f0	e8 00 00 00 00	 call	 _CreateServiceFunction_Ex

; 470  : 	mi.pszName = Translate("Request authorization");

  002f5	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  002fa	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@ICHE@Request?5authorization?$AA@ ; `string'
  002ff	6a 00		 push	 0
  00301	57		 push	 edi
  00302	ff 50 24	 call	 DWORD PTR [eax+36]
  00305	89 45 dc	 mov	 DWORD PTR _mi$[ebp+4], eax

; 471  : 	mi.position = -2000001001;
; 472  : 	mi.hIcon = tlenIcons[TLEN_IDI_REQUEST];

  00308	a1 14 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+20
  0030d	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 473  : 	mi.pszService = text;

  00310	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00316	89 45 ec	 mov	 DWORD PTR _mi$[ebp+20], eax

; 474  : 	proto->hMenuContactRequestAuth = (HANDLE) CallService(MS_CLIST_ADDCONTACTMENUITEM, 0, (LPARAM) &mi);

  00319	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  0031c	50		 push	 eax
  0031d	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00322	6a 00		 push	 0
  00324	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@GIEG@CList?1AddContactMenuItem?$AA@ ; `string'
  00329	c7 45 e4 17 68
	ca 88		 mov	 DWORD PTR _mi$[ebp+12], -2000001001 ; 88ca6817H
  00330	ff 50 24	 call	 DWORD PTR [eax+36]

; 475  : 
; 476  : 	// "Grant authorization"
; 477  : 	sprintf(text, "%s/GrantAuth", proto->iface.m_szModuleName);

  00333	ff 76 1c	 push	 DWORD PTR [esi+28]
  00336	89 86 04 01 00
	00		 mov	 DWORD PTR [esi+260], eax
  0033c	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00342	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@FBAI@?$CFs?1GrantAuth?$AA@ ; `string'
  00347	50		 push	 eax
  00348	ff d3		 call	 ebx
  0034a	83 c4 48	 add	 esp, 72			; 00000048H

; 478  : 	CreateServiceFunction_Ex(text, proto, TlenContactMenuHandleGrantAuth);

  0034d	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00353	68 00 00 00 00	 push	 OFFSET FLAT:_TlenContactMenuHandleGrantAuth
  00358	56		 push	 esi
  00359	50		 push	 eax
  0035a	e8 00 00 00 00	 call	 _CreateServiceFunction_Ex

; 479  : 	mi.pszName = Translate("Grant authorization");

  0035f	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00364	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@FAFD@Grant?5authorization?$AA@ ; `string'
  00369	6a 00		 push	 0
  0036b	57		 push	 edi
  0036c	ff 50 24	 call	 DWORD PTR [eax+36]
  0036f	89 45 dc	 mov	 DWORD PTR _mi$[ebp+4], eax

; 480  : 	mi.position = -2000001000;
; 481  : 	mi.hIcon = tlenIcons[TLEN_IDI_GRANT];

  00372	a1 10 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+16
  00377	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 482  : 	mi.pszService = text;

  0037a	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00380	89 45 ec	 mov	 DWORD PTR _mi$[ebp+20], eax

; 483  : 	proto->hMenuContactGrantAuth = (HANDLE) CallService(MS_CLIST_ADDCONTACTMENUITEM, 0, (LPARAM) &mi);

  00383	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  00386	50		 push	 eax
  00387	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0038c	6a 00		 push	 0
  0038e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@GIEG@CList?1AddContactMenuItem?$AA@ ; `string'
  00393	c7 45 e4 18 68
	ca 88		 mov	 DWORD PTR _mi$[ebp+12], -2000001000 ; 88ca6818H
  0039a	ff 50 24	 call	 DWORD PTR [eax+36]

; 484  : 
; 485  : 	// "Send picture"
; 486  : 	sprintf(text, "%s/SendPicture", proto->iface.m_szModuleName);

  0039d	ff 76 1c	 push	 DWORD PTR [esi+28]
  003a0	89 86 00 01 00
	00		 mov	 DWORD PTR [esi+256], eax
  003a6	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  003ac	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@MFKA@?$CFs?1SendPicture?$AA@ ; `string'
  003b1	50		 push	 eax
  003b2	ff d3		 call	 ebx

; 487  : 	CreateServiceFunction_Ex(text, proto, TlenContactMenuHandleSendPicture);

  003b4	68 00 00 00 00	 push	 OFFSET FLAT:_TlenContactMenuHandleSendPicture
  003b9	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  003bf	56		 push	 esi
  003c0	50		 push	 eax
  003c1	e8 00 00 00 00	 call	 _CreateServiceFunction_Ex

; 488  : 	mi.pszName = Translate("Send picture");

  003c6	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  003cb	33 db		 xor	 ebx, ebx
  003cd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@LLJI@Send?5picture?$AA@ ; `string'
  003d2	53		 push	 ebx
  003d3	57		 push	 edi
  003d4	ff 50 24	 call	 DWORD PTR [eax+36]
  003d7	89 45 dc	 mov	 DWORD PTR _mi$[ebp+4], eax

; 489  : //	clmi.flags = CMIM_FLAGS | CMIF_NOTOFFLINE;// | CMIF_GRAYED;
; 490  : 	mi.position = -2000001002;
; 491  : 	mi.hIcon = tlenIcons[TLEN_IDI_GRANT];

  003da	a1 10 00 00 00	 mov	 eax, DWORD PTR _tlenIcons+16
  003df	83 c4 48	 add	 esp, 72			; 00000048H
  003e2	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 492  : 	mi.pszService = text;

  003e5	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]

; 493  : 	//CallService(MS_CLIST_ADDCONTACTMENUITEM, 0, (LPARAM) &mi); //hMenuContactGrantAuth = (HANDLE)
; 494  : 
; 495  : 	mi.position = -2000020000;

  003eb	c7 45 e4 e0 1d
	ca 88		 mov	 DWORD PTR _mi$[ebp+12], -2000020000 ; 88ca1de0H
  003f2	89 45 ec	 mov	 DWORD PTR _mi$[ebp+20], eax

; 496  : 	mi.flags = CMIF_NOTONLINE;
; 497  : 	mi.hIcon = LoadSkinnedIcon(SKINICON_EVENT_FILE);

  003f5	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  003fa	53		 push	 ebx
  003fb	6a 66		 push	 102			; 00000066H
  003fd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@GFNK@Skin?1Icons?1Load?$AA@ ; `string'
  00402	c7 45 e0 10 00
	00 00		 mov	 DWORD PTR _mi$[ebp+8], 16 ; 00000010H
  00409	ff 50 24	 call	 DWORD PTR [eax+36]
  0040c	89 45 e8	 mov	 DWORD PTR _mi$[ebp+16], eax

; 498  : 	mi.pszName = Translate("&File");

  0040f	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00414	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05CNCC@?$CGFile?$AA@ ; `string'
  00419	53		 push	 ebx
  0041a	57		 push	 edi
  0041b	ff 50 24	 call	 DWORD PTR [eax+36]
  0041e	89 45 dc	 mov	 DWORD PTR _mi$[ebp+4], eax

; 499  : 	mi.pszService = MS_FILE_SENDFILE;
; 500  : 	proto->hMenuContactFile = (HANDLE) CallService(MS_CLIST_ADDCONTACTMENUITEM, 0, (LPARAM) &mi);

  00421	8d 45 d8	 lea	 eax, DWORD PTR _mi$[ebp]
  00424	50		 push	 eax
  00425	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0042a	53		 push	 ebx
  0042b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@GIEG@CList?1AddContactMenuItem?$AA@ ; `string'
  00430	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _mi$[ebp+20], OFFSET FLAT:??_C@_0BD@JJLD@SRFile?1SendCommand?$AA@ ; `string'
  00437	ff 50 24	 call	 DWORD PTR [eax+36]
  0043a	83 c4 24	 add	 esp, 36			; 00000024H
  0043d	89 86 f8 00 00
	00		 mov	 DWORD PTR [esi+248], eax
  00443	5f		 pop	 edi
  00444	5e		 pop	 esi
  00445	5b		 pop	 ebx

; 501  :     
; 502  : }

  00446	c9		 leave
  00447	c3		 ret	 0
_initMenuItems ENDP
_TEXT	ENDS
EXTRN	_JabberListUninit:NEAR
EXTRN	__imp__DeleteCriticalSection@4:NEAR
EXTRN	_JabberIqUninit:NEAR
EXTRN	_JabberWsUninit:NEAR
EXTRN	_UnhookEvents_Ex:NEAR
EXTRN	_JabberSerialUninit:NEAR
;	COMDAT _tlenProtoUninit
_TEXT	SEGMENT
_proto$ = 8
_tlenProtoUninit PROC NEAR				; COMDAT

; 555  : {

  00000	56		 push	 esi

; 556  : 	if (proto->hTlenNudge)

  00001	8b 74 24 08	 mov	 esi, DWORD PTR _proto$[esp]
  00005	8b 86 e4 00 00
	00		 mov	 eax, DWORD PTR [esi+228]
  0000b	85 c0		 test	 eax, eax
  0000d	74 0a		 je	 SHORT $L84034

; 557  : 		DestroyHookableEvent(proto->hTlenNudge);

  0000f	50		 push	 eax
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00015	ff 50 04	 call	 DWORD PTR [eax+4]
  00018	59		 pop	 ecx
$L84034:

; 558  :     UnhookEvents_Ex(proto);

  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 _UnhookEvents_Ex

; 559  :     //DestroyServices_Ex(proto);
; 560  : 	JabberWsUninit(proto);

  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 _JabberWsUninit

; 561  : 	JabberListUninit(proto);

  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 _JabberListUninit

; 562  : 	JabberIqUninit(proto);

  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 _JabberIqUninit

; 563  : 	JabberSerialUninit(proto);

  00031	56		 push	 esi
  00032	e8 00 00 00 00	 call	 _JabberSerialUninit
  00037	83 c4 14	 add	 esp, 20			; 00000014H

; 564  : 	DeleteCriticalSection(&proto->modeMsgMutex);

  0003a	8d 86 80 01 00
	00		 lea	 eax, DWORD PTR [esi+384]
  00040	50		 push	 eax
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4

; 565  : 	mir_free(proto->modeMsgs.szOnline);

  00047	ff b6 c8 00 00
	00		 push	 DWORD PTR [esi+200]
  0004d	ff 15 0c 00 00
	00		 call	 DWORD PTR _mmi+12

; 566  : 	mir_free(proto->modeMsgs.szAway);

  00053	ff b6 cc 00 00
	00		 push	 DWORD PTR [esi+204]
  00059	ff 15 0c 00 00
	00		 call	 DWORD PTR _mmi+12

; 567  : 	mir_free(proto->modeMsgs.szNa);

  0005f	ff b6 d0 00 00
	00		 push	 DWORD PTR [esi+208]
  00065	ff 15 0c 00 00
	00		 call	 DWORD PTR _mmi+12

; 568  : 	mir_free(proto->modeMsgs.szDnd);

  0006b	ff b6 d4 00 00
	00		 push	 DWORD PTR [esi+212]
  00071	ff 15 0c 00 00
	00		 call	 DWORD PTR _mmi+12

; 569  : 	mir_free(proto->modeMsgs.szFreechat);

  00077	ff b6 d8 00 00
	00		 push	 DWORD PTR [esi+216]
  0007d	ff 15 0c 00 00
	00		 call	 DWORD PTR _mmi+12

; 570  : 	mir_free(proto->modeMsgs.szInvisible);

  00083	ff b6 dc 00 00
	00		 push	 DWORD PTR [esi+220]
  00089	ff 15 0c 00 00
	00		 call	 DWORD PTR _mmi+12

; 571  :     mir_free(proto);

  0008f	56		 push	 esi
  00090	ff 15 0c 00 00
	00		 call	 DWORD PTR _mmi+12
  00096	83 c4 1c	 add	 esp, 28			; 0000001cH

; 572  :  	return 0;

  00099	33 c0		 xor	 eax, eax
  0009b	5e		 pop	 esi

; 573  : }

  0009c	c3		 ret	 0
_tlenProtoUninit ENDP
_TEXT	ENDS
PUBLIC	_Unload
;	COMDAT _Unload
_TEXT	SEGMENT
_Unload	PROC NEAR					; COMDAT

; 612  :     TlenReleaseIcons();

  00000	e8 00 00 00 00	 call	 _TlenReleaseIcons

; 613  : 	DeleteCriticalSection(&mutex);

  00005	68 00 00 00 00	 push	 OFFSET FLAT:_mutex
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4

; 614  : 	return 0;

  00010	33 c0		 xor	 eax, eax

; 615  : }

  00012	c3		 ret	 0
_Unload	ENDP
_TEXT	ENDS
END
