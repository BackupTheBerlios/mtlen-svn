	TITLE	E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\tlen_advsearch.c
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BG@FJFA@Miranda?1System?1GetMMI?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DNA@Miranda?1System?1GetLI?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@FHMP@Miranda?1System?1GetUTFI?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@DCOH@Miranda?1Thread?1Fork?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@IENN@Miranda?1Thread?1ForkEx?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@FGIN@Miranda?1SysTerm?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@LIGC@Utils?1AddToWindowList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@PEAI@Utils?1RemoveFromWindowList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@GMNB@Utils?1FindWindowInList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@NOMI@Utils?1BroadcastToWindowList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CB@CFCA@Utils?1BroadcastToWindowListAsync@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@MDKL@Utils?1SaveWindowPos?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@GALP@Utils?1RestoreWindowPos?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CHLF@Miranda?1System?1GetMD5I?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@FOPF@Miranda?1System?1GetSHA1I?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@OCFE@Netlib?1CloseHandle?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@EFDJ@Netlib?1Send?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@GFGB@Netlib?1Recv?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@CMGK@Netlib?1Log?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@GDOO@Netlib?1InitSecurityProvider?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@JINJ@Netlib?1DestroySecurityProvider?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@CBFG@Netlib?1NtlmCreateResponse?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@COCL@Proto?1EnumAccounts?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@CCNI@Proto?1GetAccount?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@IFFL@Proto?1BroadcastAck?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@MGBG@DB?1Event?1GetText?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@BEPM@DB?1Contact?1GetSettingStr?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0DA@FLKM@C?3?2MirandaDev?2miranda_svn2?2inclu@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@IGCO@DB?1Contact?1DeleteSetting?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@GNEH@LangPack?1TranslateDialog?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@GFNK@Skin?1Icons?1Load?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@BLFF@Skin?1Icons?1LoadProto?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@CNOA@Skin?1Sounds?1AddNew?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@LENC@Skin?1Sounds?1Play?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@PNGM@PopUp?1AddPopUp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@OBDC@PopUp?1AddPopUpEx?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CGKI@PopUp?1AddPopUpW?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@HIHP@PopUp?1GetContact?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@CCHD@PopUp?1GetPluginData?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@HKEA@PopUp?1IsSecondLineShown?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@KGOE@PopUp?1Changetext?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@LAPD@PopUp?1ChangetextW?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@KOPP@PopUp?1Change?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@BGJ@PopUp?1ShowMessage?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@NFFE@PopUp?1ShowMessageW?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@MAHO@PopUp?1AddPopupClass?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_11A@?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@CFON@?$DM?$CFs?$DO?$CFs?$DM?1?$CFs?$DO?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@JHIP@?$DM?$CFs?$DO?$CFd?$DM?1?$CFs?$DO?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05KELB@first?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04ONL@last?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04BGEO@nick?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05JKH@email?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KBOJ@s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FNHM@d?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FOJL@u?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01IJJ@c?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PGLG@j?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KDFD@m?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01LHO@r?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FOFA@p?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DBGetContactSettingByte_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSettingWord_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSettingDword_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSettingString_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBFreeVariant
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TranslateDialogDefault
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitComboBox
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenAdvSearchDlgProc@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _FetchField
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _FetchCombo
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenAdvSearchCreateQuery
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	_TlenAdvSearchDlgProc@16
EXTRN	__imp__GetDlgItem@8:NEAR
EXTRN	_tlenFieldGender:BYTE
EXTRN	_tlenFieldLookfor:BYTE
EXTRN	_tlenFieldStatus:BYTE
EXTRN	_tlenFieldOccupation:BYTE
EXTRN	_tlenFieldPlan:BYTE
;	COMDAT _TlenAdvSearchDlgProc@16
_TEXT	SEGMENT
_hwndDlg$ = 8
_msg$ = 12
_TlenAdvSearchDlgProc@16 PROC NEAR			; COMDAT

; 44   : 	switch(msg) {

  00000	81 7c 24 08 10
	01 00 00	 cmp	 DWORD PTR _msg$[esp-4], 272 ; 00000110H
  00008	74 07		 je	 SHORT $L82837

; 53   : 	}
; 54   : 	return FALSE;

  0000a	33 c0		 xor	 eax, eax
  0000c	e9 82 00 00 00	 jmp	 $L82832
$L82837:
  00011	56		 push	 esi
  00012	57		 push	 edi

; 45   : 	case WM_INITDIALOG:
; 46   : 		TranslateDialogDefault(hwndDlg);

  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR _hwndDlg$[esp+4]
  00017	57		 push	 edi
  00018	e8 00 00 00 00	 call	 _TranslateDialogDefault

; 47   : 		InitComboBox(GetDlgItem(hwndDlg, IDC_GENDER), tlenFieldGender);

  0001d	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetDlgItem@8
  00023	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], OFFSET FLAT:_tlenFieldGender
  0002a	68 48 04 00 00	 push	 1096			; 00000448H
  0002f	57		 push	 edi
  00030	ff d6		 call	 esi
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 _InitComboBox
  00038	59		 pop	 ecx
  00039	59		 pop	 ecx

; 48   : 		InitComboBox(GetDlgItem(hwndDlg, IDC_LOOKFOR), tlenFieldLookfor);

  0003a	68 00 00 00 00	 push	 OFFSET FLAT:_tlenFieldLookfor
  0003f	68 82 04 00 00	 push	 1154			; 00000482H
  00044	57		 push	 edi
  00045	ff d6		 call	 esi
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 _InitComboBox
  0004d	59		 pop	 ecx
  0004e	59		 pop	 ecx

; 49   : 		InitComboBox(GetDlgItem(hwndDlg, IDC_STATUS), tlenFieldStatus);

  0004f	68 00 00 00 00	 push	 OFFSET FLAT:_tlenFieldStatus
  00054	68 86 05 00 00	 push	 1414			; 00000586H
  00059	57		 push	 edi
  0005a	ff d6		 call	 esi
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 _InitComboBox
  00062	59		 pop	 ecx
  00063	59		 pop	 ecx

; 50   : 		InitComboBox(GetDlgItem(hwndDlg, IDC_OCCUPATION), tlenFieldOccupation);

  00064	68 00 00 00 00	 push	 OFFSET FLAT:_tlenFieldOccupation
  00069	68 2a 04 00 00	 push	 1066			; 0000042aH
  0006e	57		 push	 edi
  0006f	ff d6		 call	 esi
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 _InitComboBox
  00077	59		 pop	 ecx
  00078	59		 pop	 ecx

; 51   : 		InitComboBox(GetDlgItem(hwndDlg, IDC_PLAN), tlenFieldPlan);

  00079	68 00 00 00 00	 push	 OFFSET FLAT:_tlenFieldPlan
  0007e	68 87 05 00 00	 push	 1415			; 00000587H
  00083	57		 push	 edi
  00084	ff d6		 call	 esi
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 _InitComboBox
  0008c	59		 pop	 ecx
  0008d	59		 pop	 ecx

; 52   : 		return TRUE;

  0008e	6a 01		 push	 1
  00090	58		 pop	 eax
  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
$L82832:

; 55   : }

  00093	c2 10 00	 ret	 16			; 00000010H
_TlenAdvSearchDlgProc@16 ENDP
_TEXT	ENDS
PUBLIC	??_C@_11A@?$AA?$AA@				; `string'
PUBLIC	??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@	; `string'
EXTRN	__imp__SendMessageW@16:NEAR
EXTRN	_pluginLink:DWORD
;	COMDAT ??_C@_11A@?$AA?$AA@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\tlen_advsearch.c
_BSS	SEGMENT
??_C@_11A@?$AA?$AA@ DW 01H DUP (?)			; `string'
_BSS	ENDS
;	COMDAT ??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@
_DATA	SEGMENT
??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ DB 'LangPack/TranslateStrin'
	DB	'g', 00H					; `string'
_DATA	ENDS
;	COMDAT _InitComboBox
_TEXT	SEGMENT
_hwndCombo$ = 8
_fieldMap$ = 12
_InitComboBox PROC NEAR					; COMDAT

; 28   : {

  00000	53		 push	 ebx

; 29   : 	int i, n;
; 30   : 
; 31   : 	n = SendMessage(hwndCombo, CB_ADDSTRING, 0, (LPARAM)_T(""));

  00001	8b 5c 24 08	 mov	 ebx, DWORD PTR _hwndCombo$[esp]
  00005	55		 push	 ebp
  00006	56		 push	 esi
  00007	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__SendMessageW@16
  0000d	57		 push	 edi
  0000e	33 ed		 xor	 ebp, ebp
  00010	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_11A@?$AA?$AA@ ; `string'
  00015	55		 push	 ebp
  00016	68 43 01 00 00	 push	 323			; 00000143H
  0001b	53		 push	 ebx
  0001c	ff d6		 call	 esi
  0001e	8b f8		 mov	 edi, eax

; 32   : 	SendMessage(hwndCombo, CB_SETITEMDATA, n, 0);

  00020	55		 push	 ebp
  00021	57		 push	 edi
  00022	68 51 01 00 00	 push	 337			; 00000151H
  00027	53		 push	 ebx
  00028	ff d6		 call	 esi

; 33   : 	SendMessage(hwndCombo, CB_SETCURSEL, n, 0);

  0002a	55		 push	 ebp
  0002b	57		 push	 edi
  0002c	68 4e 01 00 00	 push	 334			; 0000014eH
  00031	53		 push	 ebx
  00032	ff d6		 call	 esi

; 34   : 	for(i=0;;i++) {
; 35   : 		if (fieldMap[i].name == NULL)

  00034	8b 7c 24 18	 mov	 edi, DWORD PTR _fieldMap$[esp+12]
  00038	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0003b	3b c5		 cmp	 eax, ebp
  0003d	74 3b		 je	 SHORT $L83006

; 38   : 		SendMessage(hwndCombo, CB_SETITEMDATA, n, fieldMap[i].id);

  0003f	8b ef		 mov	 ebp, edi
$L82815:

; 36   : 			break;
; 37   : 		n = SendMessage(hwndCombo, CB_ADDSTRING, 0, (LPARAM) TranslateTS(fieldMap[i].name));

  00041	50		 push	 eax
  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00047	68 00 10 00 00	 push	 4096			; 00001000H
  0004c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  00051	ff 50 24	 call	 DWORD PTR [eax+36]
  00054	83 c4 0c	 add	 esp, 12			; 0000000cH
  00057	50		 push	 eax
  00058	6a 00		 push	 0
  0005a	68 43 01 00 00	 push	 323			; 00000143H
  0005f	53		 push	 ebx
  00060	ff d6		 call	 esi

; 38   : 		SendMessage(hwndCombo, CB_SETITEMDATA, n, fieldMap[i].id);

  00062	ff 75 00	 push	 DWORD PTR [ebp]
  00065	50		 push	 eax
  00066	68 51 01 00 00	 push	 337			; 00000151H
  0006b	53		 push	 ebx
  0006c	ff d6		 call	 esi
  0006e	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00071	83 c7 08	 add	 edi, 8
  00074	85 c0		 test	 eax, eax
  00076	8b ef		 mov	 ebp, edi
  00078	75 c7		 jne	 SHORT $L82815
$L83006:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5d		 pop	 ebp
  0007d	5b		 pop	 ebx

; 39   : 	}
; 40   : }

  0007e	c3		 ret	 0
_InitComboBox ENDP
_TEXT	ENDS
PUBLIC	_TlenAdvSearchCreateQuery
PUBLIC	??_C@_05KELB@first?$AA@				; `string'
PUBLIC	??_C@_04ONL@last?$AA@				; `string'
PUBLIC	??_C@_04BGEO@nick?$AA@				; `string'
PUBLIC	??_C@_05JKH@email?$AA@				; `string'
PUBLIC	??_C@_01KBOJ@s?$AA@				; `string'
PUBLIC	??_C@_01FNHM@d?$AA@				; `string'
PUBLIC	??_C@_01FOJL@u?$AA@				; `string'
PUBLIC	??_C@_01IJJ@c?$AA@				; `string'
PUBLIC	??_C@_01PGLG@j?$AA@				; `string'
PUBLIC	??_C@_01PHOL@e?$AA@				; `string'
PUBLIC	??_C@_01KDFD@m?$AA@				; `string'
PUBLIC	??_C@_01LHO@r?$AA@				; `string'
PUBLIC	??_C@_01FOFA@p?$AA@				; `string'
;	COMDAT ??_C@_05KELB@first?$AA@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\tlen_advsearch.c
_DATA	SEGMENT
??_C@_05KELB@first?$AA@ DB 'first', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04ONL@last?$AA@
_DATA	SEGMENT
??_C@_04ONL@last?$AA@ DB 'last', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04BGEO@nick?$AA@
_DATA	SEGMENT
??_C@_04BGEO@nick?$AA@ DB 'nick', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05JKH@email?$AA@
_DATA	SEGMENT
??_C@_05JKH@email?$AA@ DB 'email', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_01KBOJ@s?$AA@
_DATA	SEGMENT
??_C@_01KBOJ@s?$AA@ DB 's', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_01FNHM@d?$AA@
_DATA	SEGMENT
??_C@_01FNHM@d?$AA@ DB 'd', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_01FOJL@u?$AA@
_DATA	SEGMENT
??_C@_01FOJL@u?$AA@ DB 'u', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_01IJJ@c?$AA@
_DATA	SEGMENT
??_C@_01IJJ@c?$AA@ DB 'c', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_01PGLG@j?$AA@
_DATA	SEGMENT
??_C@_01PGLG@j?$AA@ DB 'j', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT
??_C@_01PHOL@e?$AA@ DB 'e', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_01KDFD@m?$AA@
_DATA	SEGMENT
??_C@_01KDFD@m?$AA@ DB 'm', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_01LHO@r?$AA@
_DATA	SEGMENT
??_C@_01LHO@r?$AA@ DB 'r', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_01FOFA@p?$AA@
_DATA	SEGMENT
??_C@_01FOFA@p?$AA@ DB 'p', 00H				; `string'
_DATA	ENDS
;	COMDAT _TlenAdvSearchCreateQuery
_TEXT	SEGMENT
_hwndDlg$ = 8
_str$ = 8
_strSize$ = -4
_TlenAdvSearchCreateQuery PROC NEAR			; COMDAT

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 94   : 	char *str;
; 95   : 	int strSize;
; 96   : 
; 97   : 	if (hwndDlg == NULL) return NULL;

  00005	8b 75 08	 mov	 esi, DWORD PTR _hwndDlg$[ebp]
  00008	85 f6		 test	 esi, esi
  0000a	75 07		 jne	 SHORT $L82898
  0000c	33 c0		 xor	 eax, eax
  0000e	e9 4b 01 00 00	 jmp	 $L82894
$L82898:

; 98   : 	str = NULL;
; 99   : 	FetchField(hwndDlg, IDC_FIRSTNAME, "first", &str, &strSize);

  00013	8d 45 fc	 lea	 eax, DWORD PTR _strSize$[ebp]
  00016	83 65 08 00	 and	 DWORD PTR _str$[ebp], 0
  0001a	50		 push	 eax
  0001b	8d 45 08	 lea	 eax, DWORD PTR _str$[ebp]
  0001e	50		 push	 eax
  0001f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05KELB@first?$AA@ ; `string'
  00024	68 27 04 00 00	 push	 1063			; 00000427H
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 _FetchField

; 100  : 	FetchField(hwndDlg, IDC_LASTNAME, "last", &str, &strSize);

  0002f	8d 45 fc	 lea	 eax, DWORD PTR _strSize$[ebp]
  00032	50		 push	 eax
  00033	8d 45 08	 lea	 eax, DWORD PTR _str$[ebp]
  00036	50		 push	 eax
  00037	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04ONL@last?$AA@ ; `string'
  0003c	68 28 04 00 00	 push	 1064			; 00000428H
  00041	56		 push	 esi
  00042	e8 00 00 00 00	 call	 _FetchField

; 101  : 	FetchField(hwndDlg, IDC_NICK, "nick", &str, &strSize);

  00047	8d 45 fc	 lea	 eax, DWORD PTR _strSize$[ebp]
  0004a	50		 push	 eax
  0004b	8d 45 08	 lea	 eax, DWORD PTR _str$[ebp]
  0004e	50		 push	 eax
  0004f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04BGEO@nick?$AA@ ; `string'
  00054	68 69 04 00 00	 push	 1129			; 00000469H
  00059	56		 push	 esi
  0005a	e8 00 00 00 00	 call	 _FetchField

; 102  : 	FetchField(hwndDlg, IDC_EMAIL, "email", &str, &strSize);

  0005f	8d 45 fc	 lea	 eax, DWORD PTR _strSize$[ebp]
  00062	50		 push	 eax
  00063	8d 45 08	 lea	 eax, DWORD PTR _str$[ebp]
  00066	50		 push	 eax
  00067	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05JKH@email?$AA@ ; `string'
  0006c	68 31 04 00 00	 push	 1073			; 00000431H
  00071	56		 push	 esi
  00072	e8 00 00 00 00	 call	 _FetchField
  00077	83 c4 50	 add	 esp, 80			; 00000050H

; 103  : 	FetchCombo(hwndDlg, IDC_GENDER, "s", &str, &strSize);

  0007a	8d 45 fc	 lea	 eax, DWORD PTR _strSize$[ebp]
  0007d	50		 push	 eax
  0007e	8d 45 08	 lea	 eax, DWORD PTR _str$[ebp]
  00081	50		 push	 eax
  00082	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01KBOJ@s?$AA@ ; `string'
  00087	68 48 04 00 00	 push	 1096			; 00000448H
  0008c	56		 push	 esi
  0008d	e8 00 00 00 00	 call	 _FetchCombo

; 104  : 	FetchField(hwndDlg, IDC_AGEFROM, "d", &str, &strSize);

  00092	8d 45 fc	 lea	 eax, DWORD PTR _strSize$[ebp]
  00095	50		 push	 eax
  00096	8d 45 08	 lea	 eax, DWORD PTR _str$[ebp]
  00099	50		 push	 eax
  0009a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01FNHM@d?$AA@ ; `string'
  0009f	68 80 04 00 00	 push	 1152			; 00000480H
  000a4	56		 push	 esi
  000a5	e8 00 00 00 00	 call	 _FetchField

; 105  : 	FetchField(hwndDlg, IDC_AGETO, "u", &str, &strSize);

  000aa	8d 45 fc	 lea	 eax, DWORD PTR _strSize$[ebp]
  000ad	50		 push	 eax
  000ae	8d 45 08	 lea	 eax, DWORD PTR _str$[ebp]
  000b1	50		 push	 eax
  000b2	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01FOJL@u?$AA@ ; `string'
  000b7	68 81 04 00 00	 push	 1153			; 00000481H
  000bc	56		 push	 esi
  000bd	e8 00 00 00 00	 call	 _FetchField

; 106  : 	FetchField(hwndDlg, IDC_CITY, "c", &str, &strSize);

  000c2	8d 45 fc	 lea	 eax, DWORD PTR _strSize$[ebp]
  000c5	50		 push	 eax
  000c6	8d 45 08	 lea	 eax, DWORD PTR _str$[ebp]
  000c9	50		 push	 eax
  000ca	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01IJJ@c?$AA@ ; `string'
  000cf	68 24 04 00 00	 push	 1060			; 00000424H
  000d4	56		 push	 esi
  000d5	e8 00 00 00 00	 call	 _FetchField
  000da	83 c4 50	 add	 esp, 80			; 00000050H

; 107  : 	FetchCombo(hwndDlg, IDC_OCCUPATION, "j", &str, &strSize);

  000dd	8d 45 fc	 lea	 eax, DWORD PTR _strSize$[ebp]
  000e0	50		 push	 eax
  000e1	8d 45 08	 lea	 eax, DWORD PTR _str$[ebp]
  000e4	50		 push	 eax
  000e5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01PGLG@j?$AA@ ; `string'
  000ea	68 2a 04 00 00	 push	 1066			; 0000042aH
  000ef	56		 push	 esi
  000f0	e8 00 00 00 00	 call	 _FetchCombo

; 108  : 	FetchField(hwndDlg, IDC_SCHOOL, "e", &str, &strSize);

  000f5	8d 45 fc	 lea	 eax, DWORD PTR _strSize$[ebp]
  000f8	50		 push	 eax
  000f9	8d 45 08	 lea	 eax, DWORD PTR _str$[ebp]
  000fc	50		 push	 eax
  000fd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01PHOL@e?$AA@ ; `string'
  00102	68 83 04 00 00	 push	 1155			; 00000483H
  00107	56		 push	 esi
  00108	e8 00 00 00 00	 call	 _FetchField

; 109  : 	FetchCombo(hwndDlg, IDC_STATUS, "m", &str, &strSize);

  0010d	8d 45 fc	 lea	 eax, DWORD PTR _strSize$[ebp]
  00110	50		 push	 eax
  00111	8d 45 08	 lea	 eax, DWORD PTR _str$[ebp]
  00114	50		 push	 eax
  00115	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01KDFD@m?$AA@ ; `string'
  0011a	68 86 05 00 00	 push	 1414			; 00000586H
  0011f	56		 push	 esi
  00120	e8 00 00 00 00	 call	 _FetchCombo

; 110  : 	FetchCombo(hwndDlg, IDC_LOOKFOR, "r", &str, &strSize);

  00125	8d 45 fc	 lea	 eax, DWORD PTR _strSize$[ebp]
  00128	50		 push	 eax
  00129	8d 45 08	 lea	 eax, DWORD PTR _str$[ebp]
  0012c	50		 push	 eax
  0012d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01LHO@r?$AA@ ; `string'
  00132	68 82 04 00 00	 push	 1154			; 00000482H
  00137	56		 push	 esi
  00138	e8 00 00 00 00	 call	 _FetchCombo
  0013d	83 c4 50	 add	 esp, 80			; 00000050H

; 111  : 	FetchCombo(hwndDlg, IDC_PLAN, "p", &str, &strSize);

  00140	8d 45 fc	 lea	 eax, DWORD PTR _strSize$[ebp]
  00143	50		 push	 eax
  00144	8d 45 08	 lea	 eax, DWORD PTR _str$[ebp]
  00147	50		 push	 eax
  00148	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01FOFA@p?$AA@ ; `string'
  0014d	68 87 05 00 00	 push	 1415			; 00000587H
  00152	56		 push	 esi
  00153	e8 00 00 00 00	 call	 _FetchCombo

; 112  : 	return str;

  00158	8b 45 08	 mov	 eax, DWORD PTR _str$[ebp]
  0015b	83 c4 14	 add	 esp, 20			; 00000014H
$L82894:
  0015e	5e		 pop	 esi

; 113  : }

  0015f	c9		 leave
  00160	c3		 ret	 0
_TlenAdvSearchCreateQuery ENDP
_TEXT	ENDS
PUBLIC	??_C@_0M@CFON@?$DM?$CFs?$DO?$CFs?$DM?1?$CFs?$DO?$AA@ ; `string'
EXTRN	__imp__GetDlgItemTextA@16:NEAR
EXTRN	_mmi:BYTE
EXTRN	_JabberTextEncode:NEAR
EXTRN	_JabberStringAppend:NEAR
;	COMDAT ??_C@_0M@CFON@?$DM?$CFs?$DO?$CFs?$DM?1?$CFs?$DO?$AA@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\tlen_advsearch.c
_DATA	SEGMENT
??_C@_0M@CFON@?$DM?$CFs?$DO?$CFs?$DM?1?$CFs?$DO?$AA@ DB '<%s>%s</%s>', 00H ; `string'
_DATA	ENDS
;	COMDAT _FetchField
_TEXT	SEGMENT
_hwndDlg$ = 8
_idCtrl$ = 12
_fieldName$ = 16
_str$ = 20
_strSize$ = 24
_text$ = -512
_FetchField PROC NEAR					; COMDAT

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 02 00
	00		 sub	 esp, 512		; 00000200H
  00009	53		 push	 ebx

; 59   : 	char text[512];
; 60   : 	char *localFieldName, *localText;
; 61   : 
; 62   : 	if (hwndDlg==NULL || fieldName==NULL || str==NULL || strSize==NULL)

  0000a	33 db		 xor	 ebx, ebx
  0000c	39 5d 08	 cmp	 DWORD PTR _hwndDlg$[ebp], ebx
  0000f	56		 push	 esi
  00010	74 78		 je	 SHORT $L82858
  00012	39 5d 10	 cmp	 DWORD PTR _fieldName$[ebp], ebx
  00015	74 73		 je	 SHORT $L82858
  00017	39 5d 14	 cmp	 DWORD PTR _str$[ebp], ebx
  0001a	74 6e		 je	 SHORT $L82858
  0001c	39 5d 18	 cmp	 DWORD PTR _strSize$[ebp], ebx
  0001f	74 69		 je	 SHORT $L82858

; 63   : 		return;
; 64   : 	GetDlgItemTextA(hwndDlg, idCtrl, text, sizeof(text));

  00021	8d 85 00 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00027	68 00 02 00 00	 push	 512			; 00000200H
  0002c	50		 push	 eax
  0002d	ff 75 0c	 push	 DWORD PTR _idCtrl$[ebp]
  00030	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 65   : 	if (text[0]) {

  00039	38 9d 00 fe ff
	ff		 cmp	 BYTE PTR _text$[ebp], bl
  0003f	74 49		 je	 SHORT $L82858

; 66   : 		if ((localFieldName=JabberTextEncode(fieldName)) != NULL) {

  00041	ff 75 10	 push	 DWORD PTR _fieldName$[ebp]
  00044	e8 00 00 00 00	 call	 _JabberTextEncode
  00049	8b f0		 mov	 esi, eax
  0004b	59		 pop	 ecx
  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 3a		 je	 SHORT $L82858

; 67   : 			if ((localText=JabberTextEncode(text)) != NULL) {

  00050	8d 85 00 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00056	57		 push	 edi
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 _JabberTextEncode
  0005d	8b f8		 mov	 edi, eax
  0005f	59		 pop	 ecx
  00060	3b fb		 cmp	 edi, ebx
  00062	74 1d		 je	 SHORT $L82863

; 68   : 				JabberStringAppend(str, strSize, "<%s>%s</%s>", localFieldName, localText, localFieldName);

  00064	56		 push	 esi
  00065	57		 push	 edi
  00066	56		 push	 esi
  00067	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@CFON@?$DM?$CFs?$DO?$CFs?$DM?1?$CFs?$DO?$AA@ ; `string'
  0006c	ff 75 18	 push	 DWORD PTR _strSize$[ebp]
  0006f	ff 75 14	 push	 DWORD PTR _str$[ebp]
  00072	e8 00 00 00 00	 call	 _JabberStringAppend

; 69   : 				mir_free(localText);

  00077	57		 push	 edi
  00078	ff 15 0c 00 00
	00		 call	 DWORD PTR _mmi+12
  0007e	83 c4 1c	 add	 esp, 28			; 0000001cH
$L82863:

; 70   : 			}
; 71   : 			mir_free(localFieldName);

  00081	56		 push	 esi
  00082	ff 15 0c 00 00
	00		 call	 DWORD PTR _mmi+12
  00088	59		 pop	 ecx
  00089	5f		 pop	 edi
$L82858:
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx

; 72   : 		}
; 73   : 	}
; 74   : }

  0008c	c9		 leave
  0008d	c3		 ret	 0
_FetchField ENDP
_TEXT	ENDS
PUBLIC	??_C@_0M@JHIP@?$DM?$CFs?$DO?$CFd?$DM?1?$CFs?$DO?$AA@ ; `string'
EXTRN	__imp__SendDlgItemMessageW@20:NEAR
;	COMDAT ??_C@_0M@JHIP@?$DM?$CFs?$DO?$CFd?$DM?1?$CFs?$DO?$AA@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\tlen_advsearch.c
_DATA	SEGMENT
??_C@_0M@JHIP@?$DM?$CFs?$DO?$CFd?$DM?1?$CFs?$DO?$AA@ DB '<%s>%d</%s>', 00H ; `string'
_DATA	ENDS
;	COMDAT _FetchCombo
_TEXT	SEGMENT
_hwndDlg$ = 8
_idCtrl$ = 12
_fieldName$ = 16
_str$ = 20
_strSize$ = 24
_FetchCombo PROC NEAR					; COMDAT

; 77   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 78   : 	int value;
; 79   : 	char *localFieldName;
; 80   : 
; 81   : 	if (hwndDlg==NULL || fieldName==NULL || str==NULL || strSize==NULL)

  00006	33 ff		 xor	 edi, edi
  00008	39 7d 08	 cmp	 DWORD PTR _hwndDlg$[ebp], edi
  0000b	74 65		 je	 SHORT $L82884
  0000d	39 7d 10	 cmp	 DWORD PTR _fieldName$[ebp], edi
  00010	74 60		 je	 SHORT $L82884
  00012	39 7d 14	 cmp	 DWORD PTR _str$[ebp], edi
  00015	74 5b		 je	 SHORT $L82884
  00017	39 7d 18	 cmp	 DWORD PTR _strSize$[ebp], edi
  0001a	74 56		 je	 SHORT $L82884

; 82   : 		return;
; 83   : 	value = (int) SendDlgItemMessage(hwndDlg, idCtrl, CB_GETITEMDATA, SendDlgItemMessage(hwndDlg, idCtrl, CB_GETCURSEL, 0, 0), 0);

  0001c	57		 push	 edi
  0001d	57		 push	 edi
  0001e	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__SendDlgItemMessageW@20
  00024	57		 push	 edi
  00025	68 47 01 00 00	 push	 327			; 00000147H
  0002a	ff 75 0c	 push	 DWORD PTR _idCtrl$[ebp]
  0002d	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00030	ff d6		 call	 esi
  00032	50		 push	 eax
  00033	68 50 01 00 00	 push	 336			; 00000150H
  00038	ff 75 0c	 push	 DWORD PTR _idCtrl$[ebp]
  0003b	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  0003e	ff d6		 call	 esi
  00040	8b d8		 mov	 ebx, eax

; 84   : 	if (value > 0) {

  00042	3b df		 cmp	 ebx, edi
  00044	7e 2c		 jle	 SHORT $L82884

; 85   : 		if ((localFieldName=JabberTextEncode(fieldName)) != NULL) {

  00046	ff 75 10	 push	 DWORD PTR _fieldName$[ebp]
  00049	e8 00 00 00 00	 call	 _JabberTextEncode
  0004e	8b f0		 mov	 esi, eax
  00050	59		 pop	 ecx
  00051	3b f7		 cmp	 esi, edi
  00053	74 1d		 je	 SHORT $L82884

; 86   : 			JabberStringAppend(str, strSize, "<%s>%d</%s>", localFieldName, value, localFieldName);

  00055	56		 push	 esi
  00056	53		 push	 ebx
  00057	56		 push	 esi
  00058	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@JHIP@?$DM?$CFs?$DO?$CFd?$DM?1?$CFs?$DO?$AA@ ; `string'
  0005d	ff 75 18	 push	 DWORD PTR _strSize$[ebp]
  00060	ff 75 14	 push	 DWORD PTR _str$[ebp]
  00063	e8 00 00 00 00	 call	 _JabberStringAppend

; 87   : 			mir_free(localFieldName);

  00068	56		 push	 esi
  00069	ff 15 0c 00 00
	00		 call	 DWORD PTR _mmi+12
  0006f	83 c4 1c	 add	 esp, 28			; 0000001cH
$L82884:
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx

; 88   : 		}
; 89   : 	}
; 90   : }

  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
_FetchCombo ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BJ@GNEH@LangPack?1TranslateDialog?$AA@	; `string'
;	COMDAT ??_C@_0BJ@GNEH@LangPack?1TranslateDialog?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_langpack.h
_DATA	SEGMENT
??_C@_0BJ@GNEH@LangPack?1TranslateDialog?$AA@ DB 'LangPack/TranslateDialo'
	DB	'g', 00H					; `string'
_DATA	ENDS
;	COMDAT _TranslateDialogDefault
_TEXT	SEGMENT
_hwndDlg$ = 8
_lptd$ = -16
_TranslateDialogDefault PROC NEAR			; COMDAT

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 82   : 	LANGPACKTRANSLATEDIALOG lptd;
; 83   : 	lptd.cbSize=sizeof(lptd);
; 84   : 	lptd.flags=0;
; 85   : 	lptd.hwndDlg=hwndDlg;

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _hwndDlg$[ebp]
  00009	33 c0		 xor	 eax, eax
  0000b	89 4d f8	 mov	 DWORD PTR _lptd$[ebp+8], ecx

; 86   : 	lptd.ignoreControls=NULL;
; 87   : 	return CallService(MS_LANGPACK_TRANSLATEDIALOG,0,(LPARAM)&lptd);

  0000e	8d 4d f0	 lea	 ecx, DWORD PTR _lptd$[ebp]
  00011	51		 push	 ecx
  00012	89 45 f4	 mov	 DWORD PTR _lptd$[ebp+4], eax
  00015	89 45 fc	 mov	 DWORD PTR _lptd$[ebp+12], eax
  00018	50		 push	 eax
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0001e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@GNEH@LangPack?1TranslateDialog?$AA@ ; `string'
  00023	c7 45 f0 10 00
	00 00		 mov	 DWORD PTR _lptd$[ebp], 16 ; 00000010H
  0002a	ff 50 24	 call	 DWORD PTR [eax+36]
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 88   : }

  00030	c9		 leave
  00031	c3		 ret	 0
_TranslateDialogDefault ENDP
_TEXT	ENDS
END
