	TITLE	E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\jabber_opt.c
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BG@FJFA@Miranda?1System?1GetMMI?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DNA@Miranda?1System?1GetLI?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@FHMP@Miranda?1System?1GetUTFI?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@DCOH@Miranda?1Thread?1Fork?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@IENN@Miranda?1Thread?1ForkEx?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@FGIN@Miranda?1SysTerm?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@LIGC@Utils?1AddToWindowList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@PEAI@Utils?1RemoveFromWindowList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@GMNB@Utils?1FindWindowInList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@NOMI@Utils?1BroadcastToWindowList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CB@CFCA@Utils?1BroadcastToWindowListAsync@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@MDKL@Utils?1SaveWindowPos?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@GALP@Utils?1RestoreWindowPos?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CHLF@Miranda?1System?1GetMD5I?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@FOPF@Miranda?1System?1GetSHA1I?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@OCFE@Netlib?1CloseHandle?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@EFDJ@Netlib?1Send?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@GFGB@Netlib?1Recv?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@CMGK@Netlib?1Log?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@GDOO@Netlib?1InitSecurityProvider?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@JINJ@Netlib?1DestroySecurityProvider?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@CBFG@Netlib?1NtlmCreateResponse?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@COCL@Proto?1EnumAccounts?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@CCNI@Proto?1GetAccount?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@IFFL@Proto?1BroadcastAck?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@MGBG@DB?1Event?1GetText?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@BEPM@DB?1Contact?1GetSettingStr?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0DA@FLKM@C?3?2MirandaDev?2miranda_svn2?2inclu@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@IGCO@DB?1Contact?1DeleteSetting?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@GNEH@LangPack?1TranslateDialog?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@GFNK@Skin?1Icons?1Load?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@BLFF@Skin?1Icons?1LoadProto?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@CNOA@Skin?1Sounds?1AddNew?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@LENC@Skin?1Sounds?1Play?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@PNGM@PopUp?1AddPopUp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@OBDC@PopUp?1AddPopUpEx?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CGKI@PopUp?1AddPopUpW?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@HIHP@PopUp?1GetContact?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@CCHD@PopUp?1GetPluginData?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@HKEA@PopUp?1IsSecondLineShown?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@KGOE@PopUp?1Changetext?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@LAPD@PopUp?1ChangetextW?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@KOPP@PopUp?1Change?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@BGJ@PopUp?1ShowMessage?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@NFFE@PopUp?1ShowMessageW?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@MAHO@PopUp?1AddPopupClass?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BA@DPLO@?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BI@LLCB@?$AAV?$AAo?$AAi?$AAc?$AAe?$AA?5?$AAC?$AAh?$AAa?$AAt?$AAs?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@HHMK@?$AAA?$AAd?$AAv?$AAa?$AAn?$AAc?$AAe?$AAd?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BM@HAKI@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FD@PDJE@E?3?2Documents?5and?5Settings?2piotr?2@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CIMH@UseEncryption?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09GDHD@Reconnect?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@NGFL@AlertPolicy?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@EKFF@RosterSync?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@MMNL@OfflineAsInvisible?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@EHOD@LeaveOfflineMessage?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@CODL@OfflineMessageOption?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@FDOK@IgnoreAdvertisements?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@FJHD@GroupChatPolicy?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CKKI@VoiceChatPolicy?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@MNOB@EnableAvatars?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@OPHO@EnableVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08KGPM@UseNudge?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09BDIE@LogAlerts?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BA@DEPM@?$AAN?$AAe?$AAt?$AAw?$AAo?$AAr?$AAk?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@CNIC@Opt?1AddPage?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08GFMP@?$CC?$CG?8?1?3?$DM?$DO?$EA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09ONOL@LoginName?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08NKKK@Password?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@PHIF@DB?1Crypt?1DecodeString?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@BEAN@SavePassword?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@BMBE@http?3?1?1reg?4tlen?4pl?1?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@EHKK@Utils?1OpenURL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@PBIB@DB?1Crypt?1EncodeString?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1CK@NMED@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1JM@BOLK@?$AAT?$AAh?$AAe?$AAs?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AAs?$AA?5?$AAw?$AAi?$AAl?$AAl?$AA?5?$AAt@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1CE@PANB@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1FC@JGEG@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAu@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1CE@IMI@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BM@GOL@?$AAA?$AAl?$AAw?$AAa?$AAy?$AAs?$AA?5?$AAa?$AAs?$AAk?$AA?5?$AAm?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1FI@HENN@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1CO@LCF@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1FM@IIPM@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1CM@HHOO@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BO@CMOF@?$AA?$DM?$AAL?$AAa?$AAs?$AAt?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$DO?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@EDPB@?$AAO?$AAn?$AAl?$AAi?$AAn?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_19IOEA@?$AAA?$AAw?$AAa?$AAy?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_15BPBN@?$AAN?$AAA?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_17BKGP@?$AAD?$AAN?$AAD?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BM@HGPL@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAh?$AAa?$AAt?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BE@HOLM@?$AAI?$AAn?$AAv?$AAi?$AAs?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@EBHE@VoiceDeviceIn?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@OODI@VoiceDeviceOut?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IBOM@LoginServer?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BA@MDJN@?$AAt?$AAl?$AAe?$AAn?$AA?4?$AAp?$AAl?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@FKFD@ManualHost?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BG@KPOA@?$AAs?$AA1?$AA?4?$AAt?$AAl?$AAe?$AAn?$AA?4?$AAp?$AAl?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@DDEI@ManualPort?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09LNJJ@KeepAlive?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FEOM@VisibilitySupport?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@BODO@UseFileProxy?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@EJJI@FileProxyAuth?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BG@GDIB@?$AAF?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@GKBA@?$AAS?$AAO?$AAC?$AAK?$AAS?$AA4?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@DIAG@?$AAS?$AAO?$AAC?$AAK?$AAS?$AA5?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@HKJF@FileProxyType?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@GFGJ@FileProxyHost?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@MHC@FileProxyPort?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@CBEM@FileProxyUsername?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@EIFA@FileProxyPassword?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@GMOL@MailPopupEnabled?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CNMO@MailPopupBack?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@KDHG@MailPopupText?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@ECBA@MailPopupDelay?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@JHKD@MailPopupDelayMode?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07FONL@?$CFs?5mail?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CD@JKGL@From?3?5test?$EAtest?4test?6Subject?3?5te@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DBGetContactSettingByte_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSettingWord_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSettingDword_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSetting_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSettingString_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBFreeVariant
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBDeleteContactSetting
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBWriteContactSettingByte
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBWriteContactSettingWord
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBWriteContactSettingDword
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBWriteContactSettingString
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TranslateDialogDefault
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenLoadOptions
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ApplyChanges
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _MarkChanges
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenOptionsInit
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _JabberValidateUsernameWndProc@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenAccMgrUIDlgProc@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenBasicOptDlgProc@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenVoiceOptDlgProc@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenAdvOptDlgProc@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _MailPopupPreview
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TlenPopupsDlgProc@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	??_C@_1BA@DPLO@?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@LLCB@?$AAV?$AAo?$AAi?$AAc?$AAe?$AA?5?$AAC?$AAh?$AAa?$AAt?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@HHMK@?$AAA?$AAd?$AAv?$AAa?$AAn?$AAc?$AAe?$AAd?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@HAKI@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@ ; `string'
_BSS	SEGMENT
_changed DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_tabPages DD	FLAT:_TlenBasicOptDlgProc@16
	DD	097H
	DD	FLAT:??_C@_1BA@DPLO@?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl?$AA?$AA@
	DD	FLAT:_TlenVoiceOptDlgProc@16
	DD	098H
	DD	FLAT:??_C@_1BI@LLCB@?$AAV?$AAo?$AAi?$AAc?$AAe?$AA?5?$AAC?$AAh?$AAa?$AAt?$AAs?$AA?$AA@
	DD	FLAT:_TlenAdvOptDlgProc@16
	DD	09aH
	DD	FLAT:??_C@_1BC@HHMK@?$AAA?$AAd?$AAv?$AAa?$AAn?$AAc?$AAe?$AAd?$AA?$AA@
	DD	FLAT:_TlenPopupsDlgProc@16
	DD	099H
	DD	FLAT:??_C@_1BM@HAKI@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@
_DATA	ENDS
;	COMDAT ??_C@_1BA@DPLO@?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl?$AA?$AA@
_DATA	SEGMENT
??_C@_1BA@DPLO@?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl?$AA?$AA@ DB 'G', 00H, 'e'
	DB	00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 'l', 00H, 00H, 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BI@LLCB@?$AAV?$AAo?$AAi?$AAc?$AAe?$AA?5?$AAC?$AAh?$AAa?$AAt?$AAs?$AA?$AA@
_DATA	SEGMENT
??_C@_1BI@LLCB@?$AAV?$AAo?$AAi?$AAc?$AAe?$AA?5?$AAC?$AAh?$AAa?$AAt?$AAs?$AA?$AA@ DB 'V'
	DB	00H, 'o', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 't', 00H, 's', 00H, 00H, 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BC@HHMK@?$AAA?$AAd?$AAv?$AAa?$AAn?$AAc?$AAe?$AAd?$AA?$AA@
_DATA	SEGMENT
??_C@_1BC@HHMK@?$AAA?$AAd?$AAv?$AAa?$AAn?$AAc?$AAe?$AAd?$AA?$AA@ DB 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, 00H, 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BM@HAKI@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@
_DATA	SEGMENT
??_C@_1BM@HAKI@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@ DB 'N'
	DB	00H, 'o', 00H, 't', 00H, 'i', 00H, 'f', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H, 00H
	DB	00H						; `string'
_DATA	ENDS
PUBLIC	??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@	; `string'
PUBLIC	_TlenLoadOptions
PUBLIC	??_C@_0O@CIMH@UseEncryption?$AA@		; `string'
PUBLIC	??_C@_09GDHD@Reconnect?$AA@			; `string'
PUBLIC	??_C@_0M@NGFL@AlertPolicy?$AA@			; `string'
PUBLIC	??_C@_0L@EKFF@RosterSync?$AA@			; `string'
PUBLIC	??_C@_0BD@MMNL@OfflineAsInvisible?$AA@		; `string'
PUBLIC	??_C@_0BE@EHOD@LeaveOfflineMessage?$AA@		; `string'
PUBLIC	??_C@_0BF@CODL@OfflineMessageOption?$AA@	; `string'
PUBLIC	??_C@_0BF@FDOK@IgnoreAdvertisements?$AA@	; `string'
PUBLIC	??_C@_0BA@FJHD@GroupChatPolicy?$AA@		; `string'
PUBLIC	??_C@_0BA@CKKI@VoiceChatPolicy?$AA@		; `string'
PUBLIC	??_C@_0O@MNOB@EnableAvatars?$AA@		; `string'
PUBLIC	??_C@_0O@OPHO@EnableVersion?$AA@		; `string'
PUBLIC	??_C@_08KGPM@UseNudge?$AA@			; `string'
PUBLIC	??_C@_09BDIE@LogAlerts?$AA@			; `string'
EXTRN	_pluginLink:DWORD
;	COMDAT ??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ DB 'DB/Contact/GetSetting', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@CIMH@UseEncryption?$AA@
_DATA	SEGMENT
??_C@_0O@CIMH@UseEncryption?$AA@ DB 'UseEncryption', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_09GDHD@Reconnect?$AA@
_DATA	SEGMENT
??_C@_09GDHD@Reconnect?$AA@ DB 'Reconnect', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@NGFL@AlertPolicy?$AA@
_DATA	SEGMENT
??_C@_0M@NGFL@AlertPolicy?$AA@ DB 'AlertPolicy', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@EKFF@RosterSync?$AA@
_DATA	SEGMENT
??_C@_0L@EKFF@RosterSync?$AA@ DB 'RosterSync', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@MMNL@OfflineAsInvisible?$AA@
_DATA	SEGMENT
??_C@_0BD@MMNL@OfflineAsInvisible?$AA@ DB 'OfflineAsInvisible', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@EHOD@LeaveOfflineMessage?$AA@
_DATA	SEGMENT
??_C@_0BE@EHOD@LeaveOfflineMessage?$AA@ DB 'LeaveOfflineMessage', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@CODL@OfflineMessageOption?$AA@
_DATA	SEGMENT
??_C@_0BF@CODL@OfflineMessageOption?$AA@ DB 'OfflineMessageOption', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@FDOK@IgnoreAdvertisements?$AA@
_DATA	SEGMENT
??_C@_0BF@FDOK@IgnoreAdvertisements?$AA@ DB 'IgnoreAdvertisements', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@FJHD@GroupChatPolicy?$AA@
_DATA	SEGMENT
??_C@_0BA@FJHD@GroupChatPolicy?$AA@ DB 'GroupChatPolicy', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CKKI@VoiceChatPolicy?$AA@
_DATA	SEGMENT
??_C@_0BA@CKKI@VoiceChatPolicy?$AA@ DB 'VoiceChatPolicy', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@MNOB@EnableAvatars?$AA@
_DATA	SEGMENT
??_C@_0O@MNOB@EnableAvatars?$AA@ DB 'EnableAvatars', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@OPHO@EnableVersion?$AA@
_DATA	SEGMENT
??_C@_0O@OPHO@EnableVersion?$AA@ DB 'EnableVersion', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_08KGPM@UseNudge?$AA@
_DATA	SEGMENT
??_C@_08KGPM@UseNudge?$AA@ DB 'UseNudge', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09BDIE@LogAlerts?$AA@
_DATA	SEGMENT
??_C@_09BDIE@LogAlerts?$AA@ DB 'LogAlerts', 00H		; `string'
_DATA	ENDS
;	COMDAT _TlenLoadOptions
_TEXT	SEGMENT
_dbv$85743 = -24
_cgs$85744 = -12
_dbv$85752 = -24
_cgs$85753 = -12
_dbv$85761 = -24
_cgs$85762 = -12
_dbv$85770 = -24
_cgs$85771 = -12
_dbv$85779 = -24
_cgs$85780 = -12
_dbv$85788 = -24
_cgs$85789 = -12
_dbv$85797 = -24
_cgs$85798 = -12
_dbv$85806 = -24
_cgs$85807 = -12
_dbv$85815 = -24
_cgs$85816 = -12
_dbv$85824 = -24
_cgs$85825 = -12
_dbv$85833 = -24
_cgs$85834 = -12
_dbv$85842 = -24
_cgs$85843 = -12
_dbv$85851 = -24
_cgs$85852 = -12
_dbv$85860 = -24
_cgs$85861 = -12
_proto$ = 8
_TlenLoadOptions PROC NEAR				; COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 51   : 	proto->tlenOptions.useEncryption = DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "UseEncryption", TRUE);

  00008	8b 75 08	 mov	 esi, DWORD PTR _proto$[ebp]
  0000b	57		 push	 edi
  0000c	33 db		 xor	 ebx, ebx
  0000e	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00013	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00016	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85744[ebp+4], OFFSET FLAT:??_C@_0O@CIMH@UseEncryption?$AA@ ; `string'
  0001d	89 45 f4	 mov	 DWORD PTR _cgs$85744[ebp], eax
  00020	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85743[ebp]
  00023	89 45 fc	 mov	 DWORD PTR _cgs$85744[ebp+8], eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85744[ebp]
  00029	50		 push	 eax
  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0002f	53		 push	 ebx
  00030	57		 push	 edi
  00031	ff 50 24	 call	 DWORD PTR [eax+36]
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH
  00037	85 c0		 test	 eax, eax
  00039	74 05		 je	 SHORT $L85745
  0003b	6a 01		 push	 1
  0003d	58		 pop	 eax
  0003e	eb 04		 jmp	 SHORT $L85742
$L85745:
  00040	0f b6 45 ec	 movzx	 eax, BYTE PTR _dbv$85743[ebp+4]
$L85742:
  00044	89 86 b4 01 00
	00		 mov	 DWORD PTR [esi+436], eax

; 52   : 	proto->tlenOptions.reconnect = DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "Reconnect", FALSE);

  0004a	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0004d	89 45 f4	 mov	 DWORD PTR _cgs$85753[ebp], eax
  00050	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85752[ebp]
  00053	89 45 fc	 mov	 DWORD PTR _cgs$85753[ebp+8], eax
  00056	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85753[ebp]
  00059	50		 push	 eax
  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0005f	53		 push	 ebx
  00060	57		 push	 edi
  00061	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85753[ebp+4], OFFSET FLAT:??_C@_09GDHD@Reconnect?$AA@ ; `string'
  00068	ff 50 24	 call	 DWORD PTR [eax+36]
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006e	85 c0		 test	 eax, eax
  00070	74 04		 je	 SHORT $L85754
  00072	33 c0		 xor	 eax, eax
  00074	eb 04		 jmp	 SHORT $L85751
$L85754:
  00076	0f b6 45 ec	 movzx	 eax, BYTE PTR _dbv$85752[ebp+4]
$L85751:
  0007a	89 86 b8 01 00
	00		 mov	 DWORD PTR [esi+440], eax

; 53   : 	proto->tlenOptions.alertPolicy = DBGetContactSettingWord(NULL, proto->iface.m_szModuleName, "AlertPolicy", 0);

  00080	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00083	89 45 f4	 mov	 DWORD PTR _cgs$85762[ebp], eax
  00086	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85761[ebp]
  00089	89 45 fc	 mov	 DWORD PTR _cgs$85762[ebp+8], eax
  0008c	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85762[ebp]
  0008f	50		 push	 eax
  00090	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00095	53		 push	 ebx
  00096	57		 push	 edi
  00097	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85762[ebp+4], OFFSET FLAT:??_C@_0M@NGFL@AlertPolicy?$AA@ ; `string'
  0009e	ff 50 24	 call	 DWORD PTR [eax+36]
  000a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a4	85 c0		 test	 eax, eax
  000a6	74 04		 je	 SHORT $L85763
  000a8	33 c0		 xor	 eax, eax
  000aa	eb 04		 jmp	 SHORT $L85760
$L85763:
  000ac	0f b7 45 ec	 movzx	 eax, WORD PTR _dbv$85761[ebp+4]
$L85760:
  000b0	89 86 d0 01 00
	00		 mov	 DWORD PTR [esi+464], eax

; 54   : 	proto->tlenOptions.rosterSync = DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "RosterSync", FALSE);

  000b6	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  000b9	89 45 f4	 mov	 DWORD PTR _cgs$85771[ebp], eax
  000bc	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85770[ebp]
  000bf	89 45 fc	 mov	 DWORD PTR _cgs$85771[ebp+8], eax
  000c2	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85771[ebp]
  000c5	50		 push	 eax
  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000cb	53		 push	 ebx
  000cc	57		 push	 edi
  000cd	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85771[ebp+4], OFFSET FLAT:??_C@_0L@EKFF@RosterSync?$AA@ ; `string'
  000d4	ff 50 24	 call	 DWORD PTR [eax+36]
  000d7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000da	85 c0		 test	 eax, eax
  000dc	74 04		 je	 SHORT $L85772
  000de	33 c0		 xor	 eax, eax
  000e0	eb 04		 jmp	 SHORT $L85769
$L85772:
  000e2	0f b6 45 ec	 movzx	 eax, BYTE PTR _dbv$85770[ebp+4]
$L85769:
  000e6	89 86 bc 01 00
	00		 mov	 DWORD PTR [esi+444], eax

; 55   : 	proto->tlenOptions.offlineAsInvisible = DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "OfflineAsInvisible", FALSE);

  000ec	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  000ef	89 45 f4	 mov	 DWORD PTR _cgs$85780[ebp], eax
  000f2	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85779[ebp]
  000f5	89 45 fc	 mov	 DWORD PTR _cgs$85780[ebp+8], eax
  000f8	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85780[ebp]
  000fb	50		 push	 eax
  000fc	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00101	53		 push	 ebx
  00102	57		 push	 edi
  00103	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85780[ebp+4], OFFSET FLAT:??_C@_0BD@MMNL@OfflineAsInvisible?$AA@ ; `string'
  0010a	ff 50 24	 call	 DWORD PTR [eax+36]
  0010d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00110	85 c0		 test	 eax, eax
  00112	74 04		 je	 SHORT $L85781
  00114	33 c0		 xor	 eax, eax
  00116	eb 04		 jmp	 SHORT $L85778
$L85781:
  00118	0f b6 45 ec	 movzx	 eax, BYTE PTR _dbv$85779[ebp+4]
$L85778:
  0011c	89 86 c0 01 00
	00		 mov	 DWORD PTR [esi+448], eax

; 56   : 	proto->tlenOptions.leaveOfflineMessage = DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "LeaveOfflineMessage", FALSE);

  00122	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00125	89 45 f4	 mov	 DWORD PTR _cgs$85789[ebp], eax
  00128	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85788[ebp]
  0012b	89 45 fc	 mov	 DWORD PTR _cgs$85789[ebp+8], eax
  0012e	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85789[ebp]
  00131	50		 push	 eax
  00132	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00137	53		 push	 ebx
  00138	57		 push	 edi
  00139	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85789[ebp+4], OFFSET FLAT:??_C@_0BE@EHOD@LeaveOfflineMessage?$AA@ ; `string'
  00140	ff 50 24	 call	 DWORD PTR [eax+36]
  00143	83 c4 0c	 add	 esp, 12			; 0000000cH
  00146	85 c0		 test	 eax, eax
  00148	74 04		 je	 SHORT $L85790
  0014a	33 c0		 xor	 eax, eax
  0014c	eb 04		 jmp	 SHORT $L85787
$L85790:
  0014e	0f b6 45 ec	 movzx	 eax, BYTE PTR _dbv$85788[ebp+4]
$L85787:
  00152	89 86 c4 01 00
	00		 mov	 DWORD PTR [esi+452], eax

; 57   : 	proto->tlenOptions.offlineMessageOption = DBGetContactSettingWord(NULL, proto->iface.m_szModuleName, "OfflineMessageOption", 0);

  00158	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0015b	89 45 f4	 mov	 DWORD PTR _cgs$85798[ebp], eax
  0015e	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85797[ebp]
  00161	89 45 fc	 mov	 DWORD PTR _cgs$85798[ebp+8], eax
  00164	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85798[ebp]
  00167	50		 push	 eax
  00168	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0016d	53		 push	 ebx
  0016e	57		 push	 edi
  0016f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85798[ebp+4], OFFSET FLAT:??_C@_0BF@CODL@OfflineMessageOption?$AA@ ; `string'
  00176	ff 50 24	 call	 DWORD PTR [eax+36]
  00179	83 c4 0c	 add	 esp, 12			; 0000000cH
  0017c	85 c0		 test	 eax, eax
  0017e	74 04		 je	 SHORT $L85799
  00180	33 c0		 xor	 eax, eax
  00182	eb 04		 jmp	 SHORT $L85796
$L85799:
  00184	0f b7 45 ec	 movzx	 eax, WORD PTR _dbv$85797[ebp+4]
$L85796:
  00188	89 86 c8 01 00
	00		 mov	 DWORD PTR [esi+456], eax

; 58   : 	proto->tlenOptions.ignoreAdvertisements = DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "IgnoreAdvertisements", TRUE);

  0018e	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00191	89 45 f4	 mov	 DWORD PTR _cgs$85807[ebp], eax
  00194	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85806[ebp]
  00197	89 45 fc	 mov	 DWORD PTR _cgs$85807[ebp+8], eax
  0019a	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85807[ebp]
  0019d	50		 push	 eax
  0019e	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001a3	53		 push	 ebx
  001a4	57		 push	 edi
  001a5	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85807[ebp+4], OFFSET FLAT:??_C@_0BF@FDOK@IgnoreAdvertisements?$AA@ ; `string'
  001ac	ff 50 24	 call	 DWORD PTR [eax+36]
  001af	83 c4 0c	 add	 esp, 12			; 0000000cH
  001b2	85 c0		 test	 eax, eax
  001b4	74 05		 je	 SHORT $L85808
  001b6	6a 01		 push	 1
  001b8	58		 pop	 eax
  001b9	eb 04		 jmp	 SHORT $L85805
$L85808:
  001bb	0f b6 45 ec	 movzx	 eax, BYTE PTR _dbv$85806[ebp+4]
$L85805:
  001bf	89 86 cc 01 00
	00		 mov	 DWORD PTR [esi+460], eax

; 59   : 	proto->tlenOptions.groupChatPolicy = DBGetContactSettingWord(NULL, proto->iface.m_szModuleName, "GroupChatPolicy", 0);

  001c5	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  001c8	89 45 f4	 mov	 DWORD PTR _cgs$85816[ebp], eax
  001cb	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85815[ebp]
  001ce	89 45 fc	 mov	 DWORD PTR _cgs$85816[ebp+8], eax
  001d1	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85816[ebp]
  001d4	50		 push	 eax
  001d5	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001da	53		 push	 ebx
  001db	57		 push	 edi
  001dc	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85816[ebp+4], OFFSET FLAT:??_C@_0BA@FJHD@GroupChatPolicy?$AA@ ; `string'
  001e3	ff 50 24	 call	 DWORD PTR [eax+36]
  001e6	83 c4 0c	 add	 esp, 12			; 0000000cH
  001e9	85 c0		 test	 eax, eax
  001eb	74 04		 je	 SHORT $L85817
  001ed	33 c0		 xor	 eax, eax
  001ef	eb 04		 jmp	 SHORT $L85814
$L85817:
  001f1	0f b7 45 ec	 movzx	 eax, WORD PTR _dbv$85815[ebp+4]
$L85814:
  001f5	89 86 d4 01 00
	00		 mov	 DWORD PTR [esi+468], eax

; 60   : 	proto->tlenOptions.voiceChatPolicy = DBGetContactSettingWord(NULL, proto->iface.m_szModuleName, "VoiceChatPolicy", 0);

  001fb	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  001fe	89 45 f4	 mov	 DWORD PTR _cgs$85825[ebp], eax
  00201	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85824[ebp]
  00204	89 45 fc	 mov	 DWORD PTR _cgs$85825[ebp+8], eax
  00207	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85825[ebp]
  0020a	50		 push	 eax
  0020b	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00210	53		 push	 ebx
  00211	57		 push	 edi
  00212	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85825[ebp+4], OFFSET FLAT:??_C@_0BA@CKKI@VoiceChatPolicy?$AA@ ; `string'
  00219	ff 50 24	 call	 DWORD PTR [eax+36]
  0021c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0021f	85 c0		 test	 eax, eax
  00221	74 04		 je	 SHORT $L85826
  00223	33 c0		 xor	 eax, eax
  00225	eb 04		 jmp	 SHORT $L85823
$L85826:
  00227	0f b7 45 ec	 movzx	 eax, WORD PTR _dbv$85824[ebp+4]
$L85823:
  0022b	89 86 d8 01 00
	00		 mov	 DWORD PTR [esi+472], eax

; 61   : 	proto->tlenOptions.enableAvatars = DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "EnableAvatars", FALSE);

  00231	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00234	89 45 f4	 mov	 DWORD PTR _cgs$85834[ebp], eax
  00237	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85833[ebp]
  0023a	89 45 fc	 mov	 DWORD PTR _cgs$85834[ebp+8], eax
  0023d	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85834[ebp]
  00240	50		 push	 eax
  00241	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00246	53		 push	 ebx
  00247	57		 push	 edi
  00248	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85834[ebp+4], OFFSET FLAT:??_C@_0O@MNOB@EnableAvatars?$AA@ ; `string'
  0024f	ff 50 24	 call	 DWORD PTR [eax+36]
  00252	83 c4 0c	 add	 esp, 12			; 0000000cH
  00255	85 c0		 test	 eax, eax
  00257	74 04		 je	 SHORT $L85835
  00259	33 c0		 xor	 eax, eax
  0025b	eb 04		 jmp	 SHORT $L85832
$L85835:
  0025d	0f b6 45 ec	 movzx	 eax, BYTE PTR _dbv$85833[ebp+4]
$L85832:
  00261	89 86 dc 01 00
	00		 mov	 DWORD PTR [esi+476], eax

; 62   : 	proto->tlenOptions.enableVersion = DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "EnableVersion", FALSE);

  00267	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0026a	89 45 f4	 mov	 DWORD PTR _cgs$85843[ebp], eax
  0026d	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85842[ebp]
  00270	89 45 fc	 mov	 DWORD PTR _cgs$85843[ebp+8], eax
  00273	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85843[ebp]
  00276	50		 push	 eax
  00277	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0027c	53		 push	 ebx
  0027d	57		 push	 edi
  0027e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85843[ebp+4], OFFSET FLAT:??_C@_0O@OPHO@EnableVersion?$AA@ ; `string'
  00285	ff 50 24	 call	 DWORD PTR [eax+36]
  00288	83 c4 0c	 add	 esp, 12			; 0000000cH
  0028b	85 c0		 test	 eax, eax
  0028d	74 04		 je	 SHORT $L85844
  0028f	33 c0		 xor	 eax, eax
  00291	eb 04		 jmp	 SHORT $L85841
$L85844:
  00293	0f b6 45 ec	 movzx	 eax, BYTE PTR _dbv$85842[ebp+4]
$L85841:
  00297	89 86 e0 01 00
	00		 mov	 DWORD PTR [esi+480], eax

; 63   : 	proto->tlenOptions.useNudge = DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "UseNudge", FALSE);

  0029d	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  002a0	89 45 f4	 mov	 DWORD PTR _cgs$85852[ebp], eax
  002a3	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85851[ebp]
  002a6	89 45 fc	 mov	 DWORD PTR _cgs$85852[ebp+8], eax
  002a9	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85852[ebp]
  002ac	50		 push	 eax
  002ad	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  002b2	53		 push	 ebx
  002b3	57		 push	 edi
  002b4	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85852[ebp+4], OFFSET FLAT:??_C@_08KGPM@UseNudge?$AA@ ; `string'
  002bb	ff 50 24	 call	 DWORD PTR [eax+36]
  002be	83 c4 0c	 add	 esp, 12			; 0000000cH
  002c1	85 c0		 test	 eax, eax
  002c3	74 04		 je	 SHORT $L85853
  002c5	33 c0		 xor	 eax, eax
  002c7	eb 04		 jmp	 SHORT $L85850
$L85853:
  002c9	0f b6 45 ec	 movzx	 eax, BYTE PTR _dbv$85851[ebp+4]
$L85850:
  002cd	89 86 e4 01 00
	00		 mov	 DWORD PTR [esi+484], eax

; 64   : 	proto->tlenOptions.logAlerts = DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "LogAlerts", FALSE);

  002d3	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  002d6	89 45 f4	 mov	 DWORD PTR _cgs$85861[ebp], eax
  002d9	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85860[ebp]
  002dc	89 45 fc	 mov	 DWORD PTR _cgs$85861[ebp+8], eax
  002df	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85861[ebp]
  002e2	50		 push	 eax
  002e3	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  002e8	53		 push	 ebx
  002e9	57		 push	 edi
  002ea	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85861[ebp+4], OFFSET FLAT:??_C@_09BDIE@LogAlerts?$AA@ ; `string'
  002f1	ff 50 24	 call	 DWORD PTR [eax+36]
  002f4	83 c4 0c	 add	 esp, 12			; 0000000cH
  002f7	85 c0		 test	 eax, eax
  002f9	74 04		 je	 SHORT $L85862
  002fb	33 c0		 xor	 eax, eax
  002fd	eb 04		 jmp	 SHORT $L85859
$L85862:
  002ff	0f b6 45 ec	 movzx	 eax, BYTE PTR _dbv$85860[ebp+4]
$L85859:
  00303	89 86 e8 01 00
	00		 mov	 DWORD PTR [esi+488], eax

; 65   : 	proto->tlenOptions.useNewP2P = FALSE;

  00309	89 9e ec 01 00
	00		 mov	 DWORD PTR [esi+492], ebx
  0030f	5f		 pop	 edi
  00310	5e		 pop	 esi
  00311	5b		 pop	 ebx

; 66   : }

  00312	c9		 leave
  00313	c3		 ret	 0
_TlenLoadOptions ENDP
_TEXT	ENDS
PUBLIC	_TlenOptionsInit
PUBLIC	??_C@_1BA@DEPM@?$AAN?$AAe?$AAt?$AAw?$AAo?$AAr?$AAk?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@	; `string'
PUBLIC	??_C@_0M@CNIC@Opt?1AddPage?$AA@			; `string'
EXTRN	_hInst:DWORD
;	COMDAT ??_C@_1BA@DEPM@?$AAN?$AAe?$AAt?$AAw?$AAo?$AAr?$AAk?$AA?$AA@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\jabber_opt.c
_DATA	SEGMENT
??_C@_1BA@DEPM@?$AAN?$AAe?$AAt?$AAw?$AAo?$AAr?$AAk?$AA?$AA@ DB 'N', 00H, 'e'
	DB	00H, 't', 00H, 'w', 00H, 'o', 00H, 'r', 00H, 'k', 00H, 00H, 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@
_DATA	SEGMENT
??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ DB 'LangPack/TranslateStrin'
	DB	'g', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@CNIC@Opt?1AddPage?$AA@
_DATA	SEGMENT
??_C@_0M@CNIC@Opt?1AddPage?$AA@ DB 'Opt/AddPage', 00H	; `string'
_DATA	ENDS
;	COMDAT _TlenOptionsInit
_TEXT	SEGMENT
_proto$ = 8
_wParam$ = 12
_odp$ = -68
_TlenOptionsInit PROC NEAR				; COMDAT

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	56		 push	 esi
  00007	57		 push	 edi

; 85   : 	int i;
; 86   : 	OPTIONSDIALOGPAGE odp = { 0 };

  00008	6a 10		 push	 16			; 00000010H
  0000a	33 c0		 xor	 eax, eax
  0000c	59		 pop	 ecx
  0000d	8d 7d c0	 lea	 edi, DWORD PTR _odp$[ebp+4]
  00010	f3 ab		 rep stosd

; 87   : 	odp.cbSize = sizeof(odp);
; 88   : 	odp.position = 0;

  00012	21 45 c0	 and	 DWORD PTR _odp$[ebp+4], eax

; 89   : 	odp.hInstance = hInst;

  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR _hInst
  0001a	89 45 d0	 mov	 DWORD PTR _odp$[ebp+20], eax

; 90   : 	odp.ptszGroup = TranslateT("Network");

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1BA@DEPM@?$AAN?$AAe?$AAt?$AAw?$AAo?$AAr?$AAk?$AA?$AA@ ; `string'
  00027	68 00 10 00 00	 push	 4096			; 00001000H
  0002c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  00031	c7 45 bc 44 00
	00 00		 mov	 DWORD PTR _odp$[ebp], 68 ; 00000044H
  00038	ff 50 24	 call	 DWORD PTR [eax+36]
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003e	89 45 d8	 mov	 DWORD PTR _odp$[ebp+28], eax

; 91   : 	odp.ptszTitle = proto->iface.m_tszUserName;

  00041	8b 45 08	 mov	 eax, DWORD PTR _proto$[ebp]
  00044	be 00 00 00 00	 mov	 esi, OFFSET FLAT:_tabPages

; 92   : 	odp.flags = ODPF_BOLDGROUPS | ODPF_TCHAR;

  00049	6a 0c		 push	 12			; 0000000cH

; 93   :     odp.dwInitParam = (LPARAM)proto;

  0004b	89 45 fc	 mov	 DWORD PTR _odp$[ebp+64], eax
  0004e	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00051	5f		 pop	 edi
  00052	89 4d c4	 mov	 DWORD PTR _odp$[ebp+8], ecx
  00055	89 7d e4	 mov	 DWORD PTR _odp$[ebp+40], edi
$L84981:

; 94   : 	for (i = 0; i < SIZEOF(tabPages); i++) {
; 95   : 		odp.pszTemplate = MAKEINTRESOURCEA(tabPages[i].dlgId);

  00058	0f b7 46 04	 movzx	 eax, WORD PTR [esi+4]
  0005c	89 45 cc	 mov	 DWORD PTR _odp$[ebp+16], eax

; 96   : 		odp.pfnDlgProc = tabPages[i].dlgProc;

  0005f	8b 06		 mov	 eax, DWORD PTR [esi]
  00061	89 45 c8	 mov	 DWORD PTR _odp$[ebp+12], eax

; 97   : 		odp.ptszTab = tabPages[i].tabName;

  00064	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00067	89 45 f8	 mov	 DWORD PTR _odp$[ebp+60], eax

; 98   : 		CallService(MS_OPT_ADDPAGE, wParam, (LPARAM) & odp);

  0006a	8d 45 bc	 lea	 eax, DWORD PTR _odp$[ebp]
  0006d	50		 push	 eax
  0006e	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00073	ff 75 0c	 push	 DWORD PTR _wParam$[ebp]
  00076	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@CNIC@Opt?1AddPage?$AA@ ; `string'
  0007b	ff 50 24	 call	 DWORD PTR [eax+36]
  0007e	03 f7		 add	 esi, edi
  00080	83 c4 0c	 add	 esp, 12			; 0000000cH
  00083	81 fe 30 00 00
	00		 cmp	 esi, OFFSET FLAT:_tabPages+48
  00089	7c cd		 jl	 SHORT $L84981
  0008b	5f		 pop	 edi

; 99   : 	}
; 100  : /*
; 101  : 	if (ServiceExists(MS_POPUP_ADDPOPUP)) {
; 102  : 		ZeroMemory(&odp,sizeof(odp));
; 103  : 		odp.cbSize = sizeof(odp);
; 104  : 		odp.position = 100000000;
; 105  : 		odp.hInstance = hInst;
; 106  :     	odp.flags = ODPF_BOLDGROUPS | ODPF_TCHAR;
; 107  : 		odp.ptszGroup = TranslateT("PopUps");
; 108  :     	odp.ptszTitle = proto->iface.m_tszUserName;
; 109  :         odp.dwInitParam = (LPARAM)proto;
; 110  : 		odp.pszTemplate = MAKEINTRESOURCEA(IDD_OPTIONS_POPUPS);
; 111  : 		odp.pfnDlgProc = TlenPopupsDlgProc;
; 112  : 		CallService(MS_OPT_ADDPAGE,wParam,(LPARAM)&odp);
; 113  : 	}
; 114  :  */
; 115  : 	return 0;

  0008c	33 c0		 xor	 eax, eax
  0008e	5e		 pop	 esi

; 116  : }

  0008f	c9		 leave
  00090	c3		 ret	 0
_TlenOptionsInit ENDP
_TEXT	ENDS
PUBLIC	_TlenAccMgrUIDlgProc@16
PUBLIC	??_C@_09ONOL@LoginName?$AA@			; `string'
PUBLIC	??_C@_08NKKK@Password?$AA@			; `string'
PUBLIC	??_C@_0BG@PHIF@DB?1Crypt?1DecodeString?$AA@	; `string'
PUBLIC	??_C@_0N@BEAN@SavePassword?$AA@			; `string'
PUBLIC	??_C@_0BE@BMBE@http?3?1?1reg?4tlen?4pl?1?$AA@	; `string'
PUBLIC	??_C@_0O@EHKK@Utils?1OpenURL?$AA@		; `string'
PUBLIC	??_C@_0BG@PBIB@DB?1Crypt?1EncodeString?$AA@	; `string'
PUBLIC	??_C@_1CK@NMED@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1JM@BOLK@?$AAT?$AAh?$AAe?$AAs?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AAs?$AA?5?$AAw?$AAi?$AAl?$AAl?$AA?5?$AAt@ ; `string'
PUBLIC	??_C@_0BJ@BEPM@DB?1Contact?1GetSettingStr?$AA@	; `string'
PUBLIC	??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@	; `string'
PUBLIC	??_C@_0BJ@IGCO@DB?1Contact?1DeleteSetting?$AA@	; `string'
PUBLIC	??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@	; `string'
EXTRN	__imp__GetWindowLongW@8:NEAR
EXTRN	__imp__SetWindowLongW@12:NEAR
EXTRN	__imp__GetParent@4:NEAR
EXTRN	__imp__GetDlgItem@8:NEAR
EXTRN	__imp__SetDlgItemTextA@12:NEAR
EXTRN	__imp__SetDlgItemTextW@12:NEAR
EXTRN	__imp__GetDlgItemTextA@16:NEAR
EXTRN	__imp__CheckDlgButton@12:NEAR
EXTRN	__imp__IsDlgButtonChecked@8:NEAR
EXTRN	_strcmp:NEAR
EXTRN	_strlen:NEAR
EXTRN	__imp__GetFocus@0:NEAR
EXTRN	__imp__SendMessageW@16:NEAR
EXTRN	__imp__strlwr:NEAR
EXTRN	__imp__MessageBoxW@16:NEAR
;	COMDAT ??_C@_0BJ@BEPM@DB?1Contact?1GetSettingStr?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_0BJ@BEPM@DB?1Contact?1GetSettingStr?$AA@ DB 'DB/Contact/GetSettingS'
	DB	'tr', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@
_DATA	SEGMENT
??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ DB 'DB/Contact/FreeVariant', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@IGCO@DB?1Contact?1DeleteSetting?$AA@
_DATA	SEGMENT
??_C@_0BJ@IGCO@DB?1Contact?1DeleteSetting?$AA@ DB 'DB/Contact/DeleteSetti'
	DB	'ng', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@
_DATA	SEGMENT
??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ DB 'DB/Contact/WriteSetting'
	DB	00H						; `string'
_DATA	ENDS
;	COMDAT ??_C@_09ONOL@LoginName?$AA@
_DATA	SEGMENT
??_C@_09ONOL@LoginName?$AA@ DB 'LoginName', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08NKKK@Password?$AA@
_DATA	SEGMENT
??_C@_08NKKK@Password?$AA@ DB 'Password', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@PHIF@DB?1Crypt?1DecodeString?$AA@
_DATA	SEGMENT
??_C@_0BG@PHIF@DB?1Crypt?1DecodeString?$AA@ DB 'DB/Crypt/DecodeString', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@BEAN@SavePassword?$AA@
_DATA	SEGMENT
??_C@_0N@BEAN@SavePassword?$AA@ DB 'SavePassword', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@BMBE@http?3?1?1reg?4tlen?4pl?1?$AA@
_DATA	SEGMENT
??_C@_0BE@BMBE@http?3?1?1reg?4tlen?4pl?1?$AA@ DB 'http://reg.tlen.pl/', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@EHKK@Utils?1OpenURL?$AA@
_DATA	SEGMENT
??_C@_0O@EHKK@Utils?1OpenURL?$AA@ DB 'Utils/OpenURL', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@PBIB@DB?1Crypt?1EncodeString?$AA@
_DATA	SEGMENT
??_C@_0BG@PBIB@DB?1Crypt?1EncodeString?$AA@ DB 'DB/Crypt/EncodeString', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_1CK@NMED@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn@
_DATA	SEGMENT
??_C@_1CK@NMED@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn@ DB 'T'
	DB	00H, 'l', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'P', 00H, 'r', 00H
	DB	'o', 00H, 't', 00H, 'o', 00H, 'c', 00H, 'o', 00H, 'l', 00H, ' '
	DB	00H, 'O', 00H, 'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	00H, 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_1JM@BOLK@?$AAT?$AAh?$AAe?$AAs?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AAs?$AA?5?$AAw?$AAi?$AAl?$AAl?$AA?5?$AAt@
_DATA	SEGMENT
??_C@_1JM@BOLK@?$AAT?$AAh?$AAe?$AAs?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AAs?$AA?5?$AAw?$AAi?$AAl?$AAl?$AA?5?$AAt@ DB 'T'
	DB	00H, 'h', 00H, 'e', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 's', 00H, ' '
	DB	00H, 'w', 00H, 'i', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 't', 00H
	DB	'a', 00H, 'k', 00H, 'e', 00H, ' ', 00H, 'e', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, ' ', 00H, 't', 00H, 'h', 00H
	DB	'e', 00H, ' ', 00H, 'n', 00H, 'e', 00H, 'x', 00H, 't', 00H, ' '
	DB	00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' ', 00H, 'y', 00H
	DB	'o', 00H, 'u', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'n'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, ' ', 00H, 't', 00H, 'o', 00H
	DB	' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'T', 00H, 'l'
	DB	00H, 'e', 00H, 'n', 00H, ' ', 00H, 'n', 00H, 'e', 00H, 't', 00H
	DB	'w', 00H, 'o', 00H, 'r', 00H, 'k', 00H, '.', 00H, 00H, 00H ; `string'
_DATA	ENDS
;	COMDAT _TlenAccMgrUIDlgProc@16
_TEXT	SEGMENT
_hwndDlg$ = 8
_msg$ = 12
_wParam$ = 16
_lParam$ = 20
_text$ = -300
_dbv$85028 = -24
_reconnectRequired$85069 = 20
_dbv$85070 = -24
_cgs$85875 = -12
_cgs$85886 = -12
_dbv$85895 = -36
_cgs$85896 = -12
_cgs$85905 = -12
_cws$85914 = -44
_cgs$85922 = -12
_cws$85931 = -44
_cgs$85937 = -12
_cws$85943 = -44
_TlenAccMgrUIDlgProc@16 PROC NEAR			; COMDAT

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 2c 01 00
	00		 sub	 esp, 300		; 0000012cH
  00009	53		 push	 ebx

; 133  : 	char text[256];
; 134  : 	WNDPROC oldProc;
; 135  : 
; 136  :     TlenProtocol *proto = (TlenProtocol *)GetWindowLong(hwndDlg, GWL_USERDATA);

  0000a	8b 5d 08	 mov	 ebx, DWORD PTR _hwndDlg$[ebp]
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	6a eb		 push	 -21			; ffffffebH
  00011	53		 push	 ebx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongW@8
  00018	8b f0		 mov	 esi, eax

; 137  : 	switch (msg) {

  0001a	8b 45 0c	 mov	 eax, DWORD PTR _msg$[ebp]
  0001d	83 e8 4e	 sub	 eax, 78			; 0000004eH
  00020	0f 84 e3 01 00
	00		 je	 $L85062
  00026	2d c2 00 00 00	 sub	 eax, 194		; 000000c2H
  0002b	74 77		 je	 SHORT $L85027
  0002d	48		 dec	 eax
  0002e	0f 85 e1 01 00
	00		 jne	 $L85065

; 159  : 		}
; 160  : 	case WM_COMMAND:
; 161  : 		switch (LOWORD(wParam)) {

  00034	8b 75 10	 mov	 esi, DWORD PTR _wParam$[ebp]
  00037	0f b7 c6	 movzx	 eax, si
  0003a	2d e9 03 00 00	 sub	 eax, 1001		; 000003e9H
  0003f	74 4a		 je	 SHORT $L85051
  00041	48		 dec	 eax
  00042	48		 dec	 eax
  00043	74 46		 je	 SHORT $L85051
  00045	83 e8 25	 sub	 eax, 37			; 00000025H
  00048	74 25		 je	 SHORT $L85057
  0004a	83 e8 08	 sub	 eax, 8
$L85953:
  0004d	0f 85 c2 01 00
	00		 jne	 $L85065

; 165  : 				SendMessage(GetParent(hwndDlg), PSM_CHANGED, 0, 0);
; 166  : 			break;
; 167  : 		case IDC_SAVEPASSWORD:
; 168  :         	SendMessage(GetParent(hwndDlg), PSM_CHANGED, 0, 0);

  00053	6a 00		 push	 0
  00055	6a 00		 push	 0
  00057	68 68 04 00 00	 push	 1128			; 00000468H
  0005c	53		 push	 ebx
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00063	50		 push	 eax
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageW@16

; 169  : 			break;

  0006a	e9 a6 01 00 00	 jmp	 $L85065
$L85057:

; 170  : 		case IDC_REGISTERACCOUNT:
; 171  : 		    CallService(MS_UTILS_OPENURL, (WPARAM) 1, (LPARAM) TLEN_REGISTER);

  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00074	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@BMBE@http?3?1?1reg?4tlen?4pl?1?$AA@ ; `string'
  00079	6a 01		 push	 1
  0007b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@EHKK@Utils?1OpenURL?$AA@ ; `string'
  00080	ff 50 24	 call	 DWORD PTR [eax+36]
  00083	83 c4 0c	 add	 esp, 12			; 0000000cH

; 172  : 		    break;

  00086	e9 8a 01 00 00	 jmp	 $L85065
$L85051:

; 162  : 		case IDC_EDIT_USERNAME:
; 163  : 		case IDC_EDIT_PASSWORD:
; 164  : 			if ((HWND)lParam==GetFocus() && HIWORD(wParam)==EN_CHANGE)

  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  00091	39 45 14	 cmp	 DWORD PTR _lParam$[ebp], eax
  00094	0f 85 7b 01 00
	00		 jne	 $L85065
  0009a	c1 ee 10	 shr	 esi, 16			; 00000010H
  0009d	66 81 fe 00 03	 cmp	 si, 768			; 00000300H

; 173  : 		}
; 174  : 		break;

  000a2	eb a9		 jmp	 SHORT $L85953
$L85027:

; 138  : 	case WM_INITDIALOG:
; 139  : 		{
; 140  : 			DBVARIANT dbv;
; 141  : 			proto = (TlenProtocol *)lParam;
; 142  :             SetWindowLong(hwndDlg, GWL_USERDATA, (LONG)proto);

  000a4	8b 75 14	 mov	 esi, DWORD PTR _lParam$[ebp]
  000a7	56		 push	 esi
  000a8	6a eb		 push	 -21			; ffffffebH
  000aa	53		 push	 ebx
  000ab	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__SetWindowLongW@12
  000b1	ff d3		 call	 ebx

; 143  : 			TranslateDialogDefault(hwndDlg);

  000b3	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  000b6	e8 00 00 00 00	 call	 _TranslateDialogDefault

; 144  : 			if (!DBGetContactSettingTString(NULL, proto->iface.m_szModuleName, "LoginName", &dbv)) {

  000bb	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  000be	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85875[ebp+4], OFFSET FLAT:??_C@_09ONOL@LoginName?$AA@ ; `string'
  000c5	89 45 f4	 mov	 DWORD PTR _cgs$85875[ebp], eax
  000c8	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85028[ebp]
  000cb	89 45 fc	 mov	 DWORD PTR _cgs$85875[ebp+8], eax
  000ce	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85875[ebp]
  000d1	50		 push	 eax
  000d2	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000d7	6a 00		 push	 0
  000d9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@BEPM@DB?1Contact?1GetSettingStr?$AA@ ; `string'
  000de	c6 45 e8 fc	 mov	 BYTE PTR _dbv$85028[ebp], 252 ; 000000fcH
  000e2	ff 50 24	 call	 DWORD PTR [eax+36]
  000e5	83 c4 10	 add	 esp, 16			; 00000010H
  000e8	bf e9 03 00 00	 mov	 edi, 1001		; 000003e9H
  000ed	85 c0		 test	 eax, eax
  000ef	75 23		 jne	 SHORT $L85881

; 145  : 				SetDlgItemText(hwndDlg, IDC_EDIT_USERNAME, dbv.ptszVal);

  000f1	ff 75 ec	 push	 DWORD PTR _dbv$85028[ebp+4]
  000f4	57		 push	 edi
  000f5	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  000f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextW@12

; 146  : 				DBFreeVariant(&dbv);

  000fe	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85028[ebp]
  00101	50		 push	 eax
  00102	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00107	6a 00		 push	 0
  00109	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  0010e	ff 50 24	 call	 DWORD PTR [eax+36]
  00111	83 c4 0c	 add	 esp, 12			; 0000000cH
$L85881:

; 147  : 			}
; 148  : 			if (!DBGetContactSetting(NULL, proto->iface.m_szModuleName, "Password", &dbv)) {

  00114	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00117	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85886[ebp+4], OFFSET FLAT:??_C@_08NKKK@Password?$AA@ ; `string'
  0011e	89 45 f4	 mov	 DWORD PTR _cgs$85886[ebp], eax
  00121	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85028[ebp]
  00124	89 45 fc	 mov	 DWORD PTR _cgs$85886[ebp+8], eax
  00127	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85886[ebp]
  0012a	50		 push	 eax
  0012b	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00130	6a 00		 push	 0
  00132	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00137	ff 50 24	 call	 DWORD PTR [eax+36]
  0013a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0013d	85 c0		 test	 eax, eax
  0013f	75 4d		 jne	 SHORT $L85891

; 149  : 				CallService(MS_DB_CRYPT_DECODESTRING, strlen(dbv.pszVal)+1, (LPARAM) dbv.pszVal);

  00141	ff 75 ec	 push	 DWORD PTR _dbv$85028[ebp+4]
  00144	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00149	83 c0 24	 add	 eax, 36			; 00000024H
  0014c	ff 75 ec	 push	 DWORD PTR _dbv$85028[ebp+4]
  0014f	89 45 14	 mov	 DWORD PTR 20+[ebp], eax
  00152	e8 00 00 00 00	 call	 _strlen
  00157	59		 pop	 ecx
  00158	40		 inc	 eax
  00159	50		 push	 eax
  0015a	8b 45 14	 mov	 eax, DWORD PTR 20+[ebp]
  0015d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@PHIF@DB?1Crypt?1DecodeString?$AA@ ; `string'
  00162	ff 10		 call	 DWORD PTR [eax]
  00164	83 c4 0c	 add	 esp, 12			; 0000000cH

; 150  : 				SetDlgItemTextA(hwndDlg, IDC_EDIT_PASSWORD, dbv.pszVal);

  00167	ff 75 ec	 push	 DWORD PTR _dbv$85028[ebp+4]
  0016a	68 eb 03 00 00	 push	 1003			; 000003ebH
  0016f	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00172	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 151  : 				DBFreeVariant(&dbv);

  00178	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85028[ebp]
  0017b	50		 push	 eax
  0017c	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00181	6a 00		 push	 0
  00183	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  00188	ff 50 24	 call	 DWORD PTR [eax+36]
  0018b	83 c4 0c	 add	 esp, 12			; 0000000cH
$L85891:

; 152  : 			}
; 153  : 			CheckDlgButton(hwndDlg, IDC_SAVEPASSWORD, DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "SavePassword", TRUE));

  0018e	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00191	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85896[ebp+4], OFFSET FLAT:??_C@_0N@BEAN@SavePassword?$AA@ ; `string'
  00198	89 45 f4	 mov	 DWORD PTR _cgs$85896[ebp], eax
  0019b	8d 45 dc	 lea	 eax, DWORD PTR _dbv$85895[ebp]
  0019e	89 45 fc	 mov	 DWORD PTR _cgs$85896[ebp+8], eax
  001a1	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85896[ebp]
  001a4	50		 push	 eax
  001a5	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001aa	6a 00		 push	 0
  001ac	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  001b1	ff 50 24	 call	 DWORD PTR [eax+36]
  001b4	83 c4 0c	 add	 esp, 12			; 0000000cH
  001b7	85 c0		 test	 eax, eax
  001b9	74 05		 je	 SHORT $L85897
  001bb	6a 01		 push	 1
  001bd	58		 pop	 eax
  001be	eb 04		 jmp	 SHORT $L85894
$L85897:
  001c0	0f b6 45 e0	 movzx	 eax, BYTE PTR _dbv$85895[ebp+4]
$L85894:
  001c4	50		 push	 eax
  001c5	68 18 04 00 00	 push	 1048			; 00000418H
  001ca	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  001cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CheckDlgButton@12

; 154  : 
; 155  : 			oldProc = (WNDPROC) GetWindowLong(GetDlgItem(hwndDlg, IDC_EDIT_USERNAME), GWL_WNDPROC);

  001d3	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetDlgItem@8
  001d9	6a fc		 push	 -4			; fffffffcH
  001db	57		 push	 edi
  001dc	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  001df	ff d6		 call	 esi
  001e1	50		 push	 eax
  001e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongW@8

; 156  : 			SetWindowLong(GetDlgItem(hwndDlg, IDC_EDIT_USERNAME), GWL_USERDATA, (LONG) oldProc);

  001e8	50		 push	 eax
  001e9	6a eb		 push	 -21			; ffffffebH
  001eb	57		 push	 edi
  001ec	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  001ef	ff d6		 call	 esi
  001f1	50		 push	 eax
  001f2	ff d3		 call	 ebx

; 157  : 			SetWindowLong(GetDlgItem(hwndDlg, IDC_EDIT_USERNAME), GWL_WNDPROC, (LONG) JabberValidateUsernameWndProc);

  001f4	68 00 00 00 00	 push	 OFFSET FLAT:_JabberValidateUsernameWndProc@16
  001f9	6a fc		 push	 -4			; fffffffcH
  001fb	57		 push	 edi
  001fc	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  001ff	ff d6		 call	 esi
  00201	50		 push	 eax
  00202	ff d3		 call	 ebx

; 158  : 			return TRUE;

  00204	e9 3a 02 00 00	 jmp	 $L85952
$L85062:

; 175  : 	case WM_NOTIFY:
; 176  : 		switch (((LPNMHDR) lParam)->code) {

  00209	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  0020c	81 78 08 36 ff
	ff ff		 cmp	 DWORD PTR [eax+8], -202	; ffffff36H
  00213	74 07		 je	 SHORT $L85068
$L85065:

; 204  : 			}
; 205  : 		}
; 206  : 		break;
; 207  : 	}
; 208  : 	return FALSE;

  00215	33 c0		 xor	 eax, eax
  00217	e9 2a 02 00 00	 jmp	 $L85018
$L85068:

; 177  : 		case PSN_APPLY:
; 178  : 			{
; 179  : 				BOOL reconnectRequired = FALSE;

  0021c	83 65 14 00	 and	 DWORD PTR _reconnectRequired$85069[ebp], 0

; 180  : 				DBVARIANT dbv;
; 181  : 
; 182  : 				GetDlgItemTextA(hwndDlg, IDC_EDIT_USERNAME, text, sizeof(text));

  00220	bf 00 01 00 00	 mov	 edi, 256		; 00000100H
  00225	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  0022b	57		 push	 edi
  0022c	50		 push	 eax
  0022d	68 e9 03 00 00	 push	 1001			; 000003e9H
  00232	53		 push	 ebx
  00233	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 183  : 				if (DBGetContactSetting(NULL, proto->iface.m_szModuleName, "LoginName", &dbv) || strcmp(text, dbv.pszVal))

  00239	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0023c	bb 00 00 00 00	 mov	 ebx, OFFSET FLAT:??_C@_09ONOL@LoginName?$AA@ ; `string'
  00241	89 45 f4	 mov	 DWORD PTR _cgs$85905[ebp], eax
  00244	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85070[ebp]
  00247	89 45 fc	 mov	 DWORD PTR _cgs$85905[ebp+8], eax
  0024a	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85905[ebp]
  0024d	50		 push	 eax
  0024e	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00253	6a 00		 push	 0
  00255	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  0025a	89 5d f8	 mov	 DWORD PTR _cgs$85905[ebp+4], ebx
  0025d	ff 50 24	 call	 DWORD PTR [eax+36]
  00260	83 c4 0c	 add	 esp, 12			; 0000000cH
  00263	85 c0		 test	 eax, eax
  00265	75 15		 jne	 SHORT $L85073
  00267	ff 75 ec	 push	 DWORD PTR _dbv$85070[ebp+4]
  0026a	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00270	50		 push	 eax
  00271	e8 00 00 00 00	 call	 _strcmp
  00276	59		 pop	 ecx
  00277	85 c0		 test	 eax, eax
  00279	59		 pop	 ecx
  0027a	74 07		 je	 SHORT $L85072
$L85073:

; 184  : 					reconnectRequired = TRUE;

  0027c	c7 45 14 01 00
	00 00		 mov	 DWORD PTR _reconnectRequired$85069[ebp], 1
$L85072:

; 185  : 				if (dbv.pszVal != NULL)	DBFreeVariant(&dbv);

  00283	83 7d ec 00	 cmp	 DWORD PTR _dbv$85070[ebp+4], 0
  00287	74 16		 je	 SHORT $L85910
  00289	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85070[ebp]
  0028c	50		 push	 eax
  0028d	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00292	6a 00		 push	 0
  00294	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  00299	ff 50 24	 call	 DWORD PTR [eax+36]
  0029c	83 c4 0c	 add	 esp, 12			; 0000000cH
$L85910:

; 186  : 				DBWriteContactSettingString(NULL, proto->iface.m_szModuleName, "LoginName", strlwr(text));

  0029f	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  002a5	50		 push	 eax
  002a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strlwr
  002ac	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  002af	80 4d dc ff	 or	 BYTE PTR _cws$85914[ebp+8], 255 ; 000000ffH
  002b3	89 45 e0	 mov	 DWORD PTR _cws$85914[ebp+12], eax
  002b6	8d 45 d4	 lea	 eax, DWORD PTR _cws$85914[ebp]
  002b9	89 5d d8	 mov	 DWORD PTR _cws$85914[ebp+4], ebx
  002bc	50		 push	 eax
  002bd	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  002c2	bb 00 00 00 00	 mov	 ebx, OFFSET FLAT:??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ ; `string'
  002c7	6a 00		 push	 0
  002c9	53		 push	 ebx
  002ca	89 4d d4	 mov	 DWORD PTR _cws$85914[ebp], ecx
  002cd	ff 50 24	 call	 DWORD PTR [eax+36]
  002d0	83 c4 10	 add	 esp, 16			; 00000010H

; 187  : 
; 188  : 				if (IsDlgButtonChecked(hwndDlg, IDC_SAVEPASSWORD)) {

  002d3	68 18 04 00 00	 push	 1048			; 00000418H
  002d8	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  002db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  002e1	85 c0		 test	 eax, eax
  002e3	0f 84 b0 00 00
	00		 je	 $L85077

; 189  : 					GetDlgItemTextA(hwndDlg, IDC_EDIT_PASSWORD, text, sizeof(text));

  002e9	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  002ef	57		 push	 edi
  002f0	50		 push	 eax
  002f1	68 eb 03 00 00	 push	 1003			; 000003ebH
  002f6	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  002f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 190  : 					CallService(MS_DB_CRYPT_ENCODESTRING, sizeof(text), (LPARAM) text);

  002ff	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00305	50		 push	 eax
  00306	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0030b	57		 push	 edi
  0030c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@PBIB@DB?1Crypt?1EncodeString?$AA@ ; `string'
  00311	ff 50 24	 call	 DWORD PTR [eax+36]

; 191  : 					if (DBGetContactSetting(NULL, proto->iface.m_szModuleName, "Password", &dbv) || strcmp(text, dbv.pszVal))

  00314	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00317	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_08NKKK@Password?$AA@ ; `string'
  0031c	89 45 f4	 mov	 DWORD PTR _cgs$85922[ebp], eax
  0031f	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85070[ebp]
  00322	89 45 fc	 mov	 DWORD PTR _cgs$85922[ebp+8], eax
  00325	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85922[ebp]
  00328	50		 push	 eax
  00329	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0032e	6a 00		 push	 0
  00330	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00335	89 7d f8	 mov	 DWORD PTR _cgs$85922[ebp+4], edi
  00338	ff 50 24	 call	 DWORD PTR [eax+36]
  0033b	83 c4 18	 add	 esp, 24			; 00000018H
  0033e	85 c0		 test	 eax, eax
  00340	75 15		 jne	 SHORT $L85082
  00342	ff 75 ec	 push	 DWORD PTR _dbv$85070[ebp+4]
  00345	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  0034b	50		 push	 eax
  0034c	e8 00 00 00 00	 call	 _strcmp
  00351	59		 pop	 ecx
  00352	85 c0		 test	 eax, eax
  00354	59		 pop	 ecx
  00355	74 07		 je	 SHORT $L85081
$L85082:

; 192  : 						reconnectRequired = TRUE;

  00357	c7 45 14 01 00
	00 00		 mov	 DWORD PTR _reconnectRequired$85069[ebp], 1
$L85081:

; 193  : 					if (dbv.pszVal != NULL)	DBFreeVariant(&dbv);

  0035e	83 7d ec 00	 cmp	 DWORD PTR _dbv$85070[ebp+4], 0
  00362	74 16		 je	 SHORT $L85927
  00364	8d 45 e8	 lea	 eax, DWORD PTR _dbv$85070[ebp]
  00367	50		 push	 eax
  00368	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0036d	6a 00		 push	 0
  0036f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  00374	ff 50 24	 call	 DWORD PTR [eax+36]
  00377	83 c4 0c	 add	 esp, 12			; 0000000cH
$L85927:

; 194  : 					DBWriteContactSettingString(NULL, proto->iface.m_szModuleName, "Password", text);

  0037a	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0037d	80 4d dc ff	 or	 BYTE PTR _cws$85931[ebp+8], 255 ; 000000ffH
  00381	89 45 d4	 mov	 DWORD PTR _cws$85931[ebp], eax
  00384	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  0038a	89 45 e0	 mov	 DWORD PTR _cws$85931[ebp+12], eax
  0038d	8d 45 d4	 lea	 eax, DWORD PTR _cws$85931[ebp]
  00390	50		 push	 eax
  00391	6a 00		 push	 0
  00393	89 7d d8	 mov	 DWORD PTR _cws$85931[ebp+4], edi
  00396	53		 push	 ebx

; 195  : 				}
; 196  : 				else

  00397	eb 18		 jmp	 SHORT $L85954
$L85077:

; 197  : 					DBDeleteContactSetting(NULL, proto->iface.m_szModuleName, "Password");

  00399	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0039c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$85937[ebp+4], OFFSET FLAT:??_C@_08NKKK@Password?$AA@ ; `string'
  003a3	89 45 f4	 mov	 DWORD PTR _cgs$85937[ebp], eax
  003a6	8d 45 f4	 lea	 eax, DWORD PTR _cgs$85937[ebp]
  003a9	50		 push	 eax
  003aa	6a 00		 push	 0
  003ac	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@IGCO@DB?1Contact?1DeleteSetting?$AA@ ; `string'
$L85954:
  003b1	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  003b6	ff 50 24	 call	 DWORD PTR [eax+36]
  003b9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 198  : 
; 199  : 				DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "SavePassword", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_SAVEPASSWORD));

  003bc	68 18 04 00 00	 push	 1048			; 00000418H
  003c1	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  003c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  003ca	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  003cd	88 45 e0	 mov	 BYTE PTR _cws$85943[ebp+12], al
  003d0	8d 45 d4	 lea	 eax, DWORD PTR _cws$85943[ebp]
  003d3	33 ff		 xor	 edi, edi
  003d5	50		 push	 eax
  003d6	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  003db	57		 push	 edi
  003dc	53		 push	 ebx
  003dd	89 4d d4	 mov	 DWORD PTR _cws$85943[ebp], ecx
  003e0	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _cws$85943[ebp+4], OFFSET FLAT:??_C@_0N@BEAN@SavePassword?$AA@ ; `string'
  003e7	c6 45 dc 01	 mov	 BYTE PTR _cws$85943[ebp+8], 1
  003eb	ff 50 24	 call	 DWORD PTR [eax+36]
  003ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 200  : 				if (reconnectRequired && proto->jabberConnected)

  003f1	39 7d 14	 cmp	 DWORD PTR _reconnectRequired$85069[ebp], edi
  003f4	74 46		 je	 SHORT $L85090
  003f6	39 be 7c 01 00
	00		 cmp	 DWORD PTR [esi+380], edi
  003fc	74 3e		 je	 SHORT $L85090

; 201  : 					MessageBox(hwndDlg, TranslateT("These changes will take effect the next time you connect to the Tlen network."), TranslateT("Tlen Protocol Option"), MB_OK|MB_SETFOREGROUND);

  003fe	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00403	68 00 00 01 00	 push	 65536			; 00010000H
  00408	bb 00 10 00 00	 mov	 ebx, 4096		; 00001000H
  0040d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1CK@NMED@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn@ ; `string'
  00412	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  00417	53		 push	 ebx
  00418	57		 push	 edi
  00419	ff 50 24	 call	 DWORD PTR [eax+36]
  0041c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0041f	50		 push	 eax
  00420	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00425	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1JM@BOLK@?$AAT?$AAh?$AAe?$AAs?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AAs?$AA?5?$AAw?$AAi?$AAl?$AAl?$AA?5?$AAt@ ; `string'
  0042a	53		 push	 ebx
  0042b	57		 push	 edi
  0042c	ff 50 24	 call	 DWORD PTR [eax+36]
  0042f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00432	50		 push	 eax
  00433	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00436	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxW@16
$L85090:

; 202  : 				TlenLoadOptions(proto);

  0043c	56		 push	 esi
  0043d	e8 00 00 00 00	 call	 _TlenLoadOptions
  00442	59		 pop	 ecx
$L85952:

; 203  : 				return TRUE;

  00443	6a 01		 push	 1
  00445	58		 pop	 eax
$L85018:
  00446	5f		 pop	 edi
  00447	5e		 pop	 esi
  00448	5b		 pop	 ebx

; 209  : }

  00449	c9		 leave
  0044a	c2 10 00	 ret	 16			; 00000010H
_TlenAccMgrUIDlgProc@16 ENDP
_TEXT	ENDS
PUBLIC	??_C@_08GFMP@?$CC?$CG?8?1?3?$DM?$DO?$EA?$AA@	; `string'
EXTRN	__imp__strchr:NEAR
EXTRN	__imp__CallWindowProcW@20:NEAR
;	COMDAT ??_C@_08GFMP@?$CC?$CG?8?1?3?$DM?$DO?$EA?$AA@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\jabber_opt.c
_DATA	SEGMENT
??_C@_08GFMP@?$CC?$CG?8?1?3?$DM?$DO?$EA?$AA@ DB '"&''/:<>@', 00H ; `string'
_DATA	ENDS
;	COMDAT _JabberValidateUsernameWndProc@16
_TEXT	SEGMENT
_wParam$ = 16
_lParam$ = 20
_hwndEdit$ = 8
_msg$ = 12
_JabberValidateUsernameWndProc@16 PROC NEAR		; COMDAT

; 119  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 120  : 	WNDPROC oldProc = (WNDPROC) GetWindowLong(hwndEdit, GWL_USERDATA);

  00004	6a eb		 push	 -21			; ffffffebH
  00006	ff 75 08	 push	 DWORD PTR _hwndEdit$[ebp]
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongW@8

; 121  : 
; 122  : 	switch (msg) {

  0000f	81 7d 0c 02 01
	00 00		 cmp	 DWORD PTR _msg$[ebp], 258 ; 00000102H
  00016	8b f0		 mov	 esi, eax
  00018	75 1e		 jne	 SHORT $L85007

; 123  : 	case WM_CHAR:
; 124  : 		if (strchr("\"&'/:<>@", wParam&0xff) != NULL)

  0001a	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  0001d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00022	50		 push	 eax
  00023	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08GFMP@?$CC?$CG?8?1?3?$DM?$DO?$EA?$AA@ ; `string'
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  0002e	59		 pop	 ecx
  0002f	85 c0		 test	 eax, eax
  00031	59		 pop	 ecx
  00032	74 04		 je	 SHORT $L85007

; 125  : 			return 0;

  00034	33 c0		 xor	 eax, eax
  00036	eb 13		 jmp	 SHORT $L84998
$L85007:

; 126  : 		break;
; 127  : 	}
; 128  : 	return CallWindowProc(oldProc, hwndEdit, msg, wParam, lParam);

  00038	ff 75 14	 push	 DWORD PTR _lParam$[ebp]
  0003b	ff 75 10	 push	 DWORD PTR _wParam$[ebp]
  0003e	ff 75 0c	 push	 DWORD PTR _msg$[ebp]
  00041	ff 75 08	 push	 DWORD PTR _hwndEdit$[ebp]
  00044	56		 push	 esi
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CallWindowProcW@20
$L84998:
  0004b	5e		 pop	 esi

; 129  : }

  0004c	5d		 pop	 ebp
  0004d	c2 10 00	 ret	 16			; 00000010H
_JabberValidateUsernameWndProc@16 ENDP
_TEXT	ENDS
PUBLIC	??_C@_1CE@PANB@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FC@JGEG@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAu@ ; `string'
PUBLIC	??_C@_1CE@IMI@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@GOL@?$AAA?$AAl?$AAw?$AAa?$AAy?$AAs?$AA?5?$AAa?$AAs?$AAk?$AA?5?$AAm?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FI@HENN@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf@ ; `string'
PUBLIC	??_C@_1CO@LCF@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo@ ; `string'
PUBLIC	??_C@_1FM@IIPM@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf@ ; `string'
PUBLIC	??_C@_1CM@HHOO@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo@ ; `string'
PUBLIC	??_C@_1BO@CMOF@?$AA?$DM?$AAL?$AAa?$AAs?$AAt?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$DO?$AA?$AA@ ; `string'
PUBLIC	??_C@_1O@EDPB@?$AAO?$AAn?$AAl?$AAi?$AAn?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_19IOEA@?$AAA?$AAw?$AAa?$AAy?$AA?$AA@	; `string'
PUBLIC	??_C@_15BPBN@?$AAN?$AAA?$AA?$AA@		; `string'
PUBLIC	??_C@_17BKGP@?$AAD?$AAN?$AAD?$AA?$AA@		; `string'
PUBLIC	??_C@_1BM@HGPL@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAh?$AAa?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@HOLM@?$AAI?$AAn?$AAv?$AAi?$AAs?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
EXTRN	__imp__SendDlgItemMessageW@20:NEAR
;	COMDAT ??_C@_1CE@PANB@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_1CE@PANB@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?$AA@ DB 'A'
	DB	00H, 'c', 00H, 'c', 00H, 'e', 00H, 'p', 00H, 't', 00H, ' ', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'a', 00H, 'l', 00H, 'e'
	DB	00H, 'r', 00H, 't', 00H, 's', 00H, 00H, 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_1FC@JGEG@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAu@
_DATA	SEGMENT
??_C@_1FC@JGEG@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAu@ DB 'I'
	DB	00H, 'g', 00H, 'n', 00H, 'o', 00H, 'r', 00H, 'e', 00H, ' ', 00H
	DB	'a', 00H, 'l', 00H, 'e', 00H, 'r', 00H, 't', 00H, 's', 00H, ' '
	DB	00H, 'f', 00H, 'r', 00H, 'o', 00H, 'm', 00H, ' ', 00H, 'u', 00H
	DB	'n', 00H, 'a', 00H, 'u', 00H, 't', 00H, 'h', 00H, 'o', 00H, 'r'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'c', 00H, 't', 00H, 's'
	DB	00H, 00H, 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_1CE@IMI@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?$AA@
_DATA	SEGMENT
??_C@_1CE@IMI@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?$AA@ DB 'I'
	DB	00H, 'g', 00H, 'n', 00H, 'o', 00H, 'r', 00H, 'e', 00H, ' ', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'a', 00H, 'l', 00H, 'e'
	DB	00H, 'r', 00H, 't', 00H, 's', 00H, 00H, 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BM@GOL@?$AAA?$AAl?$AAw?$AAa?$AAy?$AAs?$AA?5?$AAa?$AAs?$AAk?$AA?5?$AAm?$AAe?$AA?$AA@
_DATA	SEGMENT
??_C@_1BM@GOL@?$AAA?$AAl?$AAw?$AAa?$AAy?$AAs?$AA?5?$AAa?$AAs?$AAk?$AA?5?$AAm?$AAe?$AA?$AA@ DB 'A'
	DB	00H, 'l', 00H, 'w', 00H, 'a', 00H, 'y', 00H, 's', 00H, ' ', 00H
	DB	'a', 00H, 's', 00H, 'k', 00H, ' ', 00H, 'm', 00H, 'e', 00H, 00H
	DB	00H						; `string'
_DATA	ENDS
;	COMDAT ??_C@_1FI@HENN@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf@
_DATA	SEGMENT
??_C@_1FI@HENN@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf@ DB 'A'
	DB	00H, 'c', 00H, 'c', 00H, 'e', 00H, 'p', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'v', 00H, 'i', 00H, 't', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H, ' ', 00H, 'f', 00H
	DB	'r', 00H, 'o', 00H, 'm', 00H, ' ', 00H, 'a', 00H, 'u', 00H, 't'
	DB	00H, 'h', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a'
	DB	00H, 'c', 00H, 't', 00H, 's', 00H, 00H, 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_1CO@LCF@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo@
_DATA	SEGMENT
??_C@_1CO@LCF@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo@ DB 'A'
	DB	00H, 'c', 00H, 'c', 00H, 'e', 00H, 'p', 00H, 't', 00H, ' ', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'v'
	DB	00H, 'i', 00H, 't', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, 's', 00H, 00H, 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_1FM@IIPM@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf@
_DATA	SEGMENT
??_C@_1FM@IIPM@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf@ DB 'I'
	DB	00H, 'g', 00H, 'n', 00H, 'o', 00H, 'r', 00H, 'e', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'v', 00H, 'i', 00H, 't', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H, ' ', 00H, 'f', 00H
	DB	'r', 00H, 'o', 00H, 'm', 00H, ' ', 00H, 'u', 00H, 'n', 00H, 'a'
	DB	00H, 'u', 00H, 't', 00H, 'h', 00H, 'o', 00H, 'r', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 'a', 00H, 'c', 00H, 't', 00H, 's', 00H, 00H, 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_1CM@HHOO@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo@
_DATA	SEGMENT
??_C@_1CM@HHOO@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo@ DB 'I'
	DB	00H, 'g', 00H, 'n', 00H, 'o', 00H, 'r', 00H, 'e', 00H, ' ', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'v'
	DB	00H, 'i', 00H, 't', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, 00H, 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BO@CMOF@?$AA?$DM?$AAL?$AAa?$AAs?$AAt?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$DO?$AA?$AA@
_DATA	SEGMENT
??_C@_1BO@CMOF@?$AA?$DM?$AAL?$AAa?$AAs?$AAt?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$DO?$AA?$AA@ DB '<'
	DB	00H, 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, ' ', 00H, 'm', 00H
	DB	'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '>'
	DB	00H, 00H, 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_1O@EDPB@?$AAO?$AAn?$AAl?$AAi?$AAn?$AAe?$AA?$AA@
_DATA	SEGMENT
??_C@_1O@EDPB@?$AAO?$AAn?$AAl?$AAi?$AAn?$AAe?$AA?$AA@ DB 'O', 00H, 'n', 00H
	DB	'l', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 00H, 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_19IOEA@?$AAA?$AAw?$AAa?$AAy?$AA?$AA@
_DATA	SEGMENT
??_C@_19IOEA@?$AAA?$AAw?$AAa?$AAy?$AA?$AA@ DB 'A', 00H, 'w', 00H, 'a', 00H
	DB	'y', 00H, 00H, 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_15BPBN@?$AAN?$AAA?$AA?$AA@
_DATA	SEGMENT
??_C@_15BPBN@?$AAN?$AAA?$AA?$AA@ DB 'N', 00H, 'A', 00H, 00H, 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_17BKGP@?$AAD?$AAN?$AAD?$AA?$AA@
_DATA	SEGMENT
??_C@_17BKGP@?$AAD?$AAN?$AAD?$AA?$AA@ DB 'D', 00H, 'N', 00H, 'D', 00H, 00H
	DB	00H						; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BM@HGPL@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAh?$AAa?$AAt?$AA?$AA@
_DATA	SEGMENT
??_C@_1BM@HGPL@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAh?$AAa?$AAt?$AA?$AA@ DB 'F'
	DB	00H, 'r', 00H, 'e', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 't', 00H, 00H
	DB	00H						; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BE@HOLM@?$AAI?$AAn?$AAv?$AAi?$AAs?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT
??_C@_1BE@HOLM@?$AAI?$AAn?$AAv?$AAi?$AAs?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'i', 00H, 'b', 00H
	DB	'l', 00H, 'e', 00H, 00H, 00H			; `string'
_DATA	ENDS
;	COMDAT _TlenBasicOptDlgProc@16
_TEXT	SEGMENT
_cws$86017 = -20
_cgs$86024 = -32
_cws$86030 = -20
_cws$86037 = -20
_cws$86044 = -20
_cws$86051 = -20
_cws$86058 = -20
_cws$86065 = -20
_cws$86072 = -20
_cws$86079 = -20
_cws$86086 = -20
_cws$86093 = -20
_cws$86100 = -20
_cws$86107 = -20
_cws$86114 = -20
_hwndDlg$ = 8
_msg$ = 12
_wParam$ = 16
_lParam$ = 20
_text$ = -304
_proto$ = -48
_dbv$85115 = -44
_reconnectRequired$85217 = 20
_dbv$85218 = -44
_cgs$85961 = -32
_cgs$85972 = -32
_dbv$85981 = -12
_cgs$85982 = -32
_cgs$85991 = -32
_cws$86000 = -20
_cgs$86008 = -32
_TlenBasicOptDlgProc@16 PROC NEAR			; COMDAT

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 30 01 00
	00		 sub	 esp, 304		; 00000130H
  00009	53		 push	 ebx

; 213  : 	char text[256];
; 214  : 	WNDPROC oldProc;
; 215  : 
; 216  :     TlenProtocol *proto = (TlenProtocol *)GetWindowLong(hwndDlg, GWL_USERDATA);

  0000a	8b 5d 08	 mov	 ebx, DWORD PTR _hwndDlg$[ebp]
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	6a eb		 push	 -21			; ffffffebH
  00011	53		 push	 ebx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongW@8
  00018	8b f8		 mov	 edi, eax

; 217  : 	switch (msg) {

  0001a	8b 45 0c	 mov	 eax, DWORD PTR _msg$[ebp]
  0001d	83 e8 4e	 sub	 eax, 78			; 0000004eH
  00020	89 7d d0	 mov	 DWORD PTR _proto$[ebp], edi
  00023	0f 84 08 05 00
	00		 je	 $L85210
  00029	2d c2 00 00 00	 sub	 eax, 194		; 000000c2H
  0002e	0f 84 af 00 00
	00		 je	 $L85114
  00034	48		 dec	 eax
  00035	0f 85 02 05 00
	00		 jne	 $L85213

; 271  : 		}
; 272  : 	case WM_COMMAND:
; 273  : 		switch (LOWORD(wParam)) {

  0003b	8b 75 10	 mov	 esi, DWORD PTR _wParam$[ebp]
  0003e	0f b7 c6	 movzx	 eax, si
  00041	05 17 fc ff ff	 add	 eax, -1001		; fffffc17H
  00046	83 f8 37	 cmp	 eax, 55			; 00000037H
  00049	77 55		 ja	 SHORT $L85209
  0004b	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $L86123[eax]
  00052	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L86124[eax*4]
$L85194:

; 274  : 		case IDC_EDIT_USERNAME:
; 275  : 		case IDC_EDIT_PASSWORD:
; 276  : 			if ((HWND)lParam==GetFocus() && HIWORD(wParam)==EN_CHANGE)

  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  0005f	39 45 14	 cmp	 DWORD PTR _lParam$[ebp], eax
  00062	0f 85 d5 04 00
	00		 jne	 $L85213
  00068	c1 ee 10	 shr	 esi, 16			; 00000010H
  0006b	66 81 fe 00 03	 cmp	 si, 768			; 00000300H
  00070	0f 85 c7 04 00
	00		 jne	 $L85213

; 277  : 				SendMessage(GetParent(hwndDlg), PSM_CHANGED, 0, 0);

  00076	6a 00		 push	 0
  00078	6a 00		 push	 0
  0007a	68 68 04 00 00	 push	 1128			; 00000468H
  0007f	53		 push	 ebx
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00086	50		 push	 eax
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageW@16

; 278  : 			break;

  0008d	e9 ab 04 00 00	 jmp	 $L85213
$L85200:

; 279  : 			// Fall through
; 280  : 		case IDC_SAVEPASSWORD:
; 281  : 		case IDC_RECONNECT:
; 282  : 		case IDC_ROSTER_SYNC:
; 283  : 		case IDC_IGNORE_ADVERTISEMENTS:
; 284  : 		case IDC_SHOW_OFFLINE:
; 285  : 		case IDC_OFFLINE_MESSAGE:
; 286  : 			MarkChanges(1, hwndDlg);
; 287  : 			break;
; 288  : 		case IDC_LOG_ALERTS:
; 289  : 			CheckDlgButton(hwndDlg, IDC_NUDGE_SUPPORT, BST_UNCHECKED);

  00092	6a 00		 push	 0
  00094	68 f8 03 00 00	 push	 1016			; 000003f8H
$L86122:
  00099	53		 push	 ebx
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CheckDlgButton@12
$L85209:
  000a0	53		 push	 ebx
  000a1	6a 01		 push	 1
  000a3	e8 00 00 00 00	 call	 _MarkChanges
  000a8	59		 pop	 ecx
  000a9	59		 pop	 ecx
  000aa	e9 8e 04 00 00	 jmp	 $L85213
$L85201:

; 290  : 			MarkChanges(1, hwndDlg);
; 291  : 			break;
; 292  : 		case IDC_NUDGE_SUPPORT:
; 293  : 			CheckDlgButton(hwndDlg, IDC_LOG_ALERTS, BST_UNCHECKED);

  000af	6a 00		 push	 0
  000b1	68 f9 03 00 00	 push	 1017			; 000003f9H

; 294  : 			MarkChanges(1, hwndDlg);
; 295  : 			break;

  000b6	eb e1		 jmp	 SHORT $L86122
$L85202:

; 296  : 		case IDC_REGISTERACCOUNT:
; 297  : 		    CallService(MS_UTILS_OPENURL, (WPARAM) 1, (LPARAM) TLEN_REGISTER);

  000b8	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000bd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@BMBE@http?3?1?1reg?4tlen?4pl?1?$AA@ ; `string'
  000c2	6a 01		 push	 1
  000c4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@EHKK@Utils?1OpenURL?$AA@ ; `string'
  000c9	ff 50 24	 call	 DWORD PTR [eax+36]
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 298  : 		    break;

  000cf	e9 69 04 00 00	 jmp	 $L85213
$L85205:

; 299  : 		case IDC_OFFLINE_MESSAGE_OPTION:
; 300  : 		case IDC_ALERT_POLICY:
; 301  : 		case IDC_MUC_POLICY:
; 302  : 			if (HIWORD(wParam) == CBN_SELCHANGE)

  000d4	c1 ee 10	 shr	 esi, 16			; 00000010H
  000d7	66 83 fe 01	 cmp	 si, 1
  000db	0f 85 5c 04 00
	00		 jne	 $L85213

; 303  : 				MarkChanges(1, hwndDlg);
; 304  : 			break;

  000e1	eb bd		 jmp	 SHORT $L85209
$L85114:

; 218  : 	case WM_INITDIALOG:
; 219  : 		{
; 220  : 			DBVARIANT dbv;
; 221  : 			proto = (TlenProtocol *)lParam;
; 222  :             SetWindowLong(hwndDlg, GWL_USERDATA, (LONG)proto);

  000e3	8b 75 14	 mov	 esi, DWORD PTR _lParam$[ebp]
  000e6	56		 push	 esi
  000e7	6a eb		 push	 -21			; ffffffebH
  000e9	53		 push	 ebx
  000ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongW@12

; 223  : 			TranslateDialogDefault(hwndDlg);

  000f0	53		 push	 ebx
  000f1	e8 00 00 00 00	 call	 _TranslateDialogDefault

; 224  : 			if (!DBGetContactSettingTString(NULL, proto->iface.m_szModuleName, "LoginName", &dbv)) {

  000f6	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  000f9	33 ff		 xor	 edi, edi
  000fb	89 45 e0	 mov	 DWORD PTR _cgs$85961[ebp], eax
  000fe	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85115[ebp]
  00101	89 45 e8	 mov	 DWORD PTR _cgs$85961[ebp+8], eax
  00104	8d 45 e0	 lea	 eax, DWORD PTR _cgs$85961[ebp]
  00107	50		 push	 eax
  00108	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0010d	57		 push	 edi
  0010e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@BEPM@DB?1Contact?1GetSettingStr?$AA@ ; `string'
  00113	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cgs$85961[ebp+4], OFFSET FLAT:??_C@_09ONOL@LoginName?$AA@ ; `string'
  0011a	c6 45 d4 fc	 mov	 BYTE PTR _dbv$85115[ebp], 252 ; 000000fcH
  0011e	ff 50 24	 call	 DWORD PTR [eax+36]
  00121	83 c4 10	 add	 esp, 16			; 00000010H
  00124	85 c0		 test	 eax, eax
  00126	75 24		 jne	 SHORT $L85967

; 225  : 				SetDlgItemText(hwndDlg, IDC_EDIT_USERNAME, dbv.ptszVal);

  00128	ff 75 d8	 push	 DWORD PTR _dbv$85115[ebp+4]
  0012b	68 e9 03 00 00	 push	 1001			; 000003e9H
  00130	53		 push	 ebx
  00131	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextW@12

; 226  : 				DBFreeVariant(&dbv);

  00137	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85115[ebp]
  0013a	50		 push	 eax
  0013b	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00140	57		 push	 edi
  00141	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  00146	ff 50 24	 call	 DWORD PTR [eax+36]
  00149	83 c4 0c	 add	 esp, 12			; 0000000cH
$L85967:

; 227  : 			}
; 228  : 			if (!DBGetContactSetting(NULL, proto->iface.m_szModuleName, "Password", &dbv)) {

  0014c	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0014f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cgs$85972[ebp+4], OFFSET FLAT:??_C@_08NKKK@Password?$AA@ ; `string'
  00156	89 45 e0	 mov	 DWORD PTR _cgs$85972[ebp], eax
  00159	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85115[ebp]
  0015c	89 45 e8	 mov	 DWORD PTR _cgs$85972[ebp+8], eax
  0015f	8d 45 e0	 lea	 eax, DWORD PTR _cgs$85972[ebp]
  00162	50		 push	 eax
  00163	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00168	57		 push	 edi
  00169	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  0016e	ff 50 24	 call	 DWORD PTR [eax+36]
  00171	83 c4 0c	 add	 esp, 12			; 0000000cH
  00174	85 c0		 test	 eax, eax
  00176	75 45		 jne	 SHORT $L85977

; 229  : 				CallService(MS_DB_CRYPT_DECODESTRING, strlen(dbv.pszVal)+1, (LPARAM) dbv.pszVal);

  00178	ff 75 d8	 push	 DWORD PTR _dbv$85115[ebp+4]
  0017b	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00180	ff 75 d8	 push	 DWORD PTR _dbv$85115[ebp+4]
  00183	8d 78 24	 lea	 edi, DWORD PTR [eax+36]
  00186	e8 00 00 00 00	 call	 _strlen
  0018b	59		 pop	 ecx
  0018c	40		 inc	 eax
  0018d	50		 push	 eax
  0018e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@PHIF@DB?1Crypt?1DecodeString?$AA@ ; `string'
  00193	ff 17		 call	 DWORD PTR [edi]
  00195	83 c4 0c	 add	 esp, 12			; 0000000cH

; 230  : 				SetDlgItemTextA(hwndDlg, IDC_EDIT_PASSWORD, dbv.pszVal);

  00198	ff 75 d8	 push	 DWORD PTR _dbv$85115[ebp+4]
  0019b	68 eb 03 00 00	 push	 1003			; 000003ebH
  001a0	53		 push	 ebx
  001a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 231  : 				DBFreeVariant(&dbv);

  001a7	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85115[ebp]
  001aa	50		 push	 eax
  001ab	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001b0	6a 00		 push	 0
  001b2	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  001b7	ff 50 24	 call	 DWORD PTR [eax+36]
  001ba	83 c4 0c	 add	 esp, 12			; 0000000cH
$L85977:

; 232  : 			}
; 233  : 			CheckDlgButton(hwndDlg, IDC_SAVEPASSWORD, DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "SavePassword", TRUE));

  001bd	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  001c0	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cgs$85982[ebp+4], OFFSET FLAT:??_C@_0N@BEAN@SavePassword?$AA@ ; `string'
  001c7	89 45 e0	 mov	 DWORD PTR _cgs$85982[ebp], eax
  001ca	8d 45 f4	 lea	 eax, DWORD PTR _dbv$85981[ebp]
  001cd	89 45 e8	 mov	 DWORD PTR _cgs$85982[ebp+8], eax
  001d0	8d 45 e0	 lea	 eax, DWORD PTR _cgs$85982[ebp]
  001d3	50		 push	 eax
  001d4	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001d9	6a 00		 push	 0
  001db	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  001e0	ff 50 24	 call	 DWORD PTR [eax+36]
  001e3	83 c4 0c	 add	 esp, 12			; 0000000cH
  001e6	85 c0		 test	 eax, eax
  001e8	74 05		 je	 SHORT $L85983
  001ea	6a 01		 push	 1
  001ec	58		 pop	 eax
  001ed	eb 04		 jmp	 SHORT $L85980
$L85983:
  001ef	0f b6 45 f8	 movzx	 eax, BYTE PTR _dbv$85981[ebp+4]
$L85980:
  001f3	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__CheckDlgButton@12
  001f9	50		 push	 eax
  001fa	68 18 04 00 00	 push	 1048			; 00000418H
  001ff	53		 push	 ebx
  00200	ff d7		 call	 edi

; 234  : 
; 235  : 			CheckDlgButton(hwndDlg, IDC_RECONNECT, proto->tlenOptions.reconnect);

  00202	ff b6 b8 01 00
	00		 push	 DWORD PTR [esi+440]
  00208	68 1a 04 00 00	 push	 1050			; 0000041aH
  0020d	53		 push	 ebx
  0020e	ff d7		 call	 edi

; 236  : 			CheckDlgButton(hwndDlg, IDC_ROSTER_SYNC, proto->tlenOptions.rosterSync);

  00210	ff b6 bc 01 00
	00		 push	 DWORD PTR [esi+444]
  00216	68 1c 04 00 00	 push	 1052			; 0000041cH
  0021b	53		 push	 ebx
  0021c	ff d7		 call	 edi

; 237  : 			CheckDlgButton(hwndDlg, IDC_SHOW_OFFLINE, proto->tlenOptions.offlineAsInvisible);

  0021e	ff b6 c0 01 00
	00		 push	 DWORD PTR [esi+448]
  00224	68 f4 03 00 00	 push	 1012			; 000003f4H
  00229	53		 push	 ebx
  0022a	ff d7		 call	 edi

; 238  : 			CheckDlgButton(hwndDlg, IDC_OFFLINE_MESSAGE, proto->tlenOptions.leaveOfflineMessage);

  0022c	ff b6 c4 01 00
	00		 push	 DWORD PTR [esi+452]
  00232	68 f5 03 00 00	 push	 1013			; 000003f5H
  00237	53		 push	 ebx
  00238	ff d7		 call	 edi

; 239  : 			CheckDlgButton(hwndDlg, IDC_IGNORE_ADVERTISEMENTS, proto->tlenOptions.ignoreAdvertisements);

  0023a	ff b6 cc 01 00
	00		 push	 DWORD PTR [esi+460]
  00240	68 20 04 00 00	 push	 1056			; 00000420H
  00245	53		 push	 ebx
  00246	ff d7		 call	 edi

; 240  : 			CheckDlgButton(hwndDlg, IDC_AVATARS, proto->tlenOptions.enableAvatars);

  00248	ff b6 dc 01 00
	00		 push	 DWORD PTR [esi+476]
  0024e	68 21 04 00 00	 push	 1057			; 00000421H
  00253	53		 push	 ebx
  00254	ff d7		 call	 edi

; 241  : 			CheckDlgButton(hwndDlg, IDC_VERSIONINFO, proto->tlenOptions.enableVersion);

  00256	ff b6 e0 01 00
	00		 push	 DWORD PTR [esi+480]
  0025c	68 22 04 00 00	 push	 1058			; 00000422H
  00261	53		 push	 ebx
  00262	ff d7		 call	 edi

; 242  : 			CheckDlgButton(hwndDlg, IDC_NUDGE_SUPPORT, proto->tlenOptions.useNudge);

  00264	ff b6 e4 01 00
	00		 push	 DWORD PTR [esi+484]
  0026a	68 f8 03 00 00	 push	 1016			; 000003f8H
  0026f	53		 push	 ebx
  00270	ff d7		 call	 edi

; 243  : 			CheckDlgButton(hwndDlg, IDC_LOG_ALERTS, proto->tlenOptions.logAlerts);

  00272	ff b6 e8 01 00
	00		 push	 DWORD PTR [esi+488]
  00278	68 f9 03 00 00	 push	 1017			; 000003f9H
  0027d	53		 push	 ebx
  0027e	ff d7		 call	 edi

; 244  : 
; 245  : 			SendDlgItemMessage(hwndDlg, IDC_ALERT_POLICY, CB_ADDSTRING, 0, (LPARAM)TranslateT("Accept all alerts"));

  00280	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00285	bb 00 10 00 00	 mov	 ebx, 4096		; 00001000H
  0028a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1CE@PANB@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?$AA@ ; `string'
  0028f	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  00294	53		 push	 ebx
  00295	57		 push	 edi
  00296	ff 50 24	 call	 DWORD PTR [eax+36]
  00299	83 c4 0c	 add	 esp, 12			; 0000000cH
  0029c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__SendDlgItemMessageW@20
  002a2	50		 push	 eax
  002a3	6a 00		 push	 0
  002a5	68 43 01 00 00	 push	 323			; 00000143H
  002aa	68 1d 04 00 00	 push	 1053			; 0000041dH
  002af	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  002b2	ff d6		 call	 esi

; 246  : 			SendDlgItemMessage(hwndDlg, IDC_ALERT_POLICY, CB_ADDSTRING, 0, (LPARAM)TranslateT("Ignore alerts from unauthorized contacts"));

  002b4	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  002b9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1FC@JGEG@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAu@ ; `string'
  002be	53		 push	 ebx
  002bf	57		 push	 edi
  002c0	ff 50 24	 call	 DWORD PTR [eax+36]
  002c3	83 c4 0c	 add	 esp, 12			; 0000000cH
  002c6	50		 push	 eax
  002c7	6a 00		 push	 0
  002c9	68 43 01 00 00	 push	 323			; 00000143H
  002ce	68 1d 04 00 00	 push	 1053			; 0000041dH
  002d3	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  002d6	ff d6		 call	 esi

; 247  : 			SendDlgItemMessage(hwndDlg, IDC_ALERT_POLICY, CB_ADDSTRING, 0, (LPARAM)TranslateT("Ignore all alerts"));

  002d8	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  002dd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1CE@IMI@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAl?$AAe?$AAr?$AAt?$AAs?$AA?$AA@ ; `string'
  002e2	53		 push	 ebx
  002e3	57		 push	 edi
  002e4	ff 50 24	 call	 DWORD PTR [eax+36]
  002e7	83 c4 0c	 add	 esp, 12			; 0000000cH
  002ea	50		 push	 eax
  002eb	6a 00		 push	 0
  002ed	68 43 01 00 00	 push	 323			; 00000143H
  002f2	68 1d 04 00 00	 push	 1053			; 0000041dH
  002f7	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  002fa	ff d6		 call	 esi

; 248  : 			SendDlgItemMessage(hwndDlg, IDC_ALERT_POLICY, CB_SETCURSEL, proto->tlenOptions.alertPolicy, 0);

  002fc	6a 00		 push	 0
  002fe	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  00301	ff b0 d0 01 00
	00		 push	 DWORD PTR [eax+464]
  00307	68 4e 01 00 00	 push	 334			; 0000014eH
  0030c	68 1d 04 00 00	 push	 1053			; 0000041dH
  00311	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00314	ff d6		 call	 esi

; 249  : 
; 250  : 			SendDlgItemMessage(hwndDlg, IDC_MUC_POLICY, CB_ADDSTRING, 0, (LPARAM)TranslateT("Always ask me"));

  00316	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0031b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1BM@GOL@?$AAA?$AAl?$AAw?$AAa?$AAy?$AAs?$AA?5?$AAa?$AAs?$AAk?$AA?5?$AAm?$AAe?$AA?$AA@ ; `string'
  00320	53		 push	 ebx
  00321	57		 push	 edi
  00322	ff 50 24	 call	 DWORD PTR [eax+36]
  00325	83 c4 0c	 add	 esp, 12			; 0000000cH
  00328	50		 push	 eax
  00329	6a 00		 push	 0
  0032b	68 43 01 00 00	 push	 323			; 00000143H
  00330	68 1e 04 00 00	 push	 1054			; 0000041eH
  00335	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00338	ff d6		 call	 esi

; 251  : 			SendDlgItemMessage(hwndDlg, IDC_MUC_POLICY, CB_ADDSTRING, 0, (LPARAM)TranslateT("Accept invitations from authorized contacts"));

  0033a	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0033f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1FI@HENN@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf@ ; `string'
  00344	53		 push	 ebx
  00345	57		 push	 edi
  00346	ff 50 24	 call	 DWORD PTR [eax+36]
  00349	83 c4 0c	 add	 esp, 12			; 0000000cH
  0034c	50		 push	 eax
  0034d	6a 00		 push	 0
  0034f	68 43 01 00 00	 push	 323			; 00000143H
  00354	68 1e 04 00 00	 push	 1054			; 0000041eH
  00359	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  0035c	ff d6		 call	 esi

; 252  : 			SendDlgItemMessage(hwndDlg, IDC_MUC_POLICY, CB_ADDSTRING, 0, (LPARAM)TranslateT("Accept all invitations"));

  0035e	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00363	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1CO@LCF@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo@ ; `string'
  00368	53		 push	 ebx
  00369	57		 push	 edi
  0036a	ff 50 24	 call	 DWORD PTR [eax+36]
  0036d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00370	50		 push	 eax
  00371	6a 00		 push	 0
  00373	68 43 01 00 00	 push	 323			; 00000143H
  00378	68 1e 04 00 00	 push	 1054			; 0000041eH
  0037d	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00380	ff d6		 call	 esi

; 253  : 			SendDlgItemMessage(hwndDlg, IDC_MUC_POLICY, CB_ADDSTRING, 0, (LPARAM)TranslateT("Ignore invitations from unauthorized contacts"));

  00382	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00387	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1FM@IIPM@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf@ ; `string'
  0038c	53		 push	 ebx
  0038d	57		 push	 edi
  0038e	ff 50 24	 call	 DWORD PTR [eax+36]
  00391	83 c4 0c	 add	 esp, 12			; 0000000cH
  00394	50		 push	 eax
  00395	6a 00		 push	 0
  00397	68 43 01 00 00	 push	 323			; 00000143H
  0039c	68 1e 04 00 00	 push	 1054			; 0000041eH
  003a1	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  003a4	ff d6		 call	 esi

; 254  : 			SendDlgItemMessage(hwndDlg, IDC_MUC_POLICY, CB_ADDSTRING, 0, (LPARAM)TranslateT("Ignore all invitation"));

  003a6	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  003ab	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1CM@HHOO@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo@ ; `string'
  003b0	53		 push	 ebx
  003b1	57		 push	 edi
  003b2	ff 50 24	 call	 DWORD PTR [eax+36]
  003b5	83 c4 0c	 add	 esp, 12			; 0000000cH
  003b8	50		 push	 eax
  003b9	6a 00		 push	 0
  003bb	68 43 01 00 00	 push	 323			; 00000143H
  003c0	68 1e 04 00 00	 push	 1054			; 0000041eH
  003c5	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  003c8	ff d6		 call	 esi

; 255  : 			SendDlgItemMessage(hwndDlg, IDC_MUC_POLICY, CB_SETCURSEL, proto->tlenOptions.groupChatPolicy, 0);

  003ca	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  003cd	6a 00		 push	 0
  003cf	ff b0 d4 01 00
	00		 push	 DWORD PTR [eax+468]
  003d5	68 4e 01 00 00	 push	 334			; 0000014eH
  003da	68 1e 04 00 00	 push	 1054			; 0000041eH
  003df	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  003e2	ff d6		 call	 esi

; 256  : 
; 257  : 			SendDlgItemMessage(hwndDlg, IDC_OFFLINE_MESSAGE_OPTION, CB_ADDSTRING, 0, (LPARAM)TranslateT("<Last message>"));

  003e4	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  003e9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1BO@CMOF@?$AA?$DM?$AAL?$AAa?$AAs?$AAt?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$DO?$AA?$AA@ ; `string'
  003ee	53		 push	 ebx
  003ef	57		 push	 edi
  003f0	ff 50 24	 call	 DWORD PTR [eax+36]
  003f3	83 c4 0c	 add	 esp, 12			; 0000000cH
  003f6	50		 push	 eax
  003f7	6a 00		 push	 0
  003f9	68 43 01 00 00	 push	 323			; 00000143H
  003fe	68 f6 03 00 00	 push	 1014			; 000003f6H
  00403	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00406	ff d6		 call	 esi

; 258  : 	        //SendDlgItemMessage(hwndDlg, IDC_OFFLINE_MESSAGE_OPTION, CB_ADDSTRING, 0, (LPARAM)TranslateT("<Ask me>"));
; 259  : 	        SendDlgItemMessage(hwndDlg, IDC_OFFLINE_MESSAGE_OPTION, CB_ADDSTRING, 0, (LPARAM)TranslateT("Online"));

  00408	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0040d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1O@EDPB@?$AAO?$AAn?$AAl?$AAi?$AAn?$AAe?$AA?$AA@ ; `string'
  00412	53		 push	 ebx
  00413	57		 push	 edi
  00414	ff 50 24	 call	 DWORD PTR [eax+36]
  00417	83 c4 0c	 add	 esp, 12			; 0000000cH
  0041a	50		 push	 eax
  0041b	6a 00		 push	 0
  0041d	68 43 01 00 00	 push	 323			; 00000143H
  00422	68 f6 03 00 00	 push	 1014			; 000003f6H
  00427	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  0042a	ff d6		 call	 esi

; 260  : 	        SendDlgItemMessage(hwndDlg, IDC_OFFLINE_MESSAGE_OPTION, CB_ADDSTRING, 0, (LPARAM)TranslateT("Away"));

  0042c	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00431	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_19IOEA@?$AAA?$AAw?$AAa?$AAy?$AA?$AA@ ; `string'
  00436	53		 push	 ebx
  00437	57		 push	 edi
  00438	ff 50 24	 call	 DWORD PTR [eax+36]
  0043b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0043e	50		 push	 eax
  0043f	6a 00		 push	 0
  00441	68 43 01 00 00	 push	 323			; 00000143H
  00446	68 f6 03 00 00	 push	 1014			; 000003f6H
  0044b	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  0044e	ff d6		 call	 esi

; 261  : 	        SendDlgItemMessage(hwndDlg, IDC_OFFLINE_MESSAGE_OPTION, CB_ADDSTRING, 0, (LPARAM)TranslateT("NA"));

  00450	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00455	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_15BPBN@?$AAN?$AAA?$AA?$AA@ ; `string'
  0045a	53		 push	 ebx
  0045b	57		 push	 edi
  0045c	ff 50 24	 call	 DWORD PTR [eax+36]
  0045f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00462	50		 push	 eax
  00463	6a 00		 push	 0
  00465	68 43 01 00 00	 push	 323			; 00000143H
  0046a	68 f6 03 00 00	 push	 1014			; 000003f6H
  0046f	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00472	ff d6		 call	 esi

; 262  : 	        SendDlgItemMessage(hwndDlg, IDC_OFFLINE_MESSAGE_OPTION, CB_ADDSTRING, 0, (LPARAM)TranslateT("DND"));

  00474	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00479	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_17BKGP@?$AAD?$AAN?$AAD?$AA?$AA@ ; `string'
  0047e	53		 push	 ebx
  0047f	57		 push	 edi
  00480	ff 50 24	 call	 DWORD PTR [eax+36]
  00483	83 c4 0c	 add	 esp, 12			; 0000000cH
  00486	50		 push	 eax
  00487	6a 00		 push	 0
  00489	68 43 01 00 00	 push	 323			; 00000143H
  0048e	68 f6 03 00 00	 push	 1014			; 000003f6H
  00493	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00496	ff d6		 call	 esi

; 263  : 	        SendDlgItemMessage(hwndDlg, IDC_OFFLINE_MESSAGE_OPTION, CB_ADDSTRING, 0, (LPARAM)TranslateT("Free for chat"));

  00498	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0049d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1BM@HGPL@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAh?$AAa?$AAt?$AA?$AA@ ; `string'
  004a2	53		 push	 ebx
  004a3	57		 push	 edi
  004a4	ff 50 24	 call	 DWORD PTR [eax+36]
  004a7	83 c4 0c	 add	 esp, 12			; 0000000cH
  004aa	50		 push	 eax
  004ab	6a 00		 push	 0
  004ad	68 43 01 00 00	 push	 323			; 00000143H
  004b2	68 f6 03 00 00	 push	 1014			; 000003f6H
  004b7	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  004ba	ff d6		 call	 esi

; 264  : 	        SendDlgItemMessage(hwndDlg, IDC_OFFLINE_MESSAGE_OPTION, CB_ADDSTRING, 0, (LPARAM)TranslateT("Invisible"));

  004bc	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  004c1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1BE@HOLM@?$AAI?$AAn?$AAv?$AAi?$AAs?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
  004c6	53		 push	 ebx
  004c7	57		 push	 edi
  004c8	ff 50 24	 call	 DWORD PTR [eax+36]
  004cb	8b 5d 08	 mov	 ebx, DWORD PTR _hwndDlg$[ebp]
  004ce	83 c4 0c	 add	 esp, 12			; 0000000cH
  004d1	bf f6 03 00 00	 mov	 edi, 1014		; 000003f6H
  004d6	50		 push	 eax
  004d7	6a 00		 push	 0
  004d9	68 43 01 00 00	 push	 323			; 00000143H
  004de	57		 push	 edi
  004df	53		 push	 ebx
  004e0	ff d6		 call	 esi

; 265  : 			SendDlgItemMessage(hwndDlg, IDC_OFFLINE_MESSAGE_OPTION, CB_SETCURSEL, proto->tlenOptions.offlineMessageOption, 0);

  004e2	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  004e5	6a 00		 push	 0
  004e7	ff b0 c8 01 00
	00		 push	 DWORD PTR [eax+456]
  004ed	68 4e 01 00 00	 push	 334			; 0000014eH
  004f2	57		 push	 edi
  004f3	53		 push	 ebx
  004f4	ff d6		 call	 esi

; 266  : 
; 267  : 			oldProc = (WNDPROC) GetWindowLong(GetDlgItem(hwndDlg, IDC_EDIT_USERNAME), GWL_WNDPROC);

  004f6	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetDlgItem@8
  004fc	83 c7 f3	 add	 edi, -13		; fffffff3H
  004ff	6a fc		 push	 -4			; fffffffcH
  00501	57		 push	 edi
  00502	53		 push	 ebx
  00503	ff d6		 call	 esi
  00505	50		 push	 eax
  00506	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongW@8

; 268  : 			SetWindowLong(GetDlgItem(hwndDlg, IDC_EDIT_USERNAME), GWL_USERDATA, (LONG) oldProc);

  0050c	50		 push	 eax
  0050d	6a eb		 push	 -21			; ffffffebH
  0050f	57		 push	 edi
  00510	53		 push	 ebx
  00511	ff d6		 call	 esi
  00513	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__SetWindowLongW@12
  00519	50		 push	 eax
  0051a	ff d3		 call	 ebx

; 269  : 			SetWindowLong(GetDlgItem(hwndDlg, IDC_EDIT_USERNAME), GWL_WNDPROC, (LONG) JabberValidateUsernameWndProc);

  0051c	68 00 00 00 00	 push	 OFFSET FLAT:_JabberValidateUsernameWndProc@16
  00521	6a fc		 push	 -4			; fffffffcH
  00523	57		 push	 edi
  00524	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00527	ff d6		 call	 esi
  00529	50		 push	 eax
  0052a	ff d3		 call	 ebx

; 270  : 			return TRUE;

  0052c	e9 b0 04 00 00	 jmp	 $L86120
$L85210:

; 305  : 		default:
; 306  : 			MarkChanges(1, hwndDlg);
; 307  : 			break;
; 308  : 		}
; 309  : 		break;
; 310  : 	case WM_NOTIFY:
; 311  : 		switch (((LPNMHDR) lParam)->code) {

  00531	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  00534	81 78 08 36 ff
	ff ff		 cmp	 DWORD PTR [eax+8], -202	; ffffff36H
  0053b	74 07		 je	 SHORT $L85216
$L85213:

; 351  : 			}
; 352  : 		}
; 353  : 		break;
; 354  : 	}
; 355  : 	return FALSE;

  0053d	33 c0		 xor	 eax, eax
  0053f	e9 a0 04 00 00	 jmp	 $L85105
$L85216:

; 312  : 		case PSN_APPLY:
; 313  : 			{
; 314  : 				BOOL reconnectRequired = FALSE;

  00544	83 65 14 00	 and	 DWORD PTR _reconnectRequired$85217[ebp], 0

; 315  : 				DBVARIANT dbv;
; 316  : 
; 317  : 				GetDlgItemTextA(hwndDlg, IDC_EDIT_USERNAME, text, sizeof(text));

  00548	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  0054e	68 00 01 00 00	 push	 256			; 00000100H
  00553	50		 push	 eax
  00554	68 e9 03 00 00	 push	 1001			; 000003e9H
  00559	53		 push	 ebx
  0055a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 318  : 				if (DBGetContactSetting(NULL, proto->iface.m_szModuleName, "LoginName", &dbv) || strcmp(text, dbv.pszVal))

  00560	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00563	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_09ONOL@LoginName?$AA@ ; `string'
  00568	89 45 e0	 mov	 DWORD PTR _cgs$85991[ebp], eax
  0056b	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85218[ebp]
  0056e	89 45 e8	 mov	 DWORD PTR _cgs$85991[ebp+8], eax
  00571	8d 45 e0	 lea	 eax, DWORD PTR _cgs$85991[ebp]
  00574	50		 push	 eax
  00575	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0057a	6a 00		 push	 0
  0057c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00581	89 75 e4	 mov	 DWORD PTR _cgs$85991[ebp+4], esi
  00584	ff 50 24	 call	 DWORD PTR [eax+36]
  00587	83 c4 0c	 add	 esp, 12			; 0000000cH
  0058a	85 c0		 test	 eax, eax
  0058c	75 15		 jne	 SHORT $L85221
  0058e	ff 75 d8	 push	 DWORD PTR _dbv$85218[ebp+4]
  00591	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00597	50		 push	 eax
  00598	e8 00 00 00 00	 call	 _strcmp
  0059d	59		 pop	 ecx
  0059e	85 c0		 test	 eax, eax
  005a0	59		 pop	 ecx
  005a1	74 07		 je	 SHORT $L85220
$L85221:

; 319  : 					reconnectRequired = TRUE;

  005a3	c7 45 14 01 00
	00 00		 mov	 DWORD PTR _reconnectRequired$85217[ebp], 1
$L85220:

; 320  : 				if (dbv.pszVal != NULL)	DBFreeVariant(&dbv);

  005aa	83 7d d8 00	 cmp	 DWORD PTR _dbv$85218[ebp+4], 0
  005ae	74 16		 je	 SHORT $L85996
  005b0	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85218[ebp]
  005b3	50		 push	 eax
  005b4	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  005b9	6a 00		 push	 0
  005bb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  005c0	ff 50 24	 call	 DWORD PTR [eax+36]
  005c3	83 c4 0c	 add	 esp, 12			; 0000000cH
$L85996:

; 321  : 				DBWriteContactSettingString(NULL, proto->iface.m_szModuleName, "LoginName", strlwr(text));

  005c6	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  005cc	50		 push	 eax
  005cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strlwr
  005d3	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  005d6	80 4d f4 ff	 or	 BYTE PTR _cws$86000[ebp+8], 255 ; 000000ffH
  005da	89 45 f8	 mov	 DWORD PTR _cws$86000[ebp+12], eax
  005dd	8d 45 ec	 lea	 eax, DWORD PTR _cws$86000[ebp]
  005e0	89 75 f0	 mov	 DWORD PTR _cws$86000[ebp+4], esi
  005e3	50		 push	 eax
  005e4	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  005e9	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ ; `string'
  005ee	6a 00		 push	 0
  005f0	56		 push	 esi
  005f1	89 4d ec	 mov	 DWORD PTR _cws$86000[ebp], ecx
  005f4	ff 50 24	 call	 DWORD PTR [eax+36]
  005f7	83 c4 10	 add	 esp, 16			; 00000010H

; 322  : 
; 323  : 				if (IsDlgButtonChecked(hwndDlg, IDC_SAVEPASSWORD)) {

  005fa	68 18 04 00 00	 push	 1048			; 00000418H
  005ff	53		 push	 ebx
  00600	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__IsDlgButtonChecked@8
  00606	ff d3		 call	 ebx
  00608	85 c0		 test	 eax, eax
  0060a	0f 84 bb 00 00
	00		 je	 $L85225

; 324  : 					GetDlgItemTextA(hwndDlg, IDC_EDIT_PASSWORD, text, sizeof(text));

  00610	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00616	68 00 01 00 00	 push	 256			; 00000100H
  0061b	50		 push	 eax
  0061c	68 eb 03 00 00	 push	 1003			; 000003ebH
  00621	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00624	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 325  : 					CallService(MS_DB_CRYPT_ENCODESTRING, sizeof(text), (LPARAM) text);

  0062a	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00630	50		 push	 eax
  00631	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00636	68 00 01 00 00	 push	 256			; 00000100H
  0063b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@PBIB@DB?1Crypt?1EncodeString?$AA@ ; `string'
  00640	ff 50 24	 call	 DWORD PTR [eax+36]

; 326  : 					if (DBGetContactSetting(NULL, proto->iface.m_szModuleName, "Password", &dbv) || strcmp(text, dbv.pszVal))

  00643	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00646	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cgs$86008[ebp+4], OFFSET FLAT:??_C@_08NKKK@Password?$AA@ ; `string'
  0064d	89 45 e0	 mov	 DWORD PTR _cgs$86008[ebp], eax
  00650	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85218[ebp]
  00653	89 45 e8	 mov	 DWORD PTR _cgs$86008[ebp+8], eax
  00656	8d 45 e0	 lea	 eax, DWORD PTR _cgs$86008[ebp]
  00659	50		 push	 eax
  0065a	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0065f	6a 00		 push	 0
  00661	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00666	ff 50 24	 call	 DWORD PTR [eax+36]
  00669	83 c4 18	 add	 esp, 24			; 00000018H
  0066c	85 c0		 test	 eax, eax
  0066e	75 15		 jne	 SHORT $L85229
  00670	ff 75 d8	 push	 DWORD PTR _dbv$85218[ebp+4]
  00673	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00679	50		 push	 eax
  0067a	e8 00 00 00 00	 call	 _strcmp
  0067f	59		 pop	 ecx
  00680	85 c0		 test	 eax, eax
  00682	59		 pop	 ecx
  00683	74 07		 je	 SHORT $L85228
$L85229:

; 327  : 						reconnectRequired = TRUE;

  00685	c7 45 14 01 00
	00 00		 mov	 DWORD PTR _reconnectRequired$85217[ebp], 1
$L85228:

; 328  : 					if (dbv.pszVal != NULL)	DBFreeVariant(&dbv);

  0068c	83 7d d8 00	 cmp	 DWORD PTR _dbv$85218[ebp+4], 0
  00690	74 16		 je	 SHORT $L86013
  00692	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85218[ebp]
  00695	50		 push	 eax
  00696	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0069b	6a 00		 push	 0
  0069d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  006a2	ff 50 24	 call	 DWORD PTR [eax+36]
  006a5	83 c4 0c	 add	 esp, 12			; 0000000cH
$L86013:

; 329  : 					DBWriteContactSettingString(NULL, proto->iface.m_szModuleName, "Password", text);

  006a8	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  006ab	80 4d f4 ff	 or	 BYTE PTR _cws$86017[ebp+8], 255 ; 000000ffH
  006af	89 45 ec	 mov	 DWORD PTR _cws$86017[ebp], eax
  006b2	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  006b8	89 45 f8	 mov	 DWORD PTR _cws$86017[ebp+12], eax
  006bb	8d 45 ec	 lea	 eax, DWORD PTR _cws$86017[ebp]
  006be	50		 push	 eax
  006bf	6a 00		 push	 0
  006c1	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86017[ebp+4], OFFSET FLAT:??_C@_08NKKK@Password?$AA@ ; `string'
  006c8	56		 push	 esi

; 330  : 				}
; 331  : 				else

  006c9	eb 18		 jmp	 SHORT $L86121
$L85225:

; 332  : 					DBDeleteContactSetting(NULL, proto->iface.m_szModuleName, "Password");

  006cb	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  006ce	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cgs$86024[ebp+4], OFFSET FLAT:??_C@_08NKKK@Password?$AA@ ; `string'
  006d5	89 45 e0	 mov	 DWORD PTR _cgs$86024[ebp], eax
  006d8	8d 45 e0	 lea	 eax, DWORD PTR _cgs$86024[ebp]
  006db	50		 push	 eax
  006dc	6a 00		 push	 0
  006de	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@IGCO@DB?1Contact?1DeleteSetting?$AA@ ; `string'
$L86121:
  006e3	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  006e8	ff 50 24	 call	 DWORD PTR [eax+36]
  006eb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 333  : 
; 334  : 				DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "SavePassword", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_SAVEPASSWORD));

  006ee	68 18 04 00 00	 push	 1048			; 00000418H
  006f3	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  006f6	ff d3		 call	 ebx
  006f8	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  006fb	88 45 f8	 mov	 BYTE PTR _cws$86030[ebp+12], al
  006fe	8d 45 ec	 lea	 eax, DWORD PTR _cws$86030[ebp]
  00701	89 4d ec	 mov	 DWORD PTR _cws$86030[ebp], ecx
  00704	50		 push	 eax
  00705	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0070a	6a 00		 push	 0
  0070c	56		 push	 esi
  0070d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86030[ebp+4], OFFSET FLAT:??_C@_0N@BEAN@SavePassword?$AA@ ; `string'
  00714	c6 45 f4 01	 mov	 BYTE PTR _cws$86030[ebp+8], 1
  00718	ff 50 24	 call	 DWORD PTR [eax+36]
  0071b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 335  : 				DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "Reconnect", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_RECONNECT));

  0071e	68 1a 04 00 00	 push	 1050			; 0000041aH
  00723	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00726	ff d3		 call	 ebx
  00728	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  0072b	88 45 f8	 mov	 BYTE PTR _cws$86037[ebp+12], al
  0072e	8d 45 ec	 lea	 eax, DWORD PTR _cws$86037[ebp]
  00731	89 4d ec	 mov	 DWORD PTR _cws$86037[ebp], ecx
  00734	50		 push	 eax
  00735	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0073a	6a 00		 push	 0
  0073c	56		 push	 esi
  0073d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86037[ebp+4], OFFSET FLAT:??_C@_09GDHD@Reconnect?$AA@ ; `string'
  00744	c6 45 f4 01	 mov	 BYTE PTR _cws$86037[ebp+8], 1
  00748	ff 50 24	 call	 DWORD PTR [eax+36]
  0074b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 336  : 				DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "RosterSync", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_ROSTER_SYNC));

  0074e	68 1c 04 00 00	 push	 1052			; 0000041cH
  00753	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00756	ff d3		 call	 ebx
  00758	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  0075b	88 45 f8	 mov	 BYTE PTR _cws$86044[ebp+12], al
  0075e	8d 45 ec	 lea	 eax, DWORD PTR _cws$86044[ebp]
  00761	89 4d ec	 mov	 DWORD PTR _cws$86044[ebp], ecx
  00764	50		 push	 eax
  00765	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0076a	6a 00		 push	 0
  0076c	56		 push	 esi
  0076d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86044[ebp+4], OFFSET FLAT:??_C@_0L@EKFF@RosterSync?$AA@ ; `string'
  00774	c6 45 f4 01	 mov	 BYTE PTR _cws$86044[ebp+8], 1
  00778	ff 50 24	 call	 DWORD PTR [eax+36]
  0077b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 337  : 				DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "OfflineAsInvisible", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_SHOW_OFFLINE));

  0077e	68 f4 03 00 00	 push	 1012			; 000003f4H
  00783	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00786	ff d3		 call	 ebx
  00788	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  0078b	88 45 f8	 mov	 BYTE PTR _cws$86051[ebp+12], al
  0078e	8d 45 ec	 lea	 eax, DWORD PTR _cws$86051[ebp]
  00791	89 4d ec	 mov	 DWORD PTR _cws$86051[ebp], ecx
  00794	50		 push	 eax
  00795	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0079a	6a 00		 push	 0
  0079c	56		 push	 esi
  0079d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86051[ebp+4], OFFSET FLAT:??_C@_0BD@MMNL@OfflineAsInvisible?$AA@ ; `string'
  007a4	c6 45 f4 01	 mov	 BYTE PTR _cws$86051[ebp+8], 1
  007a8	ff 50 24	 call	 DWORD PTR [eax+36]
  007ab	83 c4 0c	 add	 esp, 12			; 0000000cH

; 338  : 				DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "IgnoreAdvertisements", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_IGNORE_ADVERTISEMENTS));

  007ae	68 20 04 00 00	 push	 1056			; 00000420H
  007b3	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  007b6	ff d3		 call	 ebx
  007b8	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  007bb	88 45 f8	 mov	 BYTE PTR _cws$86058[ebp+12], al
  007be	8d 45 ec	 lea	 eax, DWORD PTR _cws$86058[ebp]
  007c1	89 4d ec	 mov	 DWORD PTR _cws$86058[ebp], ecx
  007c4	50		 push	 eax
  007c5	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  007ca	6a 00		 push	 0
  007cc	56		 push	 esi
  007cd	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86058[ebp+4], OFFSET FLAT:??_C@_0BF@FDOK@IgnoreAdvertisements?$AA@ ; `string'
  007d4	c6 45 f4 01	 mov	 BYTE PTR _cws$86058[ebp+8], 1
  007d8	ff 50 24	 call	 DWORD PTR [eax+36]
  007db	83 c4 0c	 add	 esp, 12			; 0000000cH

; 339  : 				DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "LeaveOfflineMessage", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_OFFLINE_MESSAGE));

  007de	68 f5 03 00 00	 push	 1013			; 000003f5H
  007e3	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  007e6	ff d3		 call	 ebx
  007e8	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  007eb	88 45 f8	 mov	 BYTE PTR _cws$86065[ebp+12], al
  007ee	8d 45 ec	 lea	 eax, DWORD PTR _cws$86065[ebp]
  007f1	89 4d ec	 mov	 DWORD PTR _cws$86065[ebp], ecx
  007f4	50		 push	 eax
  007f5	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  007fa	6a 00		 push	 0
  007fc	56		 push	 esi
  007fd	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86065[ebp+4], OFFSET FLAT:??_C@_0BE@EHOD@LeaveOfflineMessage?$AA@ ; `string'
  00804	c6 45 f4 01	 mov	 BYTE PTR _cws$86065[ebp+8], 1
  00808	ff 50 24	 call	 DWORD PTR [eax+36]
  0080b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 340  : 				DBWriteContactSettingWord(NULL, proto->iface.m_szModuleName, "OfflineMessageOption", (WORD) SendDlgItemMessage(hwndDlg, IDC_OFFLINE_MESSAGE_OPTION, CB_GETCURSEL, 0, 0));

  0080e	6a 00		 push	 0
  00810	6a 00		 push	 0
  00812	68 47 01 00 00	 push	 327			; 00000147H
  00817	68 f6 03 00 00	 push	 1014			; 000003f6H
  0081c	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  0081f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageW@20
  00825	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00828	66 89 45 f8	 mov	 WORD PTR _cws$86072[ebp+12], ax
  0082c	8d 45 ec	 lea	 eax, DWORD PTR _cws$86072[ebp]
  0082f	89 4d ec	 mov	 DWORD PTR _cws$86072[ebp], ecx
  00832	50		 push	 eax
  00833	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00838	6a 00		 push	 0
  0083a	56		 push	 esi
  0083b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86072[ebp+4], OFFSET FLAT:??_C@_0BF@CODL@OfflineMessageOption?$AA@ ; `string'
  00842	c6 45 f4 02	 mov	 BYTE PTR _cws$86072[ebp+8], 2
  00846	ff 50 24	 call	 DWORD PTR [eax+36]
  00849	83 c4 0c	 add	 esp, 12			; 0000000cH

; 341  : 				DBWriteContactSettingWord(NULL, proto->iface.m_szModuleName, "AlertPolicy", (WORD) SendDlgItemMessage(hwndDlg, IDC_ALERT_POLICY, CB_GETCURSEL, 0, 0));

  0084c	6a 00		 push	 0
  0084e	6a 00		 push	 0
  00850	68 47 01 00 00	 push	 327			; 00000147H
  00855	68 1d 04 00 00	 push	 1053			; 0000041dH
  0085a	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  0085d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageW@20
  00863	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00866	66 89 45 f8	 mov	 WORD PTR _cws$86079[ebp+12], ax
  0086a	8d 45 ec	 lea	 eax, DWORD PTR _cws$86079[ebp]
  0086d	89 4d ec	 mov	 DWORD PTR _cws$86079[ebp], ecx
  00870	50		 push	 eax
  00871	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00876	6a 00		 push	 0
  00878	56		 push	 esi
  00879	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86079[ebp+4], OFFSET FLAT:??_C@_0M@NGFL@AlertPolicy?$AA@ ; `string'
  00880	c6 45 f4 02	 mov	 BYTE PTR _cws$86079[ebp+8], 2
  00884	ff 50 24	 call	 DWORD PTR [eax+36]
  00887	83 c4 0c	 add	 esp, 12			; 0000000cH

; 342  : 				DBWriteContactSettingWord(NULL, proto->iface.m_szModuleName, "GroupChatPolicy", (WORD) SendDlgItemMessage(hwndDlg, IDC_MUC_POLICY, CB_GETCURSEL, 0, 0));

  0088a	6a 00		 push	 0
  0088c	6a 00		 push	 0
  0088e	68 47 01 00 00	 push	 327			; 00000147H
  00893	68 1e 04 00 00	 push	 1054			; 0000041eH
  00898	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  0089b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageW@20
  008a1	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  008a4	66 89 45 f8	 mov	 WORD PTR _cws$86086[ebp+12], ax
  008a8	8d 45 ec	 lea	 eax, DWORD PTR _cws$86086[ebp]
  008ab	89 4d ec	 mov	 DWORD PTR _cws$86086[ebp], ecx
  008ae	50		 push	 eax
  008af	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  008b4	6a 00		 push	 0
  008b6	56		 push	 esi
  008b7	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86086[ebp+4], OFFSET FLAT:??_C@_0BA@FJHD@GroupChatPolicy?$AA@ ; `string'
  008be	c6 45 f4 02	 mov	 BYTE PTR _cws$86086[ebp+8], 2
  008c2	ff 50 24	 call	 DWORD PTR [eax+36]
  008c5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 343  : 				DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "EnableAvatars", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_AVATARS));

  008c8	68 21 04 00 00	 push	 1057			; 00000421H
  008cd	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  008d0	ff d3		 call	 ebx
  008d2	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  008d5	88 45 f8	 mov	 BYTE PTR _cws$86093[ebp+12], al
  008d8	8d 45 ec	 lea	 eax, DWORD PTR _cws$86093[ebp]
  008db	89 4d ec	 mov	 DWORD PTR _cws$86093[ebp], ecx
  008de	50		 push	 eax
  008df	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  008e4	6a 00		 push	 0
  008e6	56		 push	 esi
  008e7	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86093[ebp+4], OFFSET FLAT:??_C@_0O@MNOB@EnableAvatars?$AA@ ; `string'
  008ee	c6 45 f4 01	 mov	 BYTE PTR _cws$86093[ebp+8], 1
  008f2	ff 50 24	 call	 DWORD PTR [eax+36]
  008f5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 344  : 				DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "EnableVersion", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_VERSIONINFO));

  008f8	68 22 04 00 00	 push	 1058			; 00000422H
  008fd	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00900	ff d3		 call	 ebx
  00902	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00905	88 45 f8	 mov	 BYTE PTR _cws$86100[ebp+12], al
  00908	8d 45 ec	 lea	 eax, DWORD PTR _cws$86100[ebp]
  0090b	89 4d ec	 mov	 DWORD PTR _cws$86100[ebp], ecx
  0090e	50		 push	 eax
  0090f	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00914	6a 00		 push	 0
  00916	56		 push	 esi
  00917	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86100[ebp+4], OFFSET FLAT:??_C@_0O@OPHO@EnableVersion?$AA@ ; `string'
  0091e	c6 45 f4 01	 mov	 BYTE PTR _cws$86100[ebp+8], 1
  00922	ff 50 24	 call	 DWORD PTR [eax+36]
  00925	83 c4 0c	 add	 esp, 12			; 0000000cH

; 345  : 				DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "UseNudge", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_NUDGE_SUPPORT));

  00928	68 f8 03 00 00	 push	 1016			; 000003f8H
  0092d	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00930	ff d3		 call	 ebx
  00932	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00935	88 45 f8	 mov	 BYTE PTR _cws$86107[ebp+12], al
  00938	8d 45 ec	 lea	 eax, DWORD PTR _cws$86107[ebp]
  0093b	89 4d ec	 mov	 DWORD PTR _cws$86107[ebp], ecx
  0093e	50		 push	 eax
  0093f	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00944	6a 00		 push	 0
  00946	56		 push	 esi
  00947	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86107[ebp+4], OFFSET FLAT:??_C@_08KGPM@UseNudge?$AA@ ; `string'
  0094e	c6 45 f4 01	 mov	 BYTE PTR _cws$86107[ebp+8], 1
  00952	ff 50 24	 call	 DWORD PTR [eax+36]
  00955	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : 				DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "LogAlerts", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_LOG_ALERTS));

  00958	68 f9 03 00 00	 push	 1017			; 000003f9H
  0095d	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00960	ff d3		 call	 ebx
  00962	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00965	88 45 f8	 mov	 BYTE PTR _cws$86114[ebp+12], al
  00968	8d 45 ec	 lea	 eax, DWORD PTR _cws$86114[ebp]
  0096b	33 db		 xor	 ebx, ebx
  0096d	50		 push	 eax
  0096e	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00973	53		 push	 ebx
  00974	56		 push	 esi
  00975	89 4d ec	 mov	 DWORD PTR _cws$86114[ebp], ecx
  00978	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86114[ebp+4], OFFSET FLAT:??_C@_09BDIE@LogAlerts?$AA@ ; `string'
  0097f	c6 45 f4 01	 mov	 BYTE PTR _cws$86114[ebp+8], 1
  00983	ff 50 24	 call	 DWORD PTR [eax+36]
  00986	83 c4 0c	 add	 esp, 12			; 0000000cH

; 347  : 				if (reconnectRequired && proto->jabberConnected)

  00989	39 5d 14	 cmp	 DWORD PTR _reconnectRequired$85217[ebp], ebx
  0098c	74 49		 je	 SHORT $L85261
  0098e	39 9f 7c 01 00
	00		 cmp	 DWORD PTR [edi+380], ebx
  00994	74 41		 je	 SHORT $L85261

; 348  : 					MessageBox(hwndDlg, TranslateT("These changes will take effect the next time you connect to the Tlen network."), TranslateT("Tlen Protocol Option"), MB_OK|MB_SETFOREGROUND);

  00996	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0099b	68 00 00 01 00	 push	 65536			; 00010000H
  009a0	bb 00 10 00 00	 mov	 ebx, 4096		; 00001000H
  009a5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1CK@NMED@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn@ ; `string'
  009aa	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  009af	53		 push	 ebx
  009b0	57		 push	 edi
  009b1	ff 50 24	 call	 DWORD PTR [eax+36]
  009b4	83 c4 0c	 add	 esp, 12			; 0000000cH
  009b7	50		 push	 eax
  009b8	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  009bd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1JM@BOLK@?$AAT?$AAh?$AAe?$AAs?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AAs?$AA?5?$AAw?$AAi?$AAl?$AAl?$AA?5?$AAt@ ; `string'
  009c2	53		 push	 ebx
  009c3	57		 push	 edi
  009c4	ff 50 24	 call	 DWORD PTR [eax+36]
  009c7	83 c4 0c	 add	 esp, 12			; 0000000cH
  009ca	50		 push	 eax
  009cb	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  009ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxW@16
  009d4	8b 7d d0	 mov	 edi, DWORD PTR _proto$[ebp]
$L85261:

; 349  : 				ApplyChanges(proto, 1);

  009d7	6a 01		 push	 1
  009d9	57		 push	 edi
  009da	e8 00 00 00 00	 call	 _ApplyChanges
  009df	59		 pop	 ecx
  009e0	59		 pop	 ecx
$L86120:

; 350  : 				return TRUE;

  009e1	6a 01		 push	 1
  009e3	58		 pop	 eax
$L85105:
  009e4	5f		 pop	 edi
  009e5	5e		 pop	 esi
  009e6	5b		 pop	 ebx

; 356  : }

  009e7	c9		 leave
  009e8	c2 10 00	 ret	 16			; 00000010H
$L86124:
  009eb	00 00 00 00	 DD	 $L85194
  009ef	00 00 00 00	 DD	 $L85209
  009f3	00 00 00 00	 DD	 $L85205
  009f7	00 00 00 00	 DD	 $L85201
  009fb	00 00 00 00	 DD	 $L85200
  009ff	00 00 00 00	 DD	 $L85202
  00a03	00 00 00 00	 DD	 $L85209
$L86123:
  00a07	00		 DB	 0
  00a08	06		 DB	 6
  00a09	00		 DB	 0
  00a0a	06		 DB	 6
  00a0b	06		 DB	 6
  00a0c	06		 DB	 6
  00a0d	06		 DB	 6
  00a0e	06		 DB	 6
  00a0f	06		 DB	 6
  00a10	06		 DB	 6
  00a11	06		 DB	 6
  00a12	01		 DB	 1
  00a13	01		 DB	 1
  00a14	02		 DB	 2
  00a15	06		 DB	 6
  00a16	03		 DB	 3
  00a17	04		 DB	 4
  00a18	06		 DB	 6
  00a19	06		 DB	 6
  00a1a	06		 DB	 6
  00a1b	06		 DB	 6
  00a1c	06		 DB	 6
  00a1d	06		 DB	 6
  00a1e	06		 DB	 6
  00a1f	06		 DB	 6
  00a20	06		 DB	 6
  00a21	06		 DB	 6
  00a22	06		 DB	 6
  00a23	06		 DB	 6
  00a24	06		 DB	 6
  00a25	06		 DB	 6
  00a26	06		 DB	 6
  00a27	06		 DB	 6
  00a28	06		 DB	 6
  00a29	06		 DB	 6
  00a2a	06		 DB	 6
  00a2b	06		 DB	 6
  00a2c	06		 DB	 6
  00a2d	06		 DB	 6
  00a2e	05		 DB	 5
  00a2f	06		 DB	 6
  00a30	06		 DB	 6
  00a31	06		 DB	 6
  00a32	06		 DB	 6
  00a33	06		 DB	 6
  00a34	06		 DB	 6
  00a35	06		 DB	 6
  00a36	01		 DB	 1
  00a37	06		 DB	 6
  00a38	01		 DB	 1
  00a39	06		 DB	 6
  00a3a	01		 DB	 1
  00a3b	02		 DB	 2
  00a3c	02		 DB	 2
  00a3d	06		 DB	 6
  00a3e	01		 DB	 1
_TlenBasicOptDlgProc@16 ENDP
_TEXT	ENDS
;	COMDAT _ApplyChanges
_TEXT	SEGMENT
_proto$ = 8
_i$ = 12
_ApplyChanges PROC NEAR					; COMDAT

; 71   : 	changed &= ~i;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _i$[esp-4]
  00004	f7 d0		 not	 eax
  00006	21 05 00 00 00
	00		 and	 DWORD PTR _changed, eax

; 72   : 	if (changed == 0) {

  0000c	75 0a		 jne	 SHORT $L84959

; 73   : 		TlenLoadOptions(proto);

  0000e	ff 74 24 04	 push	 DWORD PTR _proto$[esp-4]
  00012	e8 00 00 00 00	 call	 _TlenLoadOptions
  00017	59		 pop	 ecx
$L84959:

; 74   : 	}
; 75   : }

  00018	c3		 ret	 0
_ApplyChanges ENDP
_TEXT	ENDS
;	COMDAT _MarkChanges
_TEXT	SEGMENT
_i$ = 8
_hWnd$ = 12
_MarkChanges PROC NEAR					; COMDAT

; 78   : 	SendMessage(GetParent(hWnd), PSM_CHANGED, 0, 0);

  00000	6a 00		 push	 0
  00002	6a 00		 push	 0
  00004	68 68 04 00 00	 push	 1128			; 00000468H
  00009	ff 74 24 14	 push	 DWORD PTR _hWnd$[esp+8]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00013	50		 push	 eax
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageW@16

; 79   : 	changed |= i;

  0001a	8b 44 24 04	 mov	 eax, DWORD PTR _i$[esp-4]
  0001e	09 05 00 00 00
	00		 or	 DWORD PTR _changed, eax

; 80   : }

  00024	c3		 ret	 0
_MarkChanges ENDP
_TEXT	ENDS
PUBLIC	??_C@_0O@EBHE@VoiceDeviceIn?$AA@		; `string'
PUBLIC	??_C@_0P@OODI@VoiceDeviceOut?$AA@		; `string'
EXTRN	_TlenVoiceBuildInDeviceList:NEAR
EXTRN	_TlenVoiceBuildOutDeviceList:NEAR
;	COMDAT ??_C@_0O@EBHE@VoiceDeviceIn?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_0O@EBHE@VoiceDeviceIn?$AA@ DB 'VoiceDeviceIn', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@OODI@VoiceDeviceOut?$AA@
_DATA	SEGMENT
??_C@_0P@OODI@VoiceDeviceOut?$AA@ DB 'VoiceDeviceOut', 00H ; `string'
_DATA	ENDS
;	COMDAT _TlenVoiceOptDlgProc@16
_TEXT	SEGMENT
_cws$86133 = -20
_cws$86140 = -20
_cws$86147 = -20
_hwndDlg$ = 8
_msg$ = 12
_wParam$ = 16
_lParam$ = 20
_TlenVoiceOptDlgProc@16 PROC NEAR			; COMDAT

; 359  : {

  00000	83 ec 14	 sub	 esp, 20			; 00000014H
  00003	53		 push	 ebx
  00004	55		 push	 ebp
  00005	56		 push	 esi

; 360  :     TlenProtocol *proto = (TlenProtocol *)GetWindowLong(hwndDlg, GWL_USERDATA);

  00006	8b 74 24 24	 mov	 esi, DWORD PTR _hwndDlg$[esp+28]
  0000a	57		 push	 edi
  0000b	6a eb		 push	 -21			; ffffffebH
  0000d	56		 push	 esi
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongW@8
  00014	8b f8		 mov	 edi, eax

; 361  : 	switch (msg) {

  00016	8b 44 24 2c	 mov	 eax, DWORD PTR _msg$[esp+32]
  0001a	83 e8 4e	 sub	 eax, 78			; 0000004eH
  0001d	0f 84 57 01 00
	00		 je	 $L85310
  00023	2d c2 00 00 00	 sub	 eax, 194		; 000000c2H
  00028	74 47		 je	 SHORT $L85281
  0002a	48		 dec	 eax
  0002b	0f 85 56 01 00
	00		 jne	 $L85313

; 375  : 		}
; 376  : 	case WM_COMMAND:
; 377  : 		switch (LOWORD(wParam)) {

  00031	8b 4c 24 30	 mov	 ecx, DWORD PTR _wParam$[esp+32]
  00035	0f b7 c1	 movzx	 eax, cx
  00038	3d 1f 04 00 00	 cmp	 eax, 1055		; 0000041fH
  0003d	74 16		 je	 SHORT $L85306
  0003f	3d 5f 04 00 00	 cmp	 eax, 1119		; 0000045fH
  00044	0f 8e 3d 01 00
	00		 jle	 $L85313
  0004a	3d 61 04 00 00	 cmp	 eax, 1121		; 00000461H
  0004f	0f 8f 32 01 00
	00		 jg	 $L85313
$L85306:

; 378  : 		case IDC_VOICE_POLICY:
; 379  : 		case IDC_VOICE_DEVICE_IN:
; 380  : 		case IDC_VOICE_DEVICE_OUT:
; 381  : 			if (HIWORD(wParam) == CBN_SELCHANGE)

  00055	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00058	66 83 f9 01	 cmp	 cx, 1
  0005c	0f 85 25 01 00
	00		 jne	 $L85313

; 382  : 				MarkChanges(2, hwndDlg);

  00062	56		 push	 esi
  00063	6a 02		 push	 2
  00065	e8 00 00 00 00	 call	 _MarkChanges
  0006a	59		 pop	 ecx
  0006b	59		 pop	 ecx

; 383  : 			break;
; 384  : 		}
; 385  : 		break;

  0006c	e9 16 01 00 00	 jmp	 $L85313
$L85281:

; 362  : 	case WM_INITDIALOG:
; 363  : 		{
; 364  : 			proto = (TlenProtocol *)lParam;
; 365  :             SetWindowLong(hwndDlg, GWL_USERDATA, (LONG)proto);

  00071	ff 74 24 34	 push	 DWORD PTR _lParam$[esp+32]
  00075	6a eb		 push	 -21			; ffffffebH
  00077	56		 push	 esi
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongW@12

; 366  : 			SendDlgItemMessage(hwndDlg, IDC_VOICE_POLICY, CB_ADDSTRING, 0, (LPARAM)TranslateT("Always ask me"));

  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00083	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1BM@GOL@?$AAA?$AAl?$AAw?$AAa?$AAy?$AAs?$AA?5?$AAa?$AAs?$AAk?$AA?5?$AAm?$AAe?$AA?$AA@ ; `string'
  00088	68 00 10 00 00	 push	 4096			; 00001000H
  0008d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  00092	ff 50 24	 call	 DWORD PTR [eax+36]
  00095	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__SendDlgItemMessageW@20
  0009b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009e	bd 43 01 00 00	 mov	 ebp, 323		; 00000143H
  000a3	bb 1f 04 00 00	 mov	 ebx, 1055		; 0000041fH
  000a8	50		 push	 eax
  000a9	6a 00		 push	 0
  000ab	55		 push	 ebp
  000ac	53		 push	 ebx
  000ad	56		 push	 esi
  000ae	ff d7		 call	 edi

; 367  : 			SendDlgItemMessage(hwndDlg, IDC_VOICE_POLICY, CB_ADDSTRING, 0, (LPARAM)TranslateT("Accept invitations from authorized contacts"));

  000b0	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000b5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1FI@HENN@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf@ ; `string'
  000ba	68 00 10 00 00	 push	 4096			; 00001000H
  000bf	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  000c4	ff 50 24	 call	 DWORD PTR [eax+36]
  000c7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ca	50		 push	 eax
  000cb	6a 00		 push	 0
  000cd	55		 push	 ebp
  000ce	53		 push	 ebx
  000cf	56		 push	 esi
  000d0	ff d7		 call	 edi

; 368  : 			SendDlgItemMessage(hwndDlg, IDC_VOICE_POLICY, CB_ADDSTRING, 0, (LPARAM)TranslateT("Accept all invitations"));

  000d2	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000d7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1CO@LCF@?$AAA?$AAc?$AAc?$AAe?$AAp?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo@ ; `string'
  000dc	68 00 10 00 00	 push	 4096			; 00001000H
  000e1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  000e6	ff 50 24	 call	 DWORD PTR [eax+36]
  000e9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ec	50		 push	 eax
  000ed	6a 00		 push	 0
  000ef	55		 push	 ebp
  000f0	53		 push	 ebx
  000f1	56		 push	 esi
  000f2	ff d7		 call	 edi

; 369  : 			SendDlgItemMessage(hwndDlg, IDC_VOICE_POLICY, CB_ADDSTRING, 0, (LPARAM)TranslateT("Ignore invitations from unauthorized contacts"));

  000f4	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000f9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1FM@IIPM@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf@ ; `string'
  000fe	68 00 10 00 00	 push	 4096			; 00001000H
  00103	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  00108	ff 50 24	 call	 DWORD PTR [eax+36]
  0010b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0010e	50		 push	 eax
  0010f	6a 00		 push	 0
  00111	55		 push	 ebp
  00112	53		 push	 ebx
  00113	56		 push	 esi
  00114	ff d7		 call	 edi

; 370  : 			SendDlgItemMessage(hwndDlg, IDC_VOICE_POLICY, CB_ADDSTRING, 0, (LPARAM)TranslateT("Ignore all invitation"));

  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0011b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1CM@HHOO@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAi?$AAn?$AAv?$AAi?$AAt?$AAa?$AAt?$AAi?$AAo@ ; `string'
  00120	68 00 10 00 00	 push	 4096			; 00001000H
  00125	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  0012a	ff 50 24	 call	 DWORD PTR [eax+36]
  0012d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00130	50		 push	 eax
  00131	6a 00		 push	 0
  00133	55		 push	 ebp
  00134	53		 push	 ebx
  00135	56		 push	 esi
  00136	ff d7		 call	 edi

; 371  : 			SendDlgItemMessage(hwndDlg, IDC_VOICE_POLICY, CB_SETCURSEL, proto->tlenOptions.voiceChatPolicy, 0);

  00138	6a 00		 push	 0
  0013a	8b 6c 24 38	 mov	 ebp, DWORD PTR _lParam$[esp+36]
  0013e	ff b5 d8 01 00
	00		 push	 DWORD PTR [ebp+472]
  00144	68 4e 01 00 00	 push	 334			; 0000014eH
  00149	53		 push	 ebx
  0014a	56		 push	 esi
  0014b	ff d7		 call	 edi

; 372  : 			TlenVoiceBuildInDeviceList(proto, GetDlgItem(hwndDlg, IDC_VOICE_DEVICE_IN));

  0014d	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetDlgItem@8
  00153	68 60 04 00 00	 push	 1120			; 00000460H
  00158	56		 push	 esi
  00159	ff d7		 call	 edi
  0015b	50		 push	 eax
  0015c	55		 push	 ebp
  0015d	e8 00 00 00 00	 call	 _TlenVoiceBuildInDeviceList
  00162	59		 pop	 ecx
  00163	59		 pop	 ecx

; 373  : 			TlenVoiceBuildOutDeviceList(proto, GetDlgItem(hwndDlg, IDC_VOICE_DEVICE_OUT));

  00164	68 61 04 00 00	 push	 1121			; 00000461H
  00169	56		 push	 esi
  0016a	ff d7		 call	 edi
  0016c	50		 push	 eax
  0016d	55		 push	 ebp
  0016e	e8 00 00 00 00	 call	 _TlenVoiceBuildOutDeviceList
  00173	59		 pop	 ecx
  00174	59		 pop	 ecx

; 374  : 			return TRUE;

  00175	e9 dd 00 00 00	 jmp	 $L86151
$L85310:

; 386  : 	case WM_NOTIFY:
; 387  : 		switch (((LPNMHDR) lParam)->code) {

  0017a	8b 44 24 34	 mov	 eax, DWORD PTR _lParam$[esp+32]
  0017e	81 78 08 36 ff
	ff ff		 cmp	 DWORD PTR [eax+8], -202	; ffffff36H
  00185	74 07		 je	 SHORT $L85316
$L85313:

; 395  : 			}
; 396  : 		}
; 397  : 		break;
; 398  : 	}
; 399  : 
; 400  : 	return FALSE;

  00187	33 c0		 xor	 eax, eax
  00189	e9 cc 00 00 00	 jmp	 $L85274
$L85316:

; 388  : 		case PSN_APPLY:
; 389  : 			{
; 390  : 				DBWriteContactSettingWord(NULL, proto->iface.m_szModuleName, "VoiceChatPolicy", (WORD) SendDlgItemMessage(hwndDlg, IDC_VOICE_POLICY, CB_GETCURSEL, 0, 0));

  0018e	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__SendDlgItemMessageW@20
  00194	33 ed		 xor	 ebp, ebp
  00196	55		 push	 ebp
  00197	55		 push	 ebp
  00198	68 47 01 00 00	 push	 327			; 00000147H
  0019d	68 1f 04 00 00	 push	 1055			; 0000041fH
  001a2	56		 push	 esi
  001a3	ff d3		 call	 ebx
  001a5	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  001a8	66 89 44 24 1c	 mov	 WORD PTR _cws$86133[esp+48], ax
  001ad	8d 44 24 10	 lea	 eax, DWORD PTR _cws$86133[esp+36]
  001b1	50		 push	 eax
  001b2	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001b7	55		 push	 ebp
  001b8	bd 00 00 00 00	 mov	 ebp, OFFSET FLAT:??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ ; `string'
  001bd	55		 push	 ebp
  001be	89 4c 24 1c	 mov	 DWORD PTR _cws$86133[esp+48], ecx
  001c2	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _cws$86133[esp+52], OFFSET FLAT:??_C@_0BA@CKKI@VoiceChatPolicy?$AA@ ; `string'
  001ca	c6 44 24 24 02	 mov	 BYTE PTR _cws$86133[esp+56], 2
  001cf	ff 50 24	 call	 DWORD PTR [eax+36]
  001d2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 391  : 				DBWriteContactSettingWord(NULL, proto->iface.m_szModuleName, "VoiceDeviceIn", (WORD) SendDlgItemMessage(hwndDlg, IDC_VOICE_DEVICE_IN, CB_GETCURSEL, 0, 0));

  001d5	6a 00		 push	 0
  001d7	6a 00		 push	 0
  001d9	68 47 01 00 00	 push	 327			; 00000147H
  001de	68 60 04 00 00	 push	 1120			; 00000460H
  001e3	56		 push	 esi
  001e4	ff d3		 call	 ebx
  001e6	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  001e9	66 89 44 24 1c	 mov	 WORD PTR _cws$86140[esp+48], ax
  001ee	8d 44 24 10	 lea	 eax, DWORD PTR _cws$86140[esp+36]
  001f2	50		 push	 eax
  001f3	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001f8	6a 00		 push	 0
  001fa	55		 push	 ebp
  001fb	89 4c 24 1c	 mov	 DWORD PTR _cws$86140[esp+48], ecx
  001ff	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _cws$86140[esp+52], OFFSET FLAT:??_C@_0O@EBHE@VoiceDeviceIn?$AA@ ; `string'
  00207	c6 44 24 24 02	 mov	 BYTE PTR _cws$86140[esp+56], 2
  0020c	ff 50 24	 call	 DWORD PTR [eax+36]
  0020f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 392  : 				DBWriteContactSettingWord(NULL, proto->iface.m_szModuleName, "VoiceDeviceOut", (WORD) SendDlgItemMessage(hwndDlg, IDC_VOICE_DEVICE_OUT, CB_GETCURSEL, 0, 0));

  00212	6a 00		 push	 0
  00214	6a 00		 push	 0
  00216	68 47 01 00 00	 push	 327			; 00000147H
  0021b	68 61 04 00 00	 push	 1121			; 00000461H
  00220	56		 push	 esi
  00221	ff d3		 call	 ebx
  00223	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00226	66 89 44 24 1c	 mov	 WORD PTR _cws$86147[esp+48], ax
  0022b	8d 44 24 10	 lea	 eax, DWORD PTR _cws$86147[esp+36]
  0022f	50		 push	 eax
  00230	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00235	6a 00		 push	 0
  00237	55		 push	 ebp
  00238	89 4c 24 1c	 mov	 DWORD PTR _cws$86147[esp+48], ecx
  0023c	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _cws$86147[esp+52], OFFSET FLAT:??_C@_0P@OODI@VoiceDeviceOut?$AA@ ; `string'
  00244	c6 44 24 24 02	 mov	 BYTE PTR _cws$86147[esp+56], 2
  00249	ff 50 24	 call	 DWORD PTR [eax+36]

; 393  : 				ApplyChanges(proto, 2);

  0024c	6a 02		 push	 2
  0024e	57		 push	 edi
  0024f	e8 00 00 00 00	 call	 _ApplyChanges
  00254	83 c4 14	 add	 esp, 20			; 00000014H
$L86151:

; 394  : 				return TRUE;

  00257	6a 01		 push	 1
  00259	58		 pop	 eax
$L85274:
  0025a	5f		 pop	 edi
  0025b	5e		 pop	 esi
  0025c	5d		 pop	 ebp
  0025d	5b		 pop	 ebx

; 401  : }

  0025e	83 c4 14	 add	 esp, 20			; 00000014H
  00261	c2 10 00	 ret	 16			; 00000010H
_TlenVoiceOptDlgProc@16 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0M@IBOM@LoginServer?$AA@			; `string'
PUBLIC	??_C@_1BA@MDJN@?$AAt?$AAl?$AAe?$AAn?$AA?4?$AAp?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_0L@FKFD@ManualHost?$AA@			; `string'
PUBLIC	??_C@_1BG@KPOA@?$AAs?$AA1?$AA?4?$AAt?$AAl?$AAe?$AAn?$AA?4?$AAp?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_0L@DDEI@ManualPort?$AA@			; `string'
PUBLIC	??_C@_09LNJJ@KeepAlive?$AA@			; `string'
PUBLIC	??_C@_0BC@FEOM@VisibilitySupport?$AA@		; `string'
PUBLIC	??_C@_0N@BODO@UseFileProxy?$AA@			; `string'
PUBLIC	??_C@_0O@EJJI@FileProxyAuth?$AA@		; `string'
PUBLIC	??_C@_1BG@GDIB@?$AAF?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	??_C@_1O@GKBA@?$AAS?$AAO?$AAC?$AAK?$AAS?$AA4?$AA?$AA@ ; `string'
PUBLIC	??_C@_1O@DIAG@?$AAS?$AAO?$AAC?$AAK?$AAS?$AA5?$AA?$AA@ ; `string'
PUBLIC	??_C@_0O@HKJF@FileProxyType?$AA@		; `string'
PUBLIC	??_C@_0O@GFGJ@FileProxyHost?$AA@		; `string'
PUBLIC	??_C@_0O@MHC@FileProxyPort?$AA@			; `string'
PUBLIC	??_C@_0BC@CBEM@FileProxyUsername?$AA@		; `string'
PUBLIC	??_C@_0BC@EIFA@FileProxyPassword?$AA@		; `string'
EXTRN	__imp__SetDlgItemInt@16:NEAR
EXTRN	__imp__GetDlgItemInt@16:NEAR
EXTRN	__imp__EnableWindow@8:NEAR
;	COMDAT ??_C@_0M@IBOM@LoginServer?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_0M@IBOM@LoginServer?$AA@ DB 'LoginServer', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BA@MDJN@?$AAt?$AAl?$AAe?$AAn?$AA?4?$AAp?$AAl?$AA?$AA@
_DATA	SEGMENT
??_C@_1BA@MDJN@?$AAt?$AAl?$AAe?$AAn?$AA?4?$AAp?$AAl?$AA?$AA@ DB 't', 00H, 'l'
	DB	00H, 'e', 00H, 'n', 00H, '.', 00H, 'p', 00H, 'l', 00H, 00H, 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@FKFD@ManualHost?$AA@
_DATA	SEGMENT
??_C@_0L@FKFD@ManualHost?$AA@ DB 'ManualHost', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BG@KPOA@?$AAs?$AA1?$AA?4?$AAt?$AAl?$AAe?$AAn?$AA?4?$AAp?$AAl?$AA?$AA@
_DATA	SEGMENT
??_C@_1BG@KPOA@?$AAs?$AA1?$AA?4?$AAt?$AAl?$AAe?$AAn?$AA?4?$AAp?$AAl?$AA?$AA@ DB 's'
	DB	00H, '1', 00H, '.', 00H, 't', 00H, 'l', 00H, 'e', 00H, 'n', 00H
	DB	'.', 00H, 'p', 00H, 'l', 00H, 00H, 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@DDEI@ManualPort?$AA@
_DATA	SEGMENT
??_C@_0L@DDEI@ManualPort?$AA@ DB 'ManualPort', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09LNJJ@KeepAlive?$AA@
_DATA	SEGMENT
??_C@_09LNJJ@KeepAlive?$AA@ DB 'KeepAlive', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FEOM@VisibilitySupport?$AA@
_DATA	SEGMENT
??_C@_0BC@FEOM@VisibilitySupport?$AA@ DB 'VisibilitySupport', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@BODO@UseFileProxy?$AA@
_DATA	SEGMENT
??_C@_0N@BODO@UseFileProxy?$AA@ DB 'UseFileProxy', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@EJJI@FileProxyAuth?$AA@
_DATA	SEGMENT
??_C@_0O@EJJI@FileProxyAuth?$AA@ DB 'FileProxyAuth', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_1BG@GDIB@?$AAF?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?$AA@
_DATA	SEGMENT
??_C@_1BG@GDIB@?$AAF?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?$AA@ DB 'F'
	DB	00H, 'o', 00H, 'r', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'd', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_1O@GKBA@?$AAS?$AAO?$AAC?$AAK?$AAS?$AA4?$AA?$AA@
_DATA	SEGMENT
??_C@_1O@GKBA@?$AAS?$AAO?$AAC?$AAK?$AAS?$AA4?$AA?$AA@ DB 'S', 00H, 'O', 00H
	DB	'C', 00H, 'K', 00H, 'S', 00H, '4', 00H, 00H, 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_1O@DIAG@?$AAS?$AAO?$AAC?$AAK?$AAS?$AA5?$AA?$AA@
_DATA	SEGMENT
??_C@_1O@DIAG@?$AAS?$AAO?$AAC?$AAK?$AAS?$AA5?$AA?$AA@ DB 'S', 00H, 'O', 00H
	DB	'C', 00H, 'K', 00H, 'S', 00H, '5', 00H, 00H, 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@HKJF@FileProxyType?$AA@
_DATA	SEGMENT
??_C@_0O@HKJF@FileProxyType?$AA@ DB 'FileProxyType', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@GFGJ@FileProxyHost?$AA@
_DATA	SEGMENT
??_C@_0O@GFGJ@FileProxyHost?$AA@ DB 'FileProxyHost', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@MHC@FileProxyPort?$AA@
_DATA	SEGMENT
??_C@_0O@MHC@FileProxyPort?$AA@ DB 'FileProxyPort', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@CBEM@FileProxyUsername?$AA@
_DATA	SEGMENT
??_C@_0BC@CBEM@FileProxyUsername?$AA@ DB 'FileProxyUsername', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@EIFA@FileProxyPassword?$AA@
_DATA	SEGMENT
??_C@_0BC@EIFA@FileProxyPassword?$AA@ DB 'FileProxyPassword', 00H ; `string'
_DATA	ENDS
;	COMDAT _TlenAdvOptDlgProc@16
_TEXT	SEGMENT
_cgs$86160 = -12
_cgs$86171 = -12
_dbv$86181 = -24
_cgs$86182 = -12
_dbv$86190 = -24
_cgs$86191 = -12
_dbv$86199 = -24
_cgs$86200 = -12
_dbv$86208 = -24
_cgs$86209 = -12
_dbv$86217 = -24
_cgs$86218 = -12
_dbv$86226 = -24
_cgs$86227 = -12
_dbv$86235 = -24
_cgs$86236 = -12
_cgs$86245 = -12
_dbv$86255 = -24
_cgs$86256 = -12
_cgs$86265 = -12
_cgs$86276 = -12
_cgs$86286 = -12
_cws$86295 = -32
_cgs$86303 = -12
_cws$86312 = -32
_dbv$86318 = -24
_cgs$86319 = -12
_cws$86327 = -32
_cws$86333 = -32
_dbv$86340 = -24
_cgs$86341 = -12
_cws$86349 = -32
_hwndDlg$ = 8
_msg$ = 12
_wParam$ = 16
_cws$86355 = -32
_lParam$ = 20
_text$ = -300
_bChecked$ = 16
_cws$86362 = -32
_dbv$85343 = -44
_cws$86369 = -32
_cws$86376 = -32
_cws$86382 = -32
_cws$86389 = -32
_cws$86396 = -32
_cws$86402 = -32
_port$85422 = 16
_useEncryption$85423 = 16
_reconnectRequired$85424 = 20
_dbv$85425 = -44
_TlenAdvOptDlgProc@16 PROC NEAR				; COMDAT

; 404  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 2c 01 00
	00		 sub	 esp, 300		; 0000012cH
  00009	53		 push	 ebx

; 405  : 	char text[256];
; 406  : 	BOOL bChecked;
; 407  :     TlenProtocol *proto = (TlenProtocol *)GetWindowLong(hwndDlg, GWL_USERDATA);

  0000a	8b 5d 08	 mov	 ebx, DWORD PTR _hwndDlg$[ebp]
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	6a eb		 push	 -21			; ffffffebH
  00011	53		 push	 ebx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongW@8
  00018	8b f8		 mov	 edi, eax

; 408  : 
; 409  : 	switch (msg) {

  0001a	8b 45 0c	 mov	 eax, DWORD PTR _msg$[ebp]
  0001d	83 e8 4e	 sub	 eax, 78			; 0000004eH
  00020	0f 84 2b 07 00
	00		 je	 $L85415
  00026	2d c2 00 00 00	 sub	 eax, 194		; 000000c2H
  0002b	0f 84 94 01 00
	00		 je	 $L85342
  00031	48		 dec	 eax
  00032	0f 85 25 07 00
	00		 jne	 $L85418

; 480  : 		}
; 481  : 	case WM_COMMAND:
; 482  : 		{
; 483  : 			switch (LOWORD(wParam)) {

  00038	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  0003b	b9 57 04 00 00	 mov	 ecx, 1111		; 00000457H
  00040	0f b7 c2	 movzx	 eax, dx
  00043	3b c1		 cmp	 eax, ecx
  00045	7f 5e		 jg	 SHORT $L86154
  00047	0f 84 5a 01 00
	00		 je	 $L85407
  0004d	3d ec 03 00 00	 cmp	 eax, 1004		; 000003ecH
  00052	0f 84 4f 01 00
	00		 je	 $L85407
  00058	3d f7 03 00 00	 cmp	 eax, 1015		; 000003f7H
  0005d	74 37		 je	 SHORT $L85414
  0005f	83 c1 bb	 add	 ecx, -69		; ffffffbbH
  00062	3b c1		 cmp	 eax, ecx
  00064	74 30		 je	 SHORT $L85414
  00066	0f 8e f1 06 00
	00		 jle	 $L85418
  0006c	3d 14 04 00 00	 cmp	 eax, 1044		; 00000414H
  00071	0f 8e 30 01 00
	00		 jle	 $L85407
  00077	3d 15 04 00 00	 cmp	 eax, 1045		; 00000415H
  0007c	74 18		 je	 SHORT $L85414
  0007e	3d 55 04 00 00	 cmp	 eax, 1109		; 00000455H
  00083	0f 85 d4 06 00
	00		 jne	 $L85418

; 484  : 			case IDC_FILE_PROXY_TYPE:
; 485  : 				if (HIWORD(wParam) == CBN_SELCHANGE)

  00089	c1 ea 10	 shr	 edx, 16			; 00000010H
  0008c	66 83 fa 01	 cmp	 dx, 1
$L86408:
  00090	0f 85 c7 06 00
	00		 jne	 $L85418
$L85414:

; 486  : 					MarkChanges(4, hwndDlg);

  00096	53		 push	 ebx
  00097	6a 04		 push	 4
  00099	e8 00 00 00 00	 call	 _MarkChanges
  0009e	59		 pop	 ecx
  0009f	59		 pop	 ecx

; 487  : 				break;

  000a0	e9 b8 06 00 00	 jmp	 $L85418
$L86154:

; 480  : 		}
; 481  : 	case WM_COMMAND:
; 482  : 		{
; 483  : 			switch (LOWORD(wParam)) {

  000a5	2d 59 04 00 00	 sub	 eax, 1113		; 00000459H
  000aa	0f 84 f7 00 00
	00		 je	 $L85407
  000b0	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__EnableWindow@8
  000b6	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetDlgItem@8
  000bc	48		 dec	 eax
  000bd	0f 84 86 00 00
	00		 je	 $L85413
  000c3	48		 dec	 eax
  000c4	0f 84 dd 00 00
	00		 je	 $L85407
  000ca	83 e8 03	 sub	 eax, 3
  000cd	0f 84 d4 00 00
	00		 je	 $L85407
  000d3	48		 dec	 eax
  000d4	0f 85 83 06 00
	00		 jne	 $L85418

; 496  : 					MarkChanges(4, hwndDlg);
; 497  : 				break;
; 498  : 			case IDC_FILE_USE_PROXY:
; 499  : 				bChecked = IsDlgButtonChecked(hwndDlg, IDC_FILE_USE_PROXY);

  000da	68 5f 04 00 00	 push	 1119			; 0000045fH
  000df	53		 push	 ebx
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8

; 500  : 				EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_TYPE_LABEL), bChecked);

  000e6	50		 push	 eax
  000e7	68 54 04 00 00	 push	 1108			; 00000454H
  000ec	53		 push	 ebx
  000ed	89 45 10	 mov	 DWORD PTR _bChecked$[ebp], eax
  000f0	ff d7		 call	 edi
  000f2	50		 push	 eax
  000f3	ff d6		 call	 esi

; 501  : 				EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_TYPE), bChecked);

  000f5	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  000f8	68 55 04 00 00	 push	 1109			; 00000455H
  000fd	53		 push	 ebx
  000fe	ff d7		 call	 edi
  00100	50		 push	 eax
  00101	ff d6		 call	 esi

; 502  : 				EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_HOST_LABEL), bChecked);

  00103	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  00106	68 56 04 00 00	 push	 1110			; 00000456H
  0010b	53		 push	 ebx
  0010c	ff d7		 call	 edi
  0010e	50		 push	 eax
  0010f	ff d6		 call	 esi

; 503  : 				EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_HOST), bChecked);

  00111	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  00114	68 57 04 00 00	 push	 1111			; 00000457H
  00119	53		 push	 ebx
  0011a	ff d7		 call	 edi
  0011c	50		 push	 eax
  0011d	ff d6		 call	 esi

; 504  : 				EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_PORT_LABEL), bChecked);

  0011f	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  00122	68 58 04 00 00	 push	 1112			; 00000458H
  00127	53		 push	 ebx
  00128	ff d7		 call	 edi
  0012a	50		 push	 eax
  0012b	ff d6		 call	 esi

; 505  : 				EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_PORT), bChecked);

  0012d	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  00130	68 59 04 00 00	 push	 1113			; 00000459H
  00135	53		 push	 ebx
  00136	ff d7		 call	 edi
  00138	50		 push	 eax
  00139	ff d6		 call	 esi

; 506  : 				EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_USE_AUTH), bChecked);

  0013b	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  0013e	68 5a 04 00 00	 push	 1114			; 0000045aH
  00143	53		 push	 ebx
  00144	ff d7		 call	 edi
  00146	50		 push	 eax
  00147	ff d6		 call	 esi
$L85413:

; 507  : 			case IDC_FILE_PROXY_USE_AUTH:
; 508  : 				bChecked = IsDlgButtonChecked(hwndDlg, IDC_FILE_PROXY_USE_AUTH) & IsDlgButtonChecked(hwndDlg, IDC_FILE_USE_PROXY);

  00149	68 5f 04 00 00	 push	 1119			; 0000045fH
  0014e	53		 push	 ebx
  0014f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  00155	68 5a 04 00 00	 push	 1114			; 0000045aH
  0015a	53		 push	 ebx
  0015b	89 45 14	 mov	 DWORD PTR 20+[ebp], eax
  0015e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  00164	8b 4d 14	 mov	 ecx, DWORD PTR 20+[ebp]
  00167	23 c8		 and	 ecx, eax

; 509  : 				EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_USER_LABEL), bChecked);

  00169	51		 push	 ecx
  0016a	68 5c 04 00 00	 push	 1116			; 0000045cH
  0016f	53		 push	 ebx
  00170	89 4d 10	 mov	 DWORD PTR _bChecked$[ebp], ecx
  00173	ff d7		 call	 edi
  00175	50		 push	 eax
  00176	ff d6		 call	 esi

; 510  : 				EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_USER), bChecked);

  00178	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  0017b	68 5b 04 00 00	 push	 1115			; 0000045bH
  00180	53		 push	 ebx
  00181	ff d7		 call	 edi
  00183	50		 push	 eax
  00184	ff d6		 call	 esi

; 511  : 				EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_PASSWORD_LABEL), bChecked);

  00186	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  00189	68 5d 04 00 00	 push	 1117			; 0000045dH
  0018e	53		 push	 ebx
  0018f	ff d7		 call	 edi
  00191	50		 push	 eax
  00192	ff d6		 call	 esi

; 512  : 				EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_PASSWORD), bChecked);

  00194	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  00197	68 5e 04 00 00	 push	 1118			; 0000045eH
  0019c	53		 push	 ebx
  0019d	ff d7		 call	 edi
  0019f	50		 push	 eax
  001a0	ff d6		 call	 esi

; 513  : 				MarkChanges(4, hwndDlg);
; 514  : 				break;

  001a2	e9 ef fe ff ff	 jmp	 $L85414
$L85407:

; 488  : 			case IDC_EDIT_LOGIN_SERVER:
; 489  : 			case IDC_HOST:
; 490  : 			case IDC_HOSTPORT:
; 491  : 			case IDC_FILE_PROXY_HOST:
; 492  : 			case IDC_FILE_PROXY_PORT:
; 493  : 			case IDC_FILE_PROXY_USER:
; 494  : 			case IDC_FILE_PROXY_PASSWORD:
; 495  : 				if ((HWND)lParam==GetFocus() && HIWORD(wParam)==EN_CHANGE)

  001a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  001ad	39 45 14	 cmp	 DWORD PTR _lParam$[ebp], eax
  001b0	0f 85 a7 05 00
	00		 jne	 $L85418
  001b6	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  001b9	c1 e8 10	 shr	 eax, 16			; 00000010H
  001bc	66 3d 00 03	 cmp	 ax, 768			; 00000300H

; 515  : 			case IDC_KEEPALIVE:
; 516  : 			case IDC_VISIBILITY_SUPPORT:
; 517  : 			case IDC_USE_SSL:
; 518  : 				MarkChanges(4, hwndDlg);
; 519  : 				break;
; 520  : 			}
; 521  : 		}
; 522  : 		break;

  001c0	e9 cb fe ff ff	 jmp	 $L86408
$L85342:

; 410  : 	case WM_INITDIALOG:
; 411  : 		{
; 412  : 			DBVARIANT dbv;
; 413  : 			proto = (TlenProtocol *)lParam;
; 414  :             SetWindowLong(hwndDlg, GWL_USERDATA, (LONG)proto);

  001c5	8b 75 14	 mov	 esi, DWORD PTR _lParam$[ebp]
  001c8	56		 push	 esi
  001c9	6a eb		 push	 -21			; ffffffebH
  001cb	53		 push	 ebx
  001cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongW@12

; 415  : 			TranslateDialogDefault(hwndDlg);

  001d2	53		 push	 ebx
  001d3	e8 00 00 00 00	 call	 _TranslateDialogDefault

; 416  : 			if (!DBGetContactSettingTString(NULL, proto->iface.m_szModuleName, "LoginServer", &dbv)) {

  001d8	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  001db	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86160[ebp+4], OFFSET FLAT:??_C@_0M@IBOM@LoginServer?$AA@ ; `string'
  001e2	89 45 f4	 mov	 DWORD PTR _cgs$86160[ebp], eax
  001e5	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85343[ebp]
  001e8	89 45 fc	 mov	 DWORD PTR _cgs$86160[ebp+8], eax
  001eb	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86160[ebp]
  001ee	50		 push	 eax
  001ef	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001f4	6a 00		 push	 0
  001f6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@BEPM@DB?1Contact?1GetSettingStr?$AA@ ; `string'
  001fb	c6 45 d4 fc	 mov	 BYTE PTR _dbv$85343[ebp], 252 ; 000000fcH
  001ff	ff 50 24	 call	 DWORD PTR [eax+36]
  00202	83 c4 10	 add	 esp, 16			; 00000010H
  00205	85 c0		 test	 eax, eax
  00207	75 27		 jne	 SHORT $L85347

; 417  : 				SetDlgItemText(hwndDlg, IDC_EDIT_LOGIN_SERVER, dbv.ptszVal);

  00209	ff 75 d8	 push	 DWORD PTR _dbv$85343[ebp+4]
  0020c	68 ec 03 00 00	 push	 1004			; 000003ecH
  00211	53		 push	 ebx
  00212	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextW@12

; 418  : 				DBFreeVariant(&dbv);

  00218	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85343[ebp]
  0021b	50		 push	 eax
  0021c	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00221	6a 00		 push	 0
  00223	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  00228	ff 50 24	 call	 DWORD PTR [eax+36]
  0022b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 419  : 			} else {

  0022e	eb 11		 jmp	 SHORT $L85349
$L85347:

; 420  : 				SetDlgItemText(hwndDlg, IDC_EDIT_LOGIN_SERVER, _T("tlen.pl"));

  00230	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1BA@MDJN@?$AAt?$AAl?$AAe?$AAn?$AA?4?$AAp?$AAl?$AA?$AA@ ; `string'
  00235	68 ec 03 00 00	 push	 1004			; 000003ecH
  0023a	53		 push	 ebx
  0023b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextW@12
$L85349:

; 421  : 			}
; 422  : 
; 423  : 			EnableWindow(GetDlgItem(hwndDlg, IDC_HOST), TRUE);

  00241	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetDlgItem@8
  00247	6a 01		 push	 1
  00249	68 13 04 00 00	 push	 1043			; 00000413H
  0024e	53		 push	 ebx
  0024f	ff d6		 call	 esi
  00251	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__EnableWindow@8
  00257	50		 push	 eax
  00258	ff d7		 call	 edi

; 424  : 			EnableWindow(GetDlgItem(hwndDlg, IDC_HOSTPORT), TRUE);

  0025a	6a 01		 push	 1
  0025c	68 14 04 00 00	 push	 1044			; 00000414H
  00261	53		 push	 ebx
  00262	ff d6		 call	 esi
  00264	50		 push	 eax
  00265	ff d7		 call	 edi

; 425  : 
; 426  : 			if (!DBGetContactSettingTString(NULL, proto->iface.m_szModuleName, "ManualHost", &dbv)) {

  00267	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  0026a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86171[ebp+4], OFFSET FLAT:??_C@_0L@FKFD@ManualHost?$AA@ ; `string'
  00271	c6 45 d4 fc	 mov	 BYTE PTR _dbv$85343[ebp], 252 ; 000000fcH
  00275	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  00278	89 45 f4	 mov	 DWORD PTR _cgs$86171[ebp], eax
  0027b	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85343[ebp]
  0027e	89 45 fc	 mov	 DWORD PTR _cgs$86171[ebp+8], eax
  00281	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86171[ebp]
  00284	50		 push	 eax
  00285	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0028a	6a 00		 push	 0
  0028c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@BEPM@DB?1Contact?1GetSettingStr?$AA@ ; `string'
  00291	ff 50 24	 call	 DWORD PTR [eax+36]
  00294	83 c4 0c	 add	 esp, 12			; 0000000cH
  00297	85 c0		 test	 eax, eax
  00299	75 27		 jne	 SHORT $L85352

; 427  : 				SetDlgItemText(hwndDlg, IDC_HOST, dbv.ptszVal);

  0029b	ff 75 d8	 push	 DWORD PTR _dbv$85343[ebp+4]
  0029e	68 13 04 00 00	 push	 1043			; 00000413H
  002a3	53		 push	 ebx
  002a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextW@12

; 428  : 				DBFreeVariant(&dbv);

  002aa	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85343[ebp]
  002ad	50		 push	 eax
  002ae	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  002b3	6a 00		 push	 0
  002b5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  002ba	ff 50 24	 call	 DWORD PTR [eax+36]
  002bd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 429  : 			} else

  002c0	eb 11		 jmp	 SHORT $L85354
$L85352:

; 430  : 				SetDlgItemText(hwndDlg, IDC_HOST, _T("s1.tlen.pl"));

  002c2	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1BG@KPOA@?$AAs?$AA1?$AA?4?$AAt?$AAl?$AAe?$AAn?$AA?4?$AAp?$AAl?$AA?$AA@ ; `string'
  002c7	68 13 04 00 00	 push	 1043			; 00000413H
  002cc	53		 push	 ebx
  002cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextW@12
$L85354:

; 431  : 			SetDlgItemInt(hwndDlg, IDC_HOSTPORT, DBGetContactSettingWord(NULL, proto->iface.m_szModuleName, "ManualPort", TLEN_DEFAULT_PORT), FALSE);

  002d3	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  002d6	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86182[ebp+4], OFFSET FLAT:??_C@_0L@DDEI@ManualPort?$AA@ ; `string'
  002dd	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  002e0	89 45 f4	 mov	 DWORD PTR _cgs$86182[ebp], eax
  002e3	8d 45 e8	 lea	 eax, DWORD PTR _dbv$86181[ebp]
  002e6	89 45 fc	 mov	 DWORD PTR _cgs$86182[ebp+8], eax
  002e9	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86182[ebp]
  002ec	50		 push	 eax
  002ed	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  002f2	6a 00		 push	 0
  002f4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  002f9	ff 50 24	 call	 DWORD PTR [eax+36]
  002fc	83 c4 0c	 add	 esp, 12			; 0000000cH
  002ff	85 c0		 test	 eax, eax
  00301	b8 bb 01 00 00	 mov	 eax, 443		; 000001bbH
  00306	75 04		 jne	 SHORT $L86180
  00308	0f b7 45 ec	 movzx	 eax, WORD PTR _dbv$86181[ebp+4]
$L86180:
  0030c	6a 00		 push	 0
  0030e	50		 push	 eax
  0030f	68 14 04 00 00	 push	 1044			; 00000414H
  00314	53		 push	 ebx
  00315	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemInt@16

; 432  : 
; 433  : 			CheckDlgButton(hwndDlg, IDC_KEEPALIVE, DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "KeepAlive", TRUE));

  0031b	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  0031e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86191[ebp+4], OFFSET FLAT:??_C@_09LNJJ@KeepAlive?$AA@ ; `string'
  00325	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  00328	89 45 f4	 mov	 DWORD PTR _cgs$86191[ebp], eax
  0032b	8d 45 e8	 lea	 eax, DWORD PTR _dbv$86190[ebp]
  0032e	89 45 fc	 mov	 DWORD PTR _cgs$86191[ebp+8], eax
  00331	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86191[ebp]
  00334	50		 push	 eax
  00335	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0033a	6a 00		 push	 0
  0033c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00341	ff 50 24	 call	 DWORD PTR [eax+36]
  00344	83 c4 0c	 add	 esp, 12			; 0000000cH
  00347	85 c0		 test	 eax, eax
  00349	74 05		 je	 SHORT $L86192
  0034b	6a 01		 push	 1
  0034d	58		 pop	 eax
  0034e	eb 04		 jmp	 SHORT $L86189
$L86192:
  00350	0f b6 45 ec	 movzx	 eax, BYTE PTR _dbv$86190[ebp+4]
$L86189:
  00354	50		 push	 eax
  00355	68 12 04 00 00	 push	 1042			; 00000412H
  0035a	53		 push	 ebx
  0035b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CheckDlgButton@12

; 434  : 
; 435  : 			CheckDlgButton(hwndDlg, IDC_USE_SSL, DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "UseEncryption", TRUE));

  00361	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  00364	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86200[ebp+4], OFFSET FLAT:??_C@_0O@CIMH@UseEncryption?$AA@ ; `string'
  0036b	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0036e	89 45 f4	 mov	 DWORD PTR _cgs$86200[ebp], eax
  00371	8d 45 e8	 lea	 eax, DWORD PTR _dbv$86199[ebp]
  00374	89 45 fc	 mov	 DWORD PTR _cgs$86200[ebp+8], eax
  00377	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86200[ebp]
  0037a	50		 push	 eax
  0037b	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00380	6a 00		 push	 0
  00382	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00387	ff 50 24	 call	 DWORD PTR [eax+36]
  0038a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0038d	85 c0		 test	 eax, eax
  0038f	74 05		 je	 SHORT $L86201
  00391	6a 01		 push	 1
  00393	58		 pop	 eax
  00394	eb 04		 jmp	 SHORT $L86198
$L86201:
  00396	0f b6 45 ec	 movzx	 eax, BYTE PTR _dbv$86199[ebp+4]
$L86198:
  0039a	50		 push	 eax
  0039b	68 15 04 00 00	 push	 1045			; 00000415H
  003a0	53		 push	 ebx
  003a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CheckDlgButton@12

; 436  : 			
; 437  : 			CheckDlgButton(hwndDlg, IDC_VISIBILITY_SUPPORT, DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "VisibilitySupport", FALSE));

  003a7	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  003aa	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86209[ebp+4], OFFSET FLAT:??_C@_0BC@FEOM@VisibilitySupport?$AA@ ; `string'
  003b1	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  003b4	89 45 f4	 mov	 DWORD PTR _cgs$86209[ebp], eax
  003b7	8d 45 e8	 lea	 eax, DWORD PTR _dbv$86208[ebp]
  003ba	89 45 fc	 mov	 DWORD PTR _cgs$86209[ebp+8], eax
  003bd	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86209[ebp]
  003c0	50		 push	 eax
  003c1	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  003c6	6a 00		 push	 0
  003c8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  003cd	ff 50 24	 call	 DWORD PTR [eax+36]
  003d0	83 c4 0c	 add	 esp, 12			; 0000000cH
  003d3	85 c0		 test	 eax, eax
  003d5	74 04		 je	 SHORT $L86210
  003d7	33 c0		 xor	 eax, eax
  003d9	eb 04		 jmp	 SHORT $L86207
$L86210:
  003db	0f b6 45 ec	 movzx	 eax, BYTE PTR _dbv$86208[ebp+4]
$L86207:
  003df	50		 push	 eax
  003e0	68 f7 03 00 00	 push	 1015			; 000003f7H
  003e5	53		 push	 ebx
  003e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CheckDlgButton@12

; 438  : 			// File transfer options
; 439  : 			bChecked = FALSE;
; 440  : 			if (DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "UseFileProxy", FALSE) == TRUE) {

  003ec	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  003ef	83 65 10 00	 and	 DWORD PTR _bChecked$[ebp], 0
  003f3	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86218[ebp+4], OFFSET FLAT:??_C@_0N@BODO@UseFileProxy?$AA@ ; `string'
  003fa	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  003fd	89 45 f4	 mov	 DWORD PTR _cgs$86218[ebp], eax
  00400	8d 45 e8	 lea	 eax, DWORD PTR _dbv$86217[ebp]
  00403	89 45 fc	 mov	 DWORD PTR _cgs$86218[ebp+8], eax
  00406	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86218[ebp]
  00409	50		 push	 eax
  0040a	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0040f	6a 00		 push	 0
  00411	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00416	ff 50 24	 call	 DWORD PTR [eax+36]
  00419	83 c4 0c	 add	 esp, 12			; 0000000cH
  0041c	85 c0		 test	 eax, eax
  0041e	75 1b		 jne	 SHORT $L85364
  00420	0f b6 4d ec	 movzx	 ecx, BYTE PTR _dbv$86217[ebp+4]
  00424	6a 01		 push	 1
  00426	58		 pop	 eax
  00427	3b c8		 cmp	 ecx, eax
  00429	75 10		 jne	 SHORT $L85364

; 441  : 			    bChecked = TRUE;
; 442  : 				CheckDlgButton(hwndDlg, IDC_FILE_USE_PROXY, TRUE);

  0042b	50		 push	 eax
  0042c	68 5f 04 00 00	 push	 1119			; 0000045fH
  00431	53		 push	 ebx
  00432	89 45 10	 mov	 DWORD PTR _bChecked$[ebp], eax
  00435	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CheckDlgButton@12
$L85364:

; 443  : 			}
; 444  : 			EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_TYPE_LABEL), bChecked);

  0043b	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  0043e	68 54 04 00 00	 push	 1108			; 00000454H
  00443	53		 push	 ebx
  00444	ff d6		 call	 esi
  00446	50		 push	 eax
  00447	ff d7		 call	 edi

; 445  : 			EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_TYPE), bChecked);

  00449	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  0044c	68 55 04 00 00	 push	 1109			; 00000455H
  00451	53		 push	 ebx
  00452	ff d6		 call	 esi
  00454	50		 push	 eax
  00455	ff d7		 call	 edi

; 446  : 			EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_HOST_LABEL), bChecked);

  00457	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  0045a	68 56 04 00 00	 push	 1110			; 00000456H
  0045f	53		 push	 ebx
  00460	ff d6		 call	 esi
  00462	50		 push	 eax
  00463	ff d7		 call	 edi

; 447  : 			EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_HOST), bChecked);

  00465	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  00468	68 57 04 00 00	 push	 1111			; 00000457H
  0046d	53		 push	 ebx
  0046e	ff d6		 call	 esi
  00470	50		 push	 eax
  00471	ff d7		 call	 edi

; 448  : 			EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_PORT_LABEL), bChecked);

  00473	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  00476	68 58 04 00 00	 push	 1112			; 00000458H
  0047b	53		 push	 ebx
  0047c	ff d6		 call	 esi
  0047e	50		 push	 eax
  0047f	ff d7		 call	 edi

; 449  : 			EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_PORT), bChecked);

  00481	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  00484	68 59 04 00 00	 push	 1113			; 00000459H
  00489	53		 push	 ebx
  0048a	ff d6		 call	 esi
  0048c	50		 push	 eax
  0048d	ff d7		 call	 edi

; 450  : 			EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_USE_AUTH), bChecked);

  0048f	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  00492	68 5a 04 00 00	 push	 1114			; 0000045aH
  00497	53		 push	 ebx
  00498	ff d6		 call	 esi
  0049a	50		 push	 eax
  0049b	ff d7		 call	 edi

; 451  : 			if (DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "FileProxyAuth", FALSE) == TRUE) {

  0049d	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  004a0	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86227[ebp+4], OFFSET FLAT:??_C@_0O@EJJI@FileProxyAuth?$AA@ ; `string'
  004a7	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  004aa	89 45 f4	 mov	 DWORD PTR _cgs$86227[ebp], eax
  004ad	8d 45 e8	 lea	 eax, DWORD PTR _dbv$86226[ebp]
  004b0	89 45 fc	 mov	 DWORD PTR _cgs$86227[ebp+8], eax
  004b3	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86227[ebp]
  004b6	50		 push	 eax
  004b7	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  004bc	6a 00		 push	 0
  004be	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  004c3	ff 50 24	 call	 DWORD PTR [eax+36]
  004c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  004c9	85 c0		 test	 eax, eax
  004cb	75 18		 jne	 SHORT $L85367
  004cd	0f b6 45 ec	 movzx	 eax, BYTE PTR _dbv$86226[ebp+4]
  004d1	83 f8 01	 cmp	 eax, 1
  004d4	75 0f		 jne	 SHORT $L85367

; 452  : 				CheckDlgButton(hwndDlg, IDC_FILE_PROXY_USE_AUTH, TRUE);

  004d6	50		 push	 eax
  004d7	68 5a 04 00 00	 push	 1114			; 0000045aH
  004dc	53		 push	 ebx
  004dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CheckDlgButton@12

; 453  : 			} else {

  004e3	eb 04		 jmp	 SHORT $L85369
$L85367:

; 454  : 			    bChecked = FALSE;

  004e5	83 65 10 00	 and	 DWORD PTR _bChecked$[ebp], 0
$L85369:

; 455  : 			}
; 456  : 			EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_USER_LABEL), bChecked);

  004e9	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  004ec	68 5c 04 00 00	 push	 1116			; 0000045cH
  004f1	53		 push	 ebx
  004f2	ff d6		 call	 esi
  004f4	50		 push	 eax
  004f5	ff d7		 call	 edi

; 457  : 			EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_USER), bChecked);

  004f7	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  004fa	68 5b 04 00 00	 push	 1115			; 0000045bH
  004ff	53		 push	 ebx
  00500	ff d6		 call	 esi
  00502	50		 push	 eax
  00503	ff d7		 call	 edi

; 458  : 			EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_PASSWORD_LABEL), bChecked);

  00505	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  00508	68 5d 04 00 00	 push	 1117			; 0000045dH
  0050d	53		 push	 ebx
  0050e	ff d6		 call	 esi
  00510	50		 push	 eax
  00511	ff d7		 call	 edi

; 459  : 			EnableWindow(GetDlgItem(hwndDlg, IDC_FILE_PROXY_PASSWORD), bChecked);

  00513	ff 75 10	 push	 DWORD PTR _bChecked$[ebp]
  00516	68 5e 04 00 00	 push	 1118			; 0000045eH
  0051b	53		 push	 ebx
  0051c	ff d6		 call	 esi
  0051e	50		 push	 eax
  0051f	ff d7		 call	 edi

; 460  : 
; 461  : 			SendDlgItemMessage(hwndDlg, IDC_FILE_PROXY_TYPE, CB_ADDSTRING, 0, (LPARAM)TranslateT("Forwarding"));

  00521	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00526	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1BG@GDIB@?$AAF?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
  0052b	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  00530	68 00 10 00 00	 push	 4096			; 00001000H
  00535	56		 push	 esi
  00536	ff 50 24	 call	 DWORD PTR [eax+36]
  00539	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__SendDlgItemMessageW@20
  0053f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00542	50		 push	 eax
  00543	6a 00		 push	 0
  00545	68 43 01 00 00	 push	 323			; 00000143H
  0054a	68 55 04 00 00	 push	 1109			; 00000455H
  0054f	53		 push	 ebx
  00550	ff d7		 call	 edi

; 462  :             SendDlgItemMessage(hwndDlg, IDC_FILE_PROXY_TYPE, CB_ADDSTRING, 0, (LPARAM)TranslateT("SOCKS4"));

  00552	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00557	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1O@GKBA@?$AAS?$AAO?$AAC?$AAK?$AAS?$AA4?$AA?$AA@ ; `string'
  0055c	68 00 10 00 00	 push	 4096			; 00001000H
  00561	56		 push	 esi
  00562	ff 50 24	 call	 DWORD PTR [eax+36]
  00565	83 c4 0c	 add	 esp, 12			; 0000000cH
  00568	50		 push	 eax
  00569	6a 00		 push	 0
  0056b	68 43 01 00 00	 push	 323			; 00000143H
  00570	68 55 04 00 00	 push	 1109			; 00000455H
  00575	53		 push	 ebx
  00576	ff d7		 call	 edi

; 463  :             SendDlgItemMessage(hwndDlg, IDC_FILE_PROXY_TYPE, CB_ADDSTRING, 0, (LPARAM)TranslateT("SOCKS5"));

  00578	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0057d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1O@DIAG@?$AAS?$AAO?$AAC?$AAK?$AAS?$AA5?$AA?$AA@ ; `string'
  00582	68 00 10 00 00	 push	 4096			; 00001000H
  00587	56		 push	 esi
  00588	ff 50 24	 call	 DWORD PTR [eax+36]
  0058b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0058e	50		 push	 eax
  0058f	6a 00		 push	 0
  00591	68 43 01 00 00	 push	 323			; 00000143H
  00596	68 55 04 00 00	 push	 1109			; 00000455H
  0059b	53		 push	 ebx
  0059c	ff d7		 call	 edi

; 464  : 			SendDlgItemMessage(hwndDlg, IDC_FILE_PROXY_TYPE, CB_SETCURSEL, DBGetContactSettingWord(NULL, proto->iface.m_szModuleName, "FileProxyType", 0), 0);

  0059e	8b 75 14	 mov	 esi, DWORD PTR _lParam$[ebp]
  005a1	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86236[ebp+4], OFFSET FLAT:??_C@_0O@HKJF@FileProxyType?$AA@ ; `string'
  005a8	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  005ab	89 45 f4	 mov	 DWORD PTR _cgs$86236[ebp], eax
  005ae	8d 45 e8	 lea	 eax, DWORD PTR _dbv$86235[ebp]
  005b1	89 45 fc	 mov	 DWORD PTR _cgs$86236[ebp+8], eax
  005b4	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86236[ebp]
  005b7	50		 push	 eax
  005b8	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  005bd	6a 00		 push	 0
  005bf	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  005c4	ff 50 24	 call	 DWORD PTR [eax+36]
  005c7	83 c4 0c	 add	 esp, 12			; 0000000cH
  005ca	85 c0		 test	 eax, eax
  005cc	74 04		 je	 SHORT $L86237
  005ce	33 c0		 xor	 eax, eax
  005d0	eb 04		 jmp	 SHORT $L86234
$L86237:
  005d2	0f b7 45 ec	 movzx	 eax, WORD PTR _dbv$86235[ebp+4]
$L86234:
  005d6	6a 00		 push	 0
  005d8	50		 push	 eax
  005d9	68 4e 01 00 00	 push	 334			; 0000014eH
  005de	68 55 04 00 00	 push	 1109			; 00000455H
  005e3	53		 push	 ebx
  005e4	ff d7		 call	 edi

; 465  : 			if (!DBGetContactSettingTString(NULL, proto->iface.m_szModuleName, "FileProxyHost", &dbv)) {

  005e6	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  005e9	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86245[ebp+4], OFFSET FLAT:??_C@_0O@GFGJ@FileProxyHost?$AA@ ; `string'
  005f0	89 45 f4	 mov	 DWORD PTR _cgs$86245[ebp], eax
  005f3	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85343[ebp]
  005f6	89 45 fc	 mov	 DWORD PTR _cgs$86245[ebp+8], eax
  005f9	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86245[ebp]
  005fc	50		 push	 eax
  005fd	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00602	6a 00		 push	 0
  00604	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@BEPM@DB?1Contact?1GetSettingStr?$AA@ ; `string'
  00609	c6 45 d4 fc	 mov	 BYTE PTR _dbv$85343[ebp], 252 ; 000000fcH
  0060d	ff 50 24	 call	 DWORD PTR [eax+36]
  00610	83 c4 0c	 add	 esp, 12			; 0000000cH
  00613	85 c0		 test	 eax, eax
  00615	75 28		 jne	 SHORT $L86406

; 466  : 				SetDlgItemText(hwndDlg, IDC_FILE_PROXY_HOST, dbv.ptszVal);

  00617	ff 75 d8	 push	 DWORD PTR _dbv$85343[ebp+4]
  0061a	68 57 04 00 00	 push	 1111			; 00000457H
  0061f	53		 push	 ebx
  00620	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextW@12

; 467  : 				DBFreeVariant(&dbv);

  00626	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85343[ebp]
  00629	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  0062e	50		 push	 eax
  0062f	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00634	6a 00		 push	 0
  00636	57		 push	 edi
  00637	ff 50 24	 call	 DWORD PTR [eax+36]
  0063a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0063d	eb 05		 jmp	 SHORT $L86251
$L86406:
  0063f	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
$L86251:

; 468  : 			}
; 469  : 			SetDlgItemInt(hwndDlg, IDC_FILE_PROXY_PORT, DBGetContactSettingWord(NULL, proto->iface.m_szModuleName, "FileProxyPort", 0), FALSE);

  00644	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00647	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86256[ebp+4], OFFSET FLAT:??_C@_0O@MHC@FileProxyPort?$AA@ ; `string'
  0064e	89 45 f4	 mov	 DWORD PTR _cgs$86256[ebp], eax
  00651	8d 45 e8	 lea	 eax, DWORD PTR _dbv$86255[ebp]
  00654	89 45 fc	 mov	 DWORD PTR _cgs$86256[ebp+8], eax
  00657	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86256[ebp]
  0065a	50		 push	 eax
  0065b	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00660	6a 00		 push	 0
  00662	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00667	ff 50 24	 call	 DWORD PTR [eax+36]
  0066a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0066d	85 c0		 test	 eax, eax
  0066f	74 04		 je	 SHORT $L86257
  00671	33 c0		 xor	 eax, eax
  00673	eb 04		 jmp	 SHORT $L86254
$L86257:
  00675	0f b7 45 ec	 movzx	 eax, WORD PTR _dbv$86255[ebp+4]
$L86254:
  00679	6a 00		 push	 0
  0067b	50		 push	 eax
  0067c	68 59 04 00 00	 push	 1113			; 00000459H
  00681	53		 push	 ebx
  00682	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemInt@16

; 470  : 			if (!DBGetContactSettingTString(NULL, proto->iface.m_szModuleName, "FileProxyUsername", &dbv)) {

  00688	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0068b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86265[ebp+4], OFFSET FLAT:??_C@_0BC@CBEM@FileProxyUsername?$AA@ ; `string'
  00692	89 45 f4	 mov	 DWORD PTR _cgs$86265[ebp], eax
  00695	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85343[ebp]
  00698	89 45 fc	 mov	 DWORD PTR _cgs$86265[ebp+8], eax
  0069b	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86265[ebp]
  0069e	50		 push	 eax
  0069f	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  006a4	6a 00		 push	 0
  006a6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@BEPM@DB?1Contact?1GetSettingStr?$AA@ ; `string'
  006ab	c6 45 d4 fc	 mov	 BYTE PTR _dbv$85343[ebp], 252 ; 000000fcH
  006af	ff 50 24	 call	 DWORD PTR [eax+36]
  006b2	83 c4 0c	 add	 esp, 12			; 0000000cH
  006b5	85 c0		 test	 eax, eax
  006b7	75 21		 jne	 SHORT $L86271

; 471  : 				SetDlgItemText(hwndDlg, IDC_FILE_PROXY_USER, dbv.ptszVal);

  006b9	ff 75 d8	 push	 DWORD PTR _dbv$85343[ebp+4]
  006bc	68 5b 04 00 00	 push	 1115			; 0000045bH
  006c1	53		 push	 ebx
  006c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextW@12

; 472  : 				DBFreeVariant(&dbv);

  006c8	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85343[ebp]
  006cb	50		 push	 eax
  006cc	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  006d1	6a 00		 push	 0
  006d3	57		 push	 edi
  006d4	ff 50 24	 call	 DWORD PTR [eax+36]
  006d7	83 c4 0c	 add	 esp, 12			; 0000000cH
$L86271:

; 473  : 			}
; 474  : 			if (!DBGetContactSetting(NULL, proto->iface.m_szModuleName, "FileProxyPassword", &dbv)) {

  006da	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  006dd	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86276[ebp+4], OFFSET FLAT:??_C@_0BC@EIFA@FileProxyPassword?$AA@ ; `string'
  006e4	89 45 f4	 mov	 DWORD PTR _cgs$86276[ebp], eax
  006e7	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85343[ebp]
  006ea	89 45 fc	 mov	 DWORD PTR _cgs$86276[ebp+8], eax
  006ed	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86276[ebp]
  006f0	50		 push	 eax
  006f1	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  006f6	6a 00		 push	 0
  006f8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  006fd	ff 50 24	 call	 DWORD PTR [eax+36]
  00700	83 c4 0c	 add	 esp, 12			; 0000000cH
  00703	85 c0		 test	 eax, eax
  00705	0f 85 36 05 00
	00		 jne	 $L86281

; 475  : 				CallService(MS_DB_CRYPT_DECODESTRING, strlen(dbv.pszVal)+1, (LPARAM) dbv.pszVal);

  0070b	ff 75 d8	 push	 DWORD PTR _dbv$85343[ebp+4]
  0070e	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00713	ff 75 d8	 push	 DWORD PTR _dbv$85343[ebp+4]
  00716	8d 70 24	 lea	 esi, DWORD PTR [eax+36]
  00719	e8 00 00 00 00	 call	 _strlen
  0071e	59		 pop	 ecx
  0071f	40		 inc	 eax
  00720	50		 push	 eax
  00721	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@PHIF@DB?1Crypt?1DecodeString?$AA@ ; `string'
  00726	ff 16		 call	 DWORD PTR [esi]
  00728	83 c4 0c	 add	 esp, 12			; 0000000cH

; 476  : 				SetDlgItemTextA(hwndDlg, IDC_FILE_PROXY_PASSWORD, dbv.pszVal);

  0072b	ff 75 d8	 push	 DWORD PTR _dbv$85343[ebp+4]
  0072e	68 5e 04 00 00	 push	 1118			; 0000045eH
  00733	53		 push	 ebx
  00734	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 477  : 				DBFreeVariant(&dbv);

  0073a	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85343[ebp]
  0073d	50		 push	 eax
  0073e	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00743	6a 00		 push	 0
  00745	57		 push	 edi
  00746	ff 50 24	 call	 DWORD PTR [eax+36]
  00749	83 c4 0c	 add	 esp, 12			; 0000000cH

; 478  : 			}
; 479  : 			return TRUE;

  0074c	e9 f0 04 00 00	 jmp	 $L86281
$L85415:

; 523  : 	case WM_NOTIFY:
; 524  : 		{
; 525  : 			switch (((LPNMHDR) lParam)->code) {

  00751	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  00754	81 78 08 36 ff
	ff ff		 cmp	 DWORD PTR [eax+8], -202	; ffffff36H
  0075b	74 07		 je	 SHORT $L85421
$L85418:

; 574  : 				}
; 575  : 			}
; 576  : 		}
; 577  : 		break;
; 578  : 	case WM_DESTROY:
; 579  : 		break;
; 580  : 	}
; 581  : 
; 582  : 	return FALSE;

  0075d	33 c0		 xor	 eax, eax
  0075f	e9 e0 04 00 00	 jmp	 $L85333
$L85421:

; 526  : 			case PSN_APPLY:
; 527  : 				{
; 528  : 					WORD port;
; 529  : 					BOOL useEncryption;
; 530  : 					BOOL reconnectRequired = FALSE;

  00764	83 65 14 00	 and	 DWORD PTR _reconnectRequired$85424[ebp], 0

; 531  : 					DBVARIANT dbv;
; 532  : 					GetDlgItemTextA(hwndDlg, IDC_EDIT_LOGIN_SERVER, text, sizeof(text));

  00768	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  0076e	68 00 01 00 00	 push	 256			; 00000100H
  00773	50		 push	 eax
  00774	68 ec 03 00 00	 push	 1004			; 000003ecH
  00779	53		 push	 ebx
  0077a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 533  : 					if (DBGetContactSetting(NULL, proto->iface.m_szModuleName, "LoginServer", &dbv) || strcmp(text, dbv.pszVal))

  00780	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00783	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0M@IBOM@LoginServer?$AA@ ; `string'
  00788	89 45 f4	 mov	 DWORD PTR _cgs$86286[ebp], eax
  0078b	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85425[ebp]
  0078e	89 45 fc	 mov	 DWORD PTR _cgs$86286[ebp+8], eax
  00791	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86286[ebp]
  00794	50		 push	 eax
  00795	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0079a	6a 00		 push	 0
  0079c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  007a1	89 75 f8	 mov	 DWORD PTR _cgs$86286[ebp+4], esi
  007a4	ff 50 24	 call	 DWORD PTR [eax+36]
  007a7	83 c4 0c	 add	 esp, 12			; 0000000cH
  007aa	85 c0		 test	 eax, eax
  007ac	75 15		 jne	 SHORT $L85428
  007ae	ff 75 d8	 push	 DWORD PTR _dbv$85425[ebp+4]
  007b1	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  007b7	50		 push	 eax
  007b8	e8 00 00 00 00	 call	 _strcmp
  007bd	59		 pop	 ecx
  007be	85 c0		 test	 eax, eax
  007c0	59		 pop	 ecx
  007c1	74 07		 je	 SHORT $L85427
$L85428:

; 534  : 						reconnectRequired = TRUE;

  007c3	c7 45 14 01 00
	00 00		 mov	 DWORD PTR _reconnectRequired$85424[ebp], 1
$L85427:

; 535  : 					if (dbv.pszVal != NULL)	DBFreeVariant(&dbv);

  007ca	83 7d d8 00	 cmp	 DWORD PTR _dbv$85425[ebp+4], 0
  007ce	74 16		 je	 SHORT $L86291
  007d0	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85425[ebp]
  007d3	50		 push	 eax
  007d4	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  007d9	6a 00		 push	 0
  007db	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  007e0	ff 50 24	 call	 DWORD PTR [eax+36]
  007e3	83 c4 0c	 add	 esp, 12			; 0000000cH
$L86291:

; 536  : 					DBWriteContactSettingString(NULL, proto->iface.m_szModuleName, "LoginServer", strlwr(text));

  007e6	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  007ec	50		 push	 eax
  007ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strlwr
  007f3	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  007f6	80 4d e8 ff	 or	 BYTE PTR _cws$86295[ebp+8], 255 ; 000000ffH
  007fa	89 45 ec	 mov	 DWORD PTR _cws$86295[ebp+12], eax
  007fd	8d 45 e0	 lea	 eax, DWORD PTR _cws$86295[ebp]
  00800	89 75 e4	 mov	 DWORD PTR _cws$86295[ebp+4], esi
  00803	50		 push	 eax
  00804	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00809	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ ; `string'
  0080e	6a 00		 push	 0
  00810	56		 push	 esi
  00811	89 4d e0	 mov	 DWORD PTR _cws$86295[ebp], ecx
  00814	ff 50 24	 call	 DWORD PTR [eax+36]
  00817	83 c4 10	 add	 esp, 16			; 00000010H

; 537  : 
; 538  : 					GetDlgItemTextA(hwndDlg, IDC_HOST, text, sizeof(text));

  0081a	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00820	68 00 01 00 00	 push	 256			; 00000100H
  00825	50		 push	 eax
  00826	68 13 04 00 00	 push	 1043			; 00000413H
  0082b	53		 push	 ebx
  0082c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 539  : 					if (DBGetContactSetting(NULL, proto->iface.m_szModuleName, "ManualHost", &dbv) || strcmp(text, dbv.pszVal))

  00832	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00835	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86303[ebp+4], OFFSET FLAT:??_C@_0L@FKFD@ManualHost?$AA@ ; `string'
  0083c	89 45 f4	 mov	 DWORD PTR _cgs$86303[ebp], eax
  0083f	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85425[ebp]
  00842	89 45 fc	 mov	 DWORD PTR _cgs$86303[ebp+8], eax
  00845	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86303[ebp]
  00848	50		 push	 eax
  00849	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0084e	6a 00		 push	 0
  00850	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00855	ff 50 24	 call	 DWORD PTR [eax+36]
  00858	83 c4 0c	 add	 esp, 12			; 0000000cH
  0085b	85 c0		 test	 eax, eax
  0085d	75 15		 jne	 SHORT $L85434
  0085f	ff 75 d8	 push	 DWORD PTR _dbv$85425[ebp+4]
  00862	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00868	50		 push	 eax
  00869	e8 00 00 00 00	 call	 _strcmp
  0086e	59		 pop	 ecx
  0086f	85 c0		 test	 eax, eax
  00871	59		 pop	 ecx
  00872	74 07		 je	 SHORT $L85433
$L85434:

; 540  : 						reconnectRequired = TRUE;

  00874	c7 45 14 01 00
	00 00		 mov	 DWORD PTR _reconnectRequired$85424[ebp], 1
$L85433:

; 541  : 					if (dbv.pszVal != NULL)	DBFreeVariant(&dbv);

  0087b	83 7d d8 00	 cmp	 DWORD PTR _dbv$85425[ebp+4], 0
  0087f	74 16		 je	 SHORT $L86308
  00881	8d 45 d4	 lea	 eax, DWORD PTR _dbv$85425[ebp]
  00884	50		 push	 eax
  00885	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0088a	6a 00		 push	 0
  0088c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  00891	ff 50 24	 call	 DWORD PTR [eax+36]
  00894	83 c4 0c	 add	 esp, 12			; 0000000cH
$L86308:

; 542  : 					DBWriteContactSettingString(NULL, proto->iface.m_szModuleName, "ManualHost", text);

  00897	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  0089a	80 4d e8 ff	 or	 BYTE PTR _cws$86312[ebp+8], 255 ; 000000ffH
  0089e	89 45 e0	 mov	 DWORD PTR _cws$86312[ebp], eax
  008a1	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  008a7	89 45 ec	 mov	 DWORD PTR _cws$86312[ebp+12], eax
  008aa	8d 45 e0	 lea	 eax, DWORD PTR _cws$86312[ebp]
  008ad	50		 push	 eax
  008ae	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  008b3	6a 00		 push	 0
  008b5	56		 push	 esi
  008b6	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cws$86312[ebp+4], OFFSET FLAT:??_C@_0L@FKFD@ManualHost?$AA@ ; `string'
  008bd	ff 50 24	 call	 DWORD PTR [eax+36]
  008c0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 543  : 
; 544  : 					port = (WORD) GetDlgItemInt(hwndDlg, IDC_HOSTPORT, NULL, FALSE);

  008c3	6a 00		 push	 0
  008c5	6a 00		 push	 0
  008c7	68 14 04 00 00	 push	 1044			; 00000414H
  008cc	53		 push	 ebx
  008cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemInt@16
  008d3	89 45 10	 mov	 DWORD PTR _port$85422[ebp], eax

; 545  : 					if (DBGetContactSettingWord(NULL, proto->iface.m_szModuleName, "ManualPort", TLEN_DEFAULT_PORT) != port)

  008d6	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  008d9	89 45 f4	 mov	 DWORD PTR _cgs$86319[ebp], eax
  008dc	8d 45 e8	 lea	 eax, DWORD PTR _dbv$86318[ebp]
  008df	89 45 fc	 mov	 DWORD PTR _cgs$86319[ebp+8], eax
  008e2	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86319[ebp]
  008e5	50		 push	 eax
  008e6	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  008eb	6a 00		 push	 0
  008ed	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  008f2	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86319[ebp+4], OFFSET FLAT:??_C@_0L@DDEI@ManualPort?$AA@ ; `string'
  008f9	ff 50 24	 call	 DWORD PTR [eax+36]
  008fc	83 c4 0c	 add	 esp, 12			; 0000000cH
  008ff	b9 bb 01 00 00	 mov	 ecx, 443		; 000001bbH
  00904	85 c0		 test	 eax, eax
  00906	75 04		 jne	 SHORT $L86317
  00908	0f b7 4d ec	 movzx	 ecx, WORD PTR _dbv$86318[ebp+4]
$L86317:
  0090c	8b 45 10	 mov	 eax, DWORD PTR _port$85422[ebp]
  0090f	0f b7 d0	 movzx	 edx, ax
  00912	3b ca		 cmp	 ecx, edx
  00914	74 07		 je	 SHORT $L85441

; 546  : 						reconnectRequired = TRUE;

  00916	c7 45 14 01 00
	00 00		 mov	 DWORD PTR _reconnectRequired$85424[ebp], 1
$L85441:

; 547  : 					DBWriteContactSettingWord(NULL, proto->iface.m_szModuleName, "ManualPort", port);

  0091d	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00920	66 89 45 ec	 mov	 WORD PTR _cws$86327[ebp+12], ax
  00924	8d 45 e0	 lea	 eax, DWORD PTR _cws$86327[ebp]
  00927	89 4d e0	 mov	 DWORD PTR _cws$86327[ebp], ecx
  0092a	50		 push	 eax
  0092b	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00930	6a 00		 push	 0
  00932	56		 push	 esi
  00933	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cws$86327[ebp+4], OFFSET FLAT:??_C@_0L@DDEI@ManualPort?$AA@ ; `string'
  0093a	c6 45 e8 02	 mov	 BYTE PTR _cws$86327[ebp+8], 2
  0093e	ff 50 24	 call	 DWORD PTR [eax+36]
  00941	83 c4 0c	 add	 esp, 12			; 0000000cH

; 548  : 
; 549  : 					proto->tlenOptions.sendKeepAlive = IsDlgButtonChecked(hwndDlg, IDC_KEEPALIVE);

  00944	68 12 04 00 00	 push	 1042			; 00000412H
  00949	53		 push	 ebx
  0094a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  00950	89 87 f0 01 00
	00		 mov	 DWORD PTR [edi+496], eax

; 550  : 					DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "KeepAlive", (BYTE) proto->tlenOptions.sendKeepAlive);

  00956	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00959	89 45 e0	 mov	 DWORD PTR _cws$86333[ebp], eax
  0095c	8a 87 f0 01 00
	00		 mov	 al, BYTE PTR [edi+496]
  00962	88 45 ec	 mov	 BYTE PTR _cws$86333[ebp+12], al
  00965	8d 45 e0	 lea	 eax, DWORD PTR _cws$86333[ebp]
  00968	50		 push	 eax
  00969	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0096e	6a 00		 push	 0
  00970	56		 push	 esi
  00971	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cws$86333[ebp+4], OFFSET FLAT:??_C@_09LNJJ@KeepAlive?$AA@ ; `string'
  00978	c6 45 e8 01	 mov	 BYTE PTR _cws$86333[ebp+8], 1
  0097c	ff 50 24	 call	 DWORD PTR [eax+36]
  0097f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 551  : 
; 552  : 					useEncryption = IsDlgButtonChecked(hwndDlg, IDC_USE_SSL);

  00982	68 15 04 00 00	 push	 1045			; 00000415H
  00987	53		 push	 ebx
  00988	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  0098e	89 45 10	 mov	 DWORD PTR _useEncryption$85423[ebp], eax

; 553  : 					if (DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "UseEncryption", TRUE) != useEncryption)

  00991	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00994	89 45 f4	 mov	 DWORD PTR _cgs$86341[ebp], eax
  00997	8d 45 e8	 lea	 eax, DWORD PTR _dbv$86340[ebp]
  0099a	89 45 fc	 mov	 DWORD PTR _cgs$86341[ebp+8], eax
  0099d	8d 45 f4	 lea	 eax, DWORD PTR _cgs$86341[ebp]
  009a0	50		 push	 eax
  009a1	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  009a6	6a 00		 push	 0
  009a8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  009ad	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$86341[ebp+4], OFFSET FLAT:??_C@_0O@CIMH@UseEncryption?$AA@ ; `string'
  009b4	ff 50 24	 call	 DWORD PTR [eax+36]
  009b7	83 c4 0c	 add	 esp, 12			; 0000000cH
  009ba	85 c0		 test	 eax, eax
  009bc	74 05		 je	 SHORT $L86342
  009be	6a 01		 push	 1
  009c0	59		 pop	 ecx
  009c1	eb 04		 jmp	 SHORT $L86339
$L86342:
  009c3	0f b6 4d ec	 movzx	 ecx, BYTE PTR _dbv$86340[ebp+4]
$L86339:
  009c7	8b 45 10	 mov	 eax, DWORD PTR _useEncryption$85423[ebp]
  009ca	3b c8		 cmp	 ecx, eax
  009cc	74 07		 je	 SHORT $L85446

; 554  : 						reconnectRequired = TRUE;

  009ce	c7 45 14 01 00
	00 00		 mov	 DWORD PTR _reconnectRequired$85424[ebp], 1
$L85446:

; 555  : 					DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "UseEncryption", (BYTE) useEncryption);

  009d5	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  009d8	88 45 ec	 mov	 BYTE PTR _cws$86349[ebp+12], al
  009db	8d 45 e0	 lea	 eax, DWORD PTR _cws$86349[ebp]
  009de	89 4d e0	 mov	 DWORD PTR _cws$86349[ebp], ecx
  009e1	50		 push	 eax
  009e2	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  009e7	6a 00		 push	 0
  009e9	56		 push	 esi
  009ea	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cws$86349[ebp+4], OFFSET FLAT:??_C@_0O@CIMH@UseEncryption?$AA@ ; `string'
  009f1	c6 45 e8 01	 mov	 BYTE PTR _cws$86349[ebp+8], 1
  009f5	ff 50 24	 call	 DWORD PTR [eax+36]
  009f8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 556  : 
; 557  : 					DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "VisibilitySupport", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_VISIBILITY_SUPPORT));

  009fb	68 f7 03 00 00	 push	 1015			; 000003f7H
  00a00	53		 push	 ebx
  00a01	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  00a07	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00a0a	88 45 ec	 mov	 BYTE PTR _cws$86355[ebp+12], al
  00a0d	8d 45 e0	 lea	 eax, DWORD PTR _cws$86355[ebp]
  00a10	89 4d e0	 mov	 DWORD PTR _cws$86355[ebp], ecx
  00a13	50		 push	 eax
  00a14	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00a19	6a 00		 push	 0
  00a1b	56		 push	 esi
  00a1c	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cws$86355[ebp+4], OFFSET FLAT:??_C@_0BC@FEOM@VisibilitySupport?$AA@ ; `string'
  00a23	c6 45 e8 01	 mov	 BYTE PTR _cws$86355[ebp+8], 1
  00a27	ff 50 24	 call	 DWORD PTR [eax+36]
  00a2a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 558  : 					// File transfer options
; 559  : 					DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "UseFileProxy", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_FILE_USE_PROXY));

  00a2d	68 5f 04 00 00	 push	 1119			; 0000045fH
  00a32	53		 push	 ebx
  00a33	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  00a39	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00a3c	88 45 ec	 mov	 BYTE PTR _cws$86362[ebp+12], al
  00a3f	8d 45 e0	 lea	 eax, DWORD PTR _cws$86362[ebp]
  00a42	89 4d e0	 mov	 DWORD PTR _cws$86362[ebp], ecx
  00a45	50		 push	 eax
  00a46	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00a4b	6a 00		 push	 0
  00a4d	56		 push	 esi
  00a4e	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cws$86362[ebp+4], OFFSET FLAT:??_C@_0N@BODO@UseFileProxy?$AA@ ; `string'
  00a55	c6 45 e8 01	 mov	 BYTE PTR _cws$86362[ebp+8], 1
  00a59	ff 50 24	 call	 DWORD PTR [eax+36]
  00a5c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 560  : 					DBWriteContactSettingWord(NULL, proto->iface.m_szModuleName, "FileProxyType", (WORD) SendDlgItemMessage(hwndDlg, IDC_FILE_PROXY_TYPE, CB_GETCURSEL, 0, 0));

  00a5f	6a 00		 push	 0
  00a61	6a 00		 push	 0
  00a63	68 47 01 00 00	 push	 327			; 00000147H
  00a68	68 55 04 00 00	 push	 1109			; 00000455H
  00a6d	53		 push	 ebx
  00a6e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageW@20
  00a74	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00a77	66 89 45 ec	 mov	 WORD PTR _cws$86369[ebp+12], ax
  00a7b	8d 45 e0	 lea	 eax, DWORD PTR _cws$86369[ebp]
  00a7e	89 4d e0	 mov	 DWORD PTR _cws$86369[ebp], ecx
  00a81	50		 push	 eax
  00a82	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00a87	6a 00		 push	 0
  00a89	56		 push	 esi
  00a8a	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cws$86369[ebp+4], OFFSET FLAT:??_C@_0O@HKJF@FileProxyType?$AA@ ; `string'
  00a91	c6 45 e8 02	 mov	 BYTE PTR _cws$86369[ebp+8], 2
  00a95	ff 50 24	 call	 DWORD PTR [eax+36]
  00a98	83 c4 0c	 add	 esp, 12			; 0000000cH

; 561  : 					GetDlgItemTextA(hwndDlg, IDC_FILE_PROXY_HOST, text, sizeof(text));

  00a9b	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00aa1	68 00 01 00 00	 push	 256			; 00000100H
  00aa6	50		 push	 eax
  00aa7	68 57 04 00 00	 push	 1111			; 00000457H
  00aac	53		 push	 ebx
  00aad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 562  : 					DBWriteContactSettingString(NULL, proto->iface.m_szModuleName, "FileProxyHost", text);

  00ab3	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00ab6	80 4d e8 ff	 or	 BYTE PTR _cws$86376[ebp+8], 255 ; 000000ffH
  00aba	89 45 e0	 mov	 DWORD PTR _cws$86376[ebp], eax
  00abd	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00ac3	89 45 ec	 mov	 DWORD PTR _cws$86376[ebp+12], eax
  00ac6	8d 45 e0	 lea	 eax, DWORD PTR _cws$86376[ebp]
  00ac9	50		 push	 eax
  00aca	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00acf	6a 00		 push	 0
  00ad1	56		 push	 esi
  00ad2	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cws$86376[ebp+4], OFFSET FLAT:??_C@_0O@GFGJ@FileProxyHost?$AA@ ; `string'
  00ad9	ff 50 24	 call	 DWORD PTR [eax+36]
  00adc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 563  : 					DBWriteContactSettingWord(NULL, proto->iface.m_szModuleName, "FileProxyPort", (WORD) GetDlgItemInt(hwndDlg, IDC_FILE_PROXY_PORT, NULL, FALSE));

  00adf	6a 00		 push	 0
  00ae1	6a 00		 push	 0
  00ae3	68 59 04 00 00	 push	 1113			; 00000459H
  00ae8	53		 push	 ebx
  00ae9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemInt@16
  00aef	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00af2	66 89 45 ec	 mov	 WORD PTR _cws$86382[ebp+12], ax
  00af6	8d 45 e0	 lea	 eax, DWORD PTR _cws$86382[ebp]
  00af9	89 4d e0	 mov	 DWORD PTR _cws$86382[ebp], ecx
  00afc	50		 push	 eax
  00afd	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00b02	6a 00		 push	 0
  00b04	56		 push	 esi
  00b05	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cws$86382[ebp+4], OFFSET FLAT:??_C@_0O@MHC@FileProxyPort?$AA@ ; `string'
  00b0c	c6 45 e8 02	 mov	 BYTE PTR _cws$86382[ebp+8], 2
  00b10	ff 50 24	 call	 DWORD PTR [eax+36]
  00b13	83 c4 0c	 add	 esp, 12			; 0000000cH

; 564  : 					DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "FileProxyAuth", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_FILE_PROXY_USE_AUTH));

  00b16	68 5a 04 00 00	 push	 1114			; 0000045aH
  00b1b	53		 push	 ebx
  00b1c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  00b22	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00b25	88 45 ec	 mov	 BYTE PTR _cws$86389[ebp+12], al
  00b28	8d 45 e0	 lea	 eax, DWORD PTR _cws$86389[ebp]
  00b2b	89 4d e0	 mov	 DWORD PTR _cws$86389[ebp], ecx
  00b2e	50		 push	 eax
  00b2f	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00b34	6a 00		 push	 0
  00b36	56		 push	 esi
  00b37	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cws$86389[ebp+4], OFFSET FLAT:??_C@_0O@EJJI@FileProxyAuth?$AA@ ; `string'
  00b3e	c6 45 e8 01	 mov	 BYTE PTR _cws$86389[ebp+8], 1
  00b42	ff 50 24	 call	 DWORD PTR [eax+36]
  00b45	83 c4 0c	 add	 esp, 12			; 0000000cH

; 565  : 					GetDlgItemTextA(hwndDlg, IDC_FILE_PROXY_USER, text, sizeof(text));

  00b48	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00b4e	68 00 01 00 00	 push	 256			; 00000100H
  00b53	50		 push	 eax
  00b54	68 5b 04 00 00	 push	 1115			; 0000045bH
  00b59	53		 push	 ebx
  00b5a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 566  : 					DBWriteContactSettingString(NULL, proto->iface.m_szModuleName, "FileProxyUsername", text);

  00b60	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00b63	80 4d e8 ff	 or	 BYTE PTR _cws$86396[ebp+8], 255 ; 000000ffH
  00b67	89 45 e0	 mov	 DWORD PTR _cws$86396[ebp], eax
  00b6a	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00b70	89 45 ec	 mov	 DWORD PTR _cws$86396[ebp+12], eax
  00b73	8d 45 e0	 lea	 eax, DWORD PTR _cws$86396[ebp]
  00b76	50		 push	 eax
  00b77	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00b7c	6a 00		 push	 0
  00b7e	56		 push	 esi
  00b7f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cws$86396[ebp+4], OFFSET FLAT:??_C@_0BC@CBEM@FileProxyUsername?$AA@ ; `string'
  00b86	ff 50 24	 call	 DWORD PTR [eax+36]
  00b89	83 c4 0c	 add	 esp, 12			; 0000000cH

; 567  : 					GetDlgItemTextA(hwndDlg, IDC_FILE_PROXY_PASSWORD, text, sizeof(text));

  00b8c	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00b92	68 00 01 00 00	 push	 256			; 00000100H
  00b97	50		 push	 eax
  00b98	68 5e 04 00 00	 push	 1118			; 0000045eH
  00b9d	53		 push	 ebx
  00b9e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 568  : 					CallService(MS_DB_CRYPT_ENCODESTRING, sizeof(text), (LPARAM) text);

  00ba4	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00baa	50		 push	 eax
  00bab	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00bb0	68 00 01 00 00	 push	 256			; 00000100H
  00bb5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@PBIB@DB?1Crypt?1EncodeString?$AA@ ; `string'
  00bba	ff 50 24	 call	 DWORD PTR [eax+36]

; 569  : 					DBWriteContactSettingString(NULL, proto->iface.m_szModuleName, "FileProxyPassword", text);

  00bbd	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00bc0	80 4d e8 ff	 or	 BYTE PTR _cws$86402[ebp+8], 255 ; 000000ffH
  00bc4	89 45 e0	 mov	 DWORD PTR _cws$86402[ebp], eax
  00bc7	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  00bcd	89 45 ec	 mov	 DWORD PTR _cws$86402[ebp+12], eax
  00bd0	8d 45 e0	 lea	 eax, DWORD PTR _cws$86402[ebp]
  00bd3	50		 push	 eax
  00bd4	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00bd9	6a 00		 push	 0
  00bdb	56		 push	 esi
  00bdc	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cws$86402[ebp+4], OFFSET FLAT:??_C@_0BC@EIFA@FileProxyPassword?$AA@ ; `string'
  00be3	ff 50 24	 call	 DWORD PTR [eax+36]
  00be6	83 c4 18	 add	 esp, 24			; 00000018H

; 570  : 					if (reconnectRequired && proto->jabberConnected)

  00be9	83 7d 14 00	 cmp	 DWORD PTR _reconnectRequired$85424[ebp], 0
  00bed	74 48		 je	 SHORT $L85464
  00bef	83 bf 7c 01 00
	00 00		 cmp	 DWORD PTR [edi+380], 0
  00bf6	74 3f		 je	 SHORT $L85464

; 571  : 						MessageBox(hwndDlg, TranslateT("These changes will take effect the next time you connect to the Tlen network."), TranslateT("Tlen Protocol Option"), MB_OK|MB_SETFOREGROUND);

  00bf8	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00bfd	68 00 00 01 00	 push	 65536			; 00010000H
  00c02	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1CK@NMED@?$AAT?$AAl?$AAe?$AAn?$AA?5?$AAP?$AAr?$AAo?$AAt?$AAo?$AAc?$AAo?$AAl?$AA?5?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn@ ; `string'
  00c07	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  00c0c	68 00 10 00 00	 push	 4096			; 00001000H
  00c11	56		 push	 esi
  00c12	ff 50 24	 call	 DWORD PTR [eax+36]
  00c15	83 c4 0c	 add	 esp, 12			; 0000000cH
  00c18	50		 push	 eax
  00c19	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00c1e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1JM@BOLK@?$AAT?$AAh?$AAe?$AAs?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AAs?$AA?5?$AAw?$AAi?$AAl?$AAl?$AA?5?$AAt@ ; `string'
  00c23	68 00 10 00 00	 push	 4096			; 00001000H
  00c28	56		 push	 esi
  00c29	ff 50 24	 call	 DWORD PTR [eax+36]
  00c2c	83 c4 0c	 add	 esp, 12			; 0000000cH
  00c2f	50		 push	 eax
  00c30	53		 push	 ebx
  00c31	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxW@16
$L85464:

; 572  : 					ApplyChanges(proto, 4);

  00c37	6a 04		 push	 4
  00c39	57		 push	 edi
  00c3a	e8 00 00 00 00	 call	 _ApplyChanges
  00c3f	59		 pop	 ecx
  00c40	59		 pop	 ecx
$L86281:

; 573  : 					return TRUE;

  00c41	6a 01		 push	 1
  00c43	58		 pop	 eax
$L85333:
  00c44	5f		 pop	 edi
  00c45	5e		 pop	 esi
  00c46	5b		 pop	 ebx

; 583  : }

  00c47	c9		 leave
  00c48	c2 10 00	 ret	 16			; 00000010H
_TlenAdvOptDlgProc@16 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BJ@GNEH@LangPack?1TranslateDialog?$AA@	; `string'
;	COMDAT ??_C@_0BJ@GNEH@LangPack?1TranslateDialog?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_langpack.h
_DATA	SEGMENT
??_C@_0BJ@GNEH@LangPack?1TranslateDialog?$AA@ DB 'LangPack/TranslateDialo'
	DB	'g', 00H					; `string'
_DATA	ENDS
;	COMDAT _TranslateDialogDefault
_TEXT	SEGMENT
_hwndDlg$ = 8
_lptd$ = -16
_TranslateDialogDefault PROC NEAR			; COMDAT

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 82   : 	LANGPACKTRANSLATEDIALOG lptd;
; 83   : 	lptd.cbSize=sizeof(lptd);
; 84   : 	lptd.flags=0;
; 85   : 	lptd.hwndDlg=hwndDlg;

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _hwndDlg$[ebp]
  00009	33 c0		 xor	 eax, eax
  0000b	89 4d f8	 mov	 DWORD PTR _lptd$[ebp+8], ecx

; 86   : 	lptd.ignoreControls=NULL;
; 87   : 	return CallService(MS_LANGPACK_TRANSLATEDIALOG,0,(LPARAM)&lptd);

  0000e	8d 4d f0	 lea	 ecx, DWORD PTR _lptd$[ebp]
  00011	51		 push	 ecx
  00012	89 45 f4	 mov	 DWORD PTR _lptd$[ebp+4], eax
  00015	89 45 fc	 mov	 DWORD PTR _lptd$[ebp+12], eax
  00018	50		 push	 eax
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0001e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@GNEH@LangPack?1TranslateDialog?$AA@ ; `string'
  00023	c7 45 f0 10 00
	00 00		 mov	 DWORD PTR _lptd$[ebp], 16 ; 00000010H
  0002a	ff 50 24	 call	 DWORD PTR [eax+36]
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 88   : }

  00030	c9		 leave
  00031	c3		 ret	 0
_TranslateDialogDefault ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BB@GMOL@MailPopupEnabled?$AA@		; `string'
PUBLIC	??_C@_0O@CNMO@MailPopupBack?$AA@		; `string'
PUBLIC	??_C@_0O@KDHG@MailPopupText?$AA@		; `string'
PUBLIC	??_C@_0P@ECBA@MailPopupDelay?$AA@		; `string'
PUBLIC	??_C@_0BD@JHKD@MailPopupDelayMode?$AA@		; `string'
PUBLIC	??_C@_07FONL@?$CFs?5mail?$AA@			; `string'
PUBLIC	??_C@_0CD@JKGL@From?3?5test?$EAtest?4test?6Subject?3?5te@ ; `string'
EXTRN	__imp___snprintf:NEAR
;	COMDAT ??_C@_0BB@GMOL@MailPopupEnabled?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_0BB@GMOL@MailPopupEnabled?$AA@ DB 'MailPopupEnabled', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@CNMO@MailPopupBack?$AA@
_DATA	SEGMENT
??_C@_0O@CNMO@MailPopupBack?$AA@ DB 'MailPopupBack', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@KDHG@MailPopupText?$AA@
_DATA	SEGMENT
??_C@_0O@KDHG@MailPopupText?$AA@ DB 'MailPopupText', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@ECBA@MailPopupDelay?$AA@
_DATA	SEGMENT
??_C@_0P@ECBA@MailPopupDelay?$AA@ DB 'MailPopupDelay', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@JHKD@MailPopupDelayMode?$AA@
_DATA	SEGMENT
??_C@_0BD@JHKD@MailPopupDelayMode?$AA@ DB 'MailPopupDelayMode', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_07FONL@?$CFs?5mail?$AA@
_DATA	SEGMENT
??_C@_07FONL@?$CFs?5mail?$AA@ DB '%s mail', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0CD@JKGL@From?3?5test?$EAtest?4test?6Subject?3?5te@
_DATA	SEGMENT
??_C@_0CD@JKGL@From?3?5test?$EAtest?4test?6Subject?3?5te@ DB 'From: test@'
	DB	'test.test', 0aH, 'Subject: test', 00H	; `string'
_DATA	ENDS
;	COMDAT _TlenPopupsDlgProc@16
_TEXT	SEGMENT
_dbv$86415 = -12
_cgs$86416 = -32
_dbv$86424 = -12
_cgs$86425 = -32
_dbv$86433 = -12
_cgs$86434 = -32
_dbv$86442 = -12
_cgs$86443 = -32
_dbv$86450 = -12
_cgs$86452 = -32
_cws$86460 = -20
_cws$86467 = -20
_cws$86474 = -20
_cws$86481 = -20
_cws$86488 = -20
_hwndDlg$ = 8
_msg$ = 12
_wParam$ = 16
_lParam$ = 20
_delay$85535 = 20
_title$85536 = -288
_delayMode$85555 = 23
_TlenPopupsDlgProc@16 PROC NEAR				; COMDAT

; 616  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 20 01 00
	00		 sub	 esp, 288		; 00000120H
  00009	53		 push	 ebx

; 617  :     TlenProtocol *proto = (TlenProtocol *)GetWindowLong(hwndDlg, GWL_USERDATA);

  0000a	8b 5d 08	 mov	 ebx, DWORD PTR _hwndDlg$[ebp]
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	6a eb		 push	 -21			; ffffffebH
  00011	53		 push	 ebx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongW@8
  00018	8b f8		 mov	 edi, eax

; 618  : 	switch (msg) {

  0001a	8b 45 0c	 mov	 eax, DWORD PTR _msg$[ebp]
  0001d	83 e8 4e	 sub	 eax, 78			; 0000004eH
  00020	0f 84 8a 02 00
	00		 je	 $L85548
  00026	2d c2 00 00 00	 sub	 eax, 194		; 000000c2H
  0002b	0f 84 03 01 00
	00		 je	 $L85508
  00031	48		 dec	 eax
  00032	0f 85 84 02 00
	00		 jne	 $L85551

; 638  : 			}
; 639  : 		case WM_COMMAND:
; 640  : 			switch (LOWORD(wParam)) {

  00038	0f b7 4d 10	 movzx	 ecx, WORD PTR _wParam$[ebp]
  0003c	81 f9 9c 04 00
	00		 cmp	 ecx, 1180		; 0000049cH
  00042	0f 8c 74 02 00
	00		 jl	 $L85551
  00048	be 9e 04 00 00	 mov	 esi, 1182		; 0000049eH
  0004d	3b ce		 cmp	 ecx, esi
  0004f	0f 8e d0 00 00
	00		 jle	 $L85533
  00055	b8 9f 04 00 00	 mov	 eax, 1183		; 0000049fH
  0005a	3b c8		 cmp	 ecx, eax
  0005c	74 17		 je	 SHORT $L85534
  0005e	0f 8e 58 02 00
	00		 jle	 $L85551
  00064	81 f9 a3 04 00
	00		 cmp	 ecx, 1187		; 000004a3H
  0006a	0f 8e b5 00 00
	00		 jle	 $L85533
  00070	e9 47 02 00 00	 jmp	 $L85551
$L85534:

; 649  : 				break;
; 650  : 			case IDC_PREVIEW:
; 651  : 				{
; 652  : 					int delay;
; 653  : 					char title[256];
; 654  : 					if (IsDlgButtonChecked(hwndDlg, IDC_DELAY_POPUP)) {

  00075	68 a3 04 00 00	 push	 1187			; 000004a3H
  0007a	53		 push	 ebx
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  00081	33 db		 xor	 ebx, ebx
  00083	85 c0		 test	 eax, eax
  00085	74 05		 je	 SHORT $L85537

; 655  : 						delay=0;

  00087	89 5d 14	 mov	 DWORD PTR _delay$85535[ebp], ebx

; 656  : 					} else if (IsDlgButtonChecked(hwndDlg, IDC_DELAY_PERMANENT)) {

  0008a	eb 2b		 jmp	 SHORT $L85540
$L85537:
  0008c	68 a1 04 00 00	 push	 1185			; 000004a1H
  00091	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  0009a	85 c0		 test	 eax, eax
  0009c	74 06		 je	 SHORT $L85539

; 657  : 						delay=-1;

  0009e	83 4d 14 ff	 or	 DWORD PTR _delay$85535[ebp], -1

; 658  : 					} else {

  000a2	eb 13		 jmp	 SHORT $L85540
$L85539:

; 659  : 						delay=GetDlgItemInt(hwndDlg, IDC_DELAY, NULL, FALSE);

  000a4	53		 push	 ebx
  000a5	53		 push	 ebx
  000a6	68 9c 04 00 00	 push	 1180			; 0000049cH
  000ab	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  000ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemInt@16
  000b4	89 45 14	 mov	 DWORD PTR _delay$85535[ebp], eax
$L85540:

; 660  : 					}
; 661  : 					_snprintf(title, sizeof(title), Translate("%s mail"), proto->iface.m_szProtoName);

  000b7	ff 77 18	 push	 DWORD PTR [edi+24]
  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000bf	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07FONL@?$CFs?5mail?$AA@ ; `string'
  000c4	53		 push	 ebx
  000c5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MKNL@LangPack?1TranslateString?$AA@ ; `string'
  000ca	ff 50 24	 call	 DWORD PTR [eax+36]
  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d0	50		 push	 eax
  000d1	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _title$85536[ebp]
  000d7	68 00 01 00 00	 push	 256			; 00000100H
  000dc	50		 push	 eax
  000dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___snprintf
  000e3	83 c4 10	 add	 esp, 16			; 00000010H

; 662  : 					MailPopupPreview((DWORD) SendDlgItemMessage(hwndDlg,IDC_COLORBKG,CPM_GETCOLOUR,0,0),
; 663  : 									 (DWORD) SendDlgItemMessage(hwndDlg,IDC_COLORTXT,CPM_GETCOLOUR,0,0),
; 664  : 									 title,
; 665  : 									 "From: test@test.test\nSubject: test",
; 666  : 									 delay);

  000e6	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _title$85536[ebp]
  000ec	bf 01 10 00 00	 mov	 edi, 4097		; 00001001H
  000f1	ff 75 14	 push	 DWORD PTR _delay$85535[ebp]
  000f4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CD@JKGL@From?3?5test?$EAtest?4test?6Subject?3?5te@ ; `string'
  000f9	50		 push	 eax
  000fa	53		 push	 ebx
  000fb	53		 push	 ebx
  000fc	57		 push	 edi
  000fd	56		 push	 esi
  000fe	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00101	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__SendDlgItemMessageW@20
  00107	ff d6		 call	 esi
  00109	50		 push	 eax
  0010a	53		 push	 ebx
  0010b	53		 push	 ebx
  0010c	57		 push	 edi
  0010d	68 9d 04 00 00	 push	 1181			; 0000049dH
  00112	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00115	ff d6		 call	 esi
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 _MailPopupPreview
  0011d	83 c4 14	 add	 esp, 20			; 00000014H

; 667  : 				}
; 668  : 
; 669  : 			}

  00120	e9 97 01 00 00	 jmp	 $L85551
$L85533:

; 641  : 			case IDC_COLORTXT:
; 642  : 			case IDC_COLORBKG:
; 643  : 			case IDC_ENABLEPOPUP:
; 644  : 			case IDC_DELAY:
; 645  : 			case IDC_DELAY_POPUP:
; 646  : 			case IDC_DELAY_CUSTOM:
; 647  : 			case IDC_DELAY_PERMANENT:
; 648  :                 MarkChanges(8, hwndDlg);

  00125	53		 push	 ebx
  00126	6a 08		 push	 8
  00128	e8 00 00 00 00	 call	 _MarkChanges
  0012d	59		 pop	 ecx
  0012e	59		 pop	 ecx

; 670  : 			break;

  0012f	e9 88 01 00 00	 jmp	 $L85551
$L85508:

; 619  : 		case WM_INITDIALOG:
; 620  : 			{
; 621  : 				BYTE delayMode;
; 622  : 				proto = (TlenProtocol *)lParam;
; 623  :                 SetWindowLong(hwndDlg, GWL_USERDATA, (LONG)proto);

  00134	8b 75 14	 mov	 esi, DWORD PTR _lParam$[ebp]
  00137	56		 push	 esi
  00138	6a eb		 push	 -21			; ffffffebH
  0013a	53		 push	 ebx
  0013b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongW@12

; 624  : 				TranslateDialogDefault(hwndDlg);

  00141	53		 push	 ebx
  00142	e8 00 00 00 00	 call	 _TranslateDialogDefault

; 625  : 				CheckDlgButton(hwndDlg, IDC_ENABLEPOPUP, DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "MailPopupEnabled", TRUE));

  00147	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0014a	33 db		 xor	 ebx, ebx
  0014c	89 45 e0	 mov	 DWORD PTR _cgs$86416[ebp], eax
  0014f	8d 45 f4	 lea	 eax, DWORD PTR _dbv$86415[ebp]
  00152	89 45 e8	 mov	 DWORD PTR _cgs$86416[ebp+8], eax
  00155	8d 45 e0	 lea	 eax, DWORD PTR _cgs$86416[ebp]
  00158	50		 push	 eax
  00159	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0015e	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00163	53		 push	 ebx
  00164	57		 push	 edi
  00165	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cgs$86416[ebp+4], OFFSET FLAT:??_C@_0BB@GMOL@MailPopupEnabled?$AA@ ; `string'
  0016c	ff 50 24	 call	 DWORD PTR [eax+36]
  0016f	83 c4 10	 add	 esp, 16			; 00000010H
  00172	85 c0		 test	 eax, eax
  00174	74 05		 je	 SHORT $L86417
  00176	6a 01		 push	 1
  00178	58		 pop	 eax
  00179	eb 04		 jmp	 SHORT $L86414
$L86417:
  0017b	0f b6 45 f8	 movzx	 eax, BYTE PTR _dbv$86415[ebp+4]
$L86414:
  0017f	50		 push	 eax
  00180	68 a0 04 00 00	 push	 1184			; 000004a0H
  00185	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00188	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CheckDlgButton@12

; 626  : 				SendDlgItemMessage(hwndDlg, IDC_COLORBKG, CPM_SETCOLOUR, 0, DBGetContactSettingDword(NULL, proto->iface.m_szModuleName, "MailPopupBack", POPUP_DEFAULT_COLORBKG));

  0018e	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00191	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cgs$86425[ebp+4], OFFSET FLAT:??_C@_0O@CNMO@MailPopupBack?$AA@ ; `string'
  00198	89 45 e0	 mov	 DWORD PTR _cgs$86425[ebp], eax
  0019b	8d 45 f4	 lea	 eax, DWORD PTR _dbv$86424[ebp]
  0019e	89 45 e8	 mov	 DWORD PTR _cgs$86425[ebp+8], eax
  001a1	8d 45 e0	 lea	 eax, DWORD PTR _cgs$86425[ebp]
  001a4	50		 push	 eax
  001a5	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001aa	53		 push	 ebx
  001ab	57		 push	 edi
  001ac	ff 50 24	 call	 DWORD PTR [eax+36]
  001af	83 c4 0c	 add	 esp, 12			; 0000000cH
  001b2	85 c0		 test	 eax, eax
  001b4	b8 a5 bd dc 00	 mov	 eax, 14466469		; 00dcbda5H
  001b9	75 03		 jne	 SHORT $L86423
  001bb	8b 45 f8	 mov	 eax, DWORD PTR _dbv$86424[ebp+4]
$L86423:
  001be	50		 push	 eax
  001bf	53		 push	 ebx
  001c0	68 00 10 00 00	 push	 4096			; 00001000H
  001c5	68 9d 04 00 00	 push	 1181			; 0000049dH
  001ca	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  001cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageW@20

; 627  : 				SendDlgItemMessage(hwndDlg, IDC_COLORTXT, CPM_SETCOLOUR, 0, DBGetContactSettingDword(NULL, proto->iface.m_szModuleName, "MailPopupText", POPUP_DEFAULT_COLORTXT));

  001d3	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  001d6	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cgs$86434[ebp+4], OFFSET FLAT:??_C@_0O@KDHG@MailPopupText?$AA@ ; `string'
  001dd	89 45 e0	 mov	 DWORD PTR _cgs$86434[ebp], eax
  001e0	8d 45 f4	 lea	 eax, DWORD PTR _dbv$86433[ebp]
  001e3	89 45 e8	 mov	 DWORD PTR _cgs$86434[ebp+8], eax
  001e6	8d 45 e0	 lea	 eax, DWORD PTR _cgs$86434[ebp]
  001e9	50		 push	 eax
  001ea	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  001ef	53		 push	 ebx
  001f0	57		 push	 edi
  001f1	ff 50 24	 call	 DWORD PTR [eax+36]
  001f4	83 c4 0c	 add	 esp, 12			; 0000000cH
  001f7	f7 d8		 neg	 eax
  001f9	1b c0		 sbb	 eax, eax
  001fb	f7 d0		 not	 eax
  001fd	23 45 f8	 and	 eax, DWORD PTR _dbv$86433[ebp+4]
  00200	50		 push	 eax
  00201	53		 push	 ebx
  00202	68 00 10 00 00	 push	 4096			; 00001000H
  00207	68 9e 04 00 00	 push	 1182			; 0000049eH
  0020c	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  0020f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageW@20

; 628  : 				SetDlgItemInt(hwndDlg, IDC_DELAY, DBGetContactSettingDword(NULL, proto->iface.m_szModuleName, "MailPopupDelay", 4), FALSE);

  00215	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00218	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cgs$86443[ebp+4], OFFSET FLAT:??_C@_0P@ECBA@MailPopupDelay?$AA@ ; `string'
  0021f	89 45 e0	 mov	 DWORD PTR _cgs$86443[ebp], eax
  00222	8d 45 f4	 lea	 eax, DWORD PTR _dbv$86442[ebp]
  00225	89 45 e8	 mov	 DWORD PTR _cgs$86443[ebp+8], eax
  00228	8d 45 e0	 lea	 eax, DWORD PTR _cgs$86443[ebp]
  0022b	50		 push	 eax
  0022c	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00231	53		 push	 ebx
  00232	57		 push	 edi
  00233	ff 50 24	 call	 DWORD PTR [eax+36]
  00236	83 c4 0c	 add	 esp, 12			; 0000000cH
  00239	85 c0		 test	 eax, eax
  0023b	74 05		 je	 SHORT $L86444
  0023d	6a 04		 push	 4
  0023f	58		 pop	 eax
  00240	eb 03		 jmp	 SHORT $L86441
$L86444:
  00242	8b 45 f8	 mov	 eax, DWORD PTR _dbv$86442[ebp+4]
$L86441:
  00245	53		 push	 ebx
  00246	50		 push	 eax
  00247	68 9c 04 00 00	 push	 1180			; 0000049cH
  0024c	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  0024f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemInt@16

; 629  : 				delayMode = DBGetContactSettingByte(NULL, proto->iface.m_szModuleName, "MailPopupDelayMode", 0);

  00255	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00258	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _cgs$86452[ebp+4], OFFSET FLAT:??_C@_0BD@JHKD@MailPopupDelayMode?$AA@ ; `string'
  0025f	89 45 e0	 mov	 DWORD PTR _cgs$86452[ebp], eax
  00262	8d 45 f4	 lea	 eax, DWORD PTR _dbv$86450[ebp]
  00265	89 45 e8	 mov	 DWORD PTR _cgs$86452[ebp+8], eax
  00268	8d 45 e0	 lea	 eax, DWORD PTR _cgs$86452[ebp]
  0026b	50		 push	 eax
  0026c	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00271	53		 push	 ebx
  00272	57		 push	 edi
  00273	ff 50 24	 call	 DWORD PTR [eax+36]
  00276	83 c4 0c	 add	 esp, 12			; 0000000cH
  00279	85 c0		 test	 eax, eax
  0027b	75 1e		 jne	 SHORT $L85524
  0027d	0f b6 45 f8	 movzx	 eax, BYTE PTR _dbv$86450[ebp+4]

; 630  : 				if (delayMode==1) {

  00281	3c 01		 cmp	 al, 1
  00283	75 09		 jne	 SHORT $L85522

; 631  : 					CheckDlgButton(hwndDlg, IDC_DELAY_CUSTOM, TRUE);

  00285	6a 01		 push	 1
  00287	68 a2 04 00 00	 push	 1186			; 000004a2H

; 632  : 				} else if (delayMode==2) {

  0028c	eb 14		 jmp	 SHORT $L86492
$L85522:
  0028e	3c 02		 cmp	 al, 2
  00290	75 09		 jne	 SHORT $L85524

; 633  : 					CheckDlgButton(hwndDlg, IDC_DELAY_PERMANENT, TRUE);

  00292	6a 01		 push	 1
  00294	68 a1 04 00 00	 push	 1185			; 000004a1H

; 634  : 				} else {

  00299	eb 07		 jmp	 SHORT $L86492
$L85524:

; 635  : 					CheckDlgButton(hwndDlg, IDC_DELAY_POPUP, TRUE);

  0029b	6a 01		 push	 1
  0029d	68 a3 04 00 00	 push	 1187			; 000004a3H
$L86492:
  002a2	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  002a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CheckDlgButton@12

; 636  : 				}
; 637  : 				return TRUE;

  002ab	e9 55 01 00 00	 jmp	 $L86493
$L85548:

; 671  : 
; 672  : 
; 673  : 		case WM_NOTIFY:
; 674  : 			switch (((LPNMHDR) lParam)->code) {

  002b0	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  002b3	81 78 08 36 ff
	ff ff		 cmp	 DWORD PTR [eax+8], -202	; ffffff36H
  002ba	74 07		 je	 SHORT $L85554
$L85551:

; 692  : 				}
; 693  : 			}
; 694  : 			break;
; 695  : 
; 696  : 	}
; 697  : 	return FALSE;

  002bc	33 c0		 xor	 eax, eax
  002be	e9 45 01 00 00	 jmp	 $L85501
$L85554:

; 675  : 				case PSN_APPLY:
; 676  : 				{
; 677  : 					BYTE delayMode;
; 678  : 					DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "MailPopupEnabled", (BYTE) IsDlgButtonChecked(hwndDlg, IDC_ENABLEPOPUP));

  002c3	68 a0 04 00 00	 push	 1184			; 000004a0H
  002c8	53		 push	 ebx
  002c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  002cf	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  002d2	88 45 f8	 mov	 BYTE PTR _cws$86460[ebp+12], al
  002d5	8d 45 ec	 lea	 eax, DWORD PTR _cws$86460[ebp]
  002d8	33 db		 xor	 ebx, ebx
  002da	50		 push	 eax
  002db	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  002e0	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ ; `string'
  002e5	53		 push	 ebx
  002e6	56		 push	 esi
  002e7	89 4d ec	 mov	 DWORD PTR _cws$86460[ebp], ecx
  002ea	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86460[ebp+4], OFFSET FLAT:??_C@_0BB@GMOL@MailPopupEnabled?$AA@ ; `string'
  002f1	c6 45 f4 01	 mov	 BYTE PTR _cws$86460[ebp+8], 1
  002f5	ff 50 24	 call	 DWORD PTR [eax+36]
  002f8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 679  : 					DBWriteContactSettingDword(NULL, proto->iface.m_szModuleName, "MailPopupBack", (DWORD) SendDlgItemMessage(hwndDlg,IDC_COLORBKG,CPM_GETCOLOUR,0,0));

  002fb	53		 push	 ebx
  002fc	53		 push	 ebx
  002fd	68 01 10 00 00	 push	 4097			; 00001001H
  00302	68 9d 04 00 00	 push	 1181			; 0000049dH
  00307	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  0030a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageW@20
  00310	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00313	89 45 f8	 mov	 DWORD PTR _cws$86467[ebp+12], eax
  00316	8d 45 ec	 lea	 eax, DWORD PTR _cws$86467[ebp]
  00319	89 4d ec	 mov	 DWORD PTR _cws$86467[ebp], ecx
  0031c	50		 push	 eax
  0031d	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00322	53		 push	 ebx
  00323	56		 push	 esi
  00324	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86467[ebp+4], OFFSET FLAT:??_C@_0O@CNMO@MailPopupBack?$AA@ ; `string'
  0032b	c6 45 f4 04	 mov	 BYTE PTR _cws$86467[ebp+8], 4
  0032f	ff 50 24	 call	 DWORD PTR [eax+36]
  00332	83 c4 0c	 add	 esp, 12			; 0000000cH

; 680  : 					DBWriteContactSettingDword(NULL, proto->iface.m_szModuleName, "MailPopupText", (DWORD) SendDlgItemMessage(hwndDlg,IDC_COLORTXT,CPM_GETCOLOUR,0,0));

  00335	53		 push	 ebx
  00336	53		 push	 ebx
  00337	68 01 10 00 00	 push	 4097			; 00001001H
  0033c	68 9e 04 00 00	 push	 1182			; 0000049eH
  00341	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00344	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageW@20
  0034a	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  0034d	89 45 f8	 mov	 DWORD PTR _cws$86474[ebp+12], eax
  00350	8d 45 ec	 lea	 eax, DWORD PTR _cws$86474[ebp]
  00353	89 4d ec	 mov	 DWORD PTR _cws$86474[ebp], ecx
  00356	50		 push	 eax
  00357	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0035c	53		 push	 ebx
  0035d	56		 push	 esi
  0035e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86474[ebp+4], OFFSET FLAT:??_C@_0O@KDHG@MailPopupText?$AA@ ; `string'
  00365	c6 45 f4 04	 mov	 BYTE PTR _cws$86474[ebp+8], 4
  00369	ff 50 24	 call	 DWORD PTR [eax+36]
  0036c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 681  : 					DBWriteContactSettingDword(NULL, proto->iface.m_szModuleName, "MailPopupDelay", (DWORD) GetDlgItemInt(hwndDlg,IDC_DELAY, NULL, FALSE));

  0036f	53		 push	 ebx
  00370	53		 push	 ebx
  00371	68 9c 04 00 00	 push	 1180			; 0000049cH
  00376	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  00379	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemInt@16
  0037f	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00382	89 45 f8	 mov	 DWORD PTR _cws$86481[ebp+12], eax
  00385	8d 45 ec	 lea	 eax, DWORD PTR _cws$86481[ebp]
  00388	89 4d ec	 mov	 DWORD PTR _cws$86481[ebp], ecx
  0038b	50		 push	 eax
  0038c	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00391	53		 push	 ebx
  00392	56		 push	 esi
  00393	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86481[ebp+4], OFFSET FLAT:??_C@_0P@ECBA@MailPopupDelay?$AA@ ; `string'
  0039a	c6 45 f4 04	 mov	 BYTE PTR _cws$86481[ebp+8], 4
  0039e	ff 50 24	 call	 DWORD PTR [eax+36]
  003a1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 682  : 					delayMode=0;

  003a4	88 5d 17	 mov	 BYTE PTR _delayMode$85555[ebp], bl

; 683  : 					if (IsDlgButtonChecked(hwndDlg, IDC_DELAY_CUSTOM)) {

  003a7	68 a2 04 00 00	 push	 1186			; 000004a2H
  003ac	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  003af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  003b5	85 c0		 test	 eax, eax
  003b7	74 06		 je	 SHORT $L85565

; 684  : 						delayMode=1;

  003b9	c6 45 17 01	 mov	 BYTE PTR _delayMode$85555[ebp], 1

; 685  : 					} else if (IsDlgButtonChecked(hwndDlg, IDC_DELAY_PERMANENT)) {

  003bd	eb 16		 jmp	 SHORT $L85567
$L85565:
  003bf	68 a1 04 00 00	 push	 1185			; 000004a1H
  003c4	ff 75 08	 push	 DWORD PTR _hwndDlg$[ebp]
  003c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  003cd	85 c0		 test	 eax, eax
  003cf	74 04		 je	 SHORT $L85567

; 686  : 						delayMode=2;

  003d1	c6 45 17 02	 mov	 BYTE PTR _delayMode$85555[ebp], 2
$L85567:

; 687  : 
; 688  : 					}
; 689  : 					DBWriteContactSettingByte(NULL, proto->iface.m_szModuleName, "MailPopupDelayMode", delayMode);

  003d5	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  003d8	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$86488[ebp+4], OFFSET FLAT:??_C@_0BD@JHKD@MailPopupDelayMode?$AA@ ; `string'
  003df	89 45 ec	 mov	 DWORD PTR _cws$86488[ebp], eax
  003e2	8a 45 17	 mov	 al, BYTE PTR _delayMode$85555[ebp]
  003e5	88 45 f8	 mov	 BYTE PTR _cws$86488[ebp+12], al
  003e8	8d 45 ec	 lea	 eax, DWORD PTR _cws$86488[ebp]
  003eb	50		 push	 eax
  003ec	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  003f1	53		 push	 ebx
  003f2	56		 push	 esi
  003f3	c6 45 f4 01	 mov	 BYTE PTR _cws$86488[ebp+8], 1
  003f7	ff 50 24	 call	 DWORD PTR [eax+36]

; 690  : 					ApplyChanges(proto, 8);

  003fa	6a 08		 push	 8
  003fc	57		 push	 edi
  003fd	e8 00 00 00 00	 call	 _ApplyChanges
  00402	83 c4 14	 add	 esp, 20			; 00000014H
$L86493:

; 691  : 					return TRUE;

  00405	6a 01		 push	 1
  00407	58		 pop	 eax
$L85501:
  00408	5f		 pop	 edi
  00409	5e		 pop	 esi
  0040a	5b		 pop	 ebx

; 698  : }

  0040b	c9		 leave
  0040c	c2 10 00	 ret	 16			; 00000010H
_TlenPopupsDlgProc@16 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0P@PNGM@PopUp?1AddPopUp?$AA@		; `string'
PUBLIC	??_C@_0BB@OBDC@PopUp?1AddPopUpEx?$AA@		; `string'
EXTRN	_memset:NEAR
EXTRN	_strcpy:NEAR
EXTRN	__imp__CopyIcon@4:NEAR
EXTRN	__chkstk:NEAR
EXTRN	_tlenIcons:BYTE
;	COMDAT ??_C@_0P@PNGM@PopUp?1AddPopUp?$AA@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\jabber_opt.c
_DATA	SEGMENT
??_C@_0P@PNGM@PopUp?1AddPopUp?$AA@ DB 'PopUp/AddPopUp', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@OBDC@PopUp?1AddPopUpEx?$AA@
_DATA	SEGMENT
??_C@_0BB@OBDC@PopUp?1AddPopUpEx?$AA@ DB 'PopUp/AddPopUpEx', 00H ; `string'
_DATA	ENDS
;	COMDAT _MailPopupPreview
_TEXT	SEGMENT
_colorBack$ = 8
_colorText$ = 12
_title$ = 16
_emailInfo$ = 20
_delay$ = 24
_ppd$ = -4140
_MailPopupPreview PROC NEAR				; COMDAT

; 589  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 2c 10 00 00	 mov	 eax, 4140		; 0000102cH
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	56		 push	 esi
  0000e	57		 push	 edi

; 590  : 	POPUPDATAEX ppd;
; 591  : 	char * lpzContactName;
; 592  : 	char * lpzText;
; 593  : 
; 594  : 	lpzContactName = title;
; 595  : 	lpzText = emailInfo;
; 596  : 	ZeroMemory(&ppd, sizeof(ppd));

  0000f	33 ff		 xor	 edi, edi
  00011	68 2c 10 00 00	 push	 4140			; 0000102cH
  00016	8d 85 d4 ef ff
	ff		 lea	 eax, DWORD PTR _ppd$[ebp]
  0001c	57		 push	 edi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 _memset
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH

; 597  : 	ppd.lchContact = NULL;

  00026	89 bd d4 ef ff
	ff		 mov	 DWORD PTR _ppd$[ebp], edi

; 598  : 	ppd.lchIcon = CopyIcon(tlenIcons[TLEN_IDI_MAIL]);

  0002c	ff 35 04 00 00
	00		 push	 DWORD PTR _tlenIcons+4
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CopyIcon@4

; 599  : 	strcpy(ppd.lpzContactName, lpzContactName);

  00038	ff 75 10	 push	 DWORD PTR _title$[ebp]
  0003b	89 85 d8 ef ff
	ff		 mov	 DWORD PTR _ppd$[ebp+4], eax
  00041	8d 85 dc ef ff
	ff		 lea	 eax, DWORD PTR _ppd$[ebp+8]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 _strcpy

; 600  : 	strcpy(ppd.lpzText, lpzText);

  0004d	ff 75 14	 push	 DWORD PTR _emailInfo$[ebp]
  00050	8d 85 dc f7 ff
	ff		 lea	 eax, DWORD PTR _ppd$[ebp+2056]
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 _strcpy

; 601  : 	ppd.colorBack = colorBack;

  0005c	8b 45 08	 mov	 eax, DWORD PTR _colorBack$[ebp]

; 602  : 	ppd.colorText = colorText;
; 603  : 	ppd.PluginWindowProc = NULL;
; 604  : 	ppd.PluginData=NULL;
; 605  : 	if ( ServiceExists( MS_POPUP_ADDPOPUPEX )) {

  0005f	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0BB@OBDC@PopUp?1AddPopUpEx?$AA@ ; `string'
  00064	89 45 dc	 mov	 DWORD PTR _ppd$[ebp+4104], eax
  00067	8b 45 0c	 mov	 eax, DWORD PTR _colorText$[ebp]
  0006a	89 45 e0	 mov	 DWORD PTR _ppd$[ebp+4108], eax
  0006d	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00072	56		 push	 esi
  00073	89 7d e4	 mov	 DWORD PTR _ppd$[ebp+4112], edi
  00076	89 7d e8	 mov	 DWORD PTR _ppd$[ebp+4116], edi
  00079	ff 50 28	 call	 DWORD PTR [eax+40]
  0007c	83 c4 14	 add	 esp, 20			; 00000014H
  0007f	85 c0		 test	 eax, eax
  00081	74 08		 je	 SHORT $L85488

; 606  : 		ppd.iSeconds = delay;

  00083	8b 45 18	 mov	 eax, DWORD PTR _delay$[ebp]
  00086	89 45 ec	 mov	 DWORD PTR _ppd$[ebp+4120], eax

; 607  : 		CallService(MS_POPUP_ADDPOPUPEX, (WPARAM)&ppd, 0);
; 608  : 
; 609  : 	}
; 610  : 	else if ( ServiceExists( MS_POPUP_ADDPOPUP )) {

  00089	eb 13		 jmp	 SHORT $L86496
$L85488:
  0008b	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00090	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0P@PNGM@PopUp?1AddPopUp?$AA@ ; `string'
  00095	56		 push	 esi
  00096	ff 50 28	 call	 DWORD PTR [eax+40]
  00099	85 c0		 test	 eax, eax
  0009b	59		 pop	 ecx
  0009c	74 14		 je	 SHORT $L85491
$L86496:

; 611  : 		CallService(MS_POPUP_ADDPOPUP, (WPARAM)&ppd, 0);

  0009e	8d 85 d4 ef ff
	ff		 lea	 eax, DWORD PTR _ppd$[ebp]
  000a4	57		 push	 edi
  000a5	50		 push	 eax
  000a6	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000ab	56		 push	 esi
  000ac	ff 50 24	 call	 DWORD PTR [eax+36]
  000af	83 c4 0c	 add	 esp, 12			; 0000000cH
$L85491:
  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi

; 612  : 	}
; 613  : }

  000b4	c9		 leave
  000b5	c3		 ret	 0
_MailPopupPreview ENDP
_TEXT	ENDS
END
