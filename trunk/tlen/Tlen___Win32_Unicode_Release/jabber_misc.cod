	TITLE	E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\jabber_misc.c
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BG@FJFA@Miranda?1System?1GetMMI?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DNA@Miranda?1System?1GetLI?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@FHMP@Miranda?1System?1GetUTFI?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@DCOH@Miranda?1Thread?1Fork?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@IENN@Miranda?1Thread?1ForkEx?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@FGIN@Miranda?1SysTerm?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@LIGC@Utils?1AddToWindowList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@PEAI@Utils?1RemoveFromWindowList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@GMNB@Utils?1FindWindowInList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@NOMI@Utils?1BroadcastToWindowList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CB@CFCA@Utils?1BroadcastToWindowListAsync@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@MDKL@Utils?1SaveWindowPos?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@GALP@Utils?1RestoreWindowPos?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CHLF@Miranda?1System?1GetMD5I?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@FOPF@Miranda?1System?1GetSHA1I?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@OCFE@Netlib?1CloseHandle?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@EFDJ@Netlib?1Send?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@GFGB@Netlib?1Recv?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@CMGK@Netlib?1Log?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@GDOO@Netlib?1InitSecurityProvider?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@JINJ@Netlib?1DestroySecurityProvider?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@CBFG@Netlib?1NtlmCreateResponse?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@COCL@Proto?1EnumAccounts?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@CCNI@Proto?1GetAccount?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@IFFL@Proto?1BroadcastAck?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@MGBG@DB?1Event?1GetText?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@BEPM@DB?1Contact?1GetSettingStr?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0DA@FLKM@C?3?2MirandaDev?2miranda_svn2?2inclu@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@IGCO@DB?1Contact?1DeleteSetting?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@GNEH@LangPack?1TranslateDialog?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@GFNK@Skin?1Icons?1Load?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@BLFF@Skin?1Icons?1LoadProto?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@CNOA@Skin?1Sounds?1AddNew?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@LENC@Skin?1Sounds?1Play?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@PNGM@PopUp?1AddPopUp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@OBDC@PopUp?1AddPopUpEx?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CGKI@PopUp?1AddPopUpW?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@HIHP@PopUp?1GetContact?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@CCHD@PopUp?1GetPluginData?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@HKEA@PopUp?1IsSecondLineShown?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@KGOE@PopUp?1Changetext?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@LAPD@PopUp?1ChangetextW?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@KOPP@PopUp?1Change?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@BGJ@PopUp?1ShowMessage?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@NFFE@PopUp?1ShowMessageW?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@MAHO@PopUp?1AddPopupClass?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@HDHJ@DB?1Contact?1Add?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@POEG@Proto?1AddToContact?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03HCJC@jid?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06OCEO@Hidden?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04LMAM@Nick?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@ECPE@DB?1Event?1Add?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FE@LDGM@E?3?2Documents?5and?5Settings?2piotr?2@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODDI@DB?1Contact?1FindFirst?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@HFIO@Proto?1GetContactBaseProto?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@LDI@DB?1Contact?1FindNext?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09ELKP@NotOnList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NNBH@CList?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@PPFM@CListGroups?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@NJGA@CLUI?1GroupCreated?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@EEML@Miranda?1Thread?1Push?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@FOLM@Miranda?1Thread?1Pop?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DBGetContactSettingByte_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSettingWord_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSettingDword_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSetting_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBGetContactSettingString_Helper
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBFreeVariant
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBDeleteContactSetting
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBWriteContactSettingByte
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DBWriteContactSettingString
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _JabberDBAddAuthRequest
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _JabberJIDFromHContact
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _JabberHContactFromJID
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _JabberDBCreateContact
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _JabberContactListCreateClistGroup
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _JabberContactListCreateGroup
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _forkthread_r
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _JabberForkThread
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	??_C@_0N@ECPE@DB?1Event?1Add?$AA@		; `string'
PUBLIC	??_C@_0BJ@IGCO@DB?1Contact?1DeleteSetting?$AA@	; `string'
PUBLIC	??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@	; `string'
PUBLIC	_JabberHContactFromJID
PUBLIC	_JabberDBAddAuthRequest
PUBLIC	??_C@_0P@HDHJ@DB?1Contact?1Add?$AA@		; `string'
PUBLIC	??_C@_0BD@POEG@Proto?1AddToContact?$AA@		; `string'
PUBLIC	??_C@_03HCJC@jid?$AA@				; `string'
PUBLIC	??_C@_06OCEO@Hidden?$AA@			; `string'
PUBLIC	??_C@_04LMAM@Nick?$AA@				; `string'
EXTRN	_mmi:BYTE
EXTRN	_strcpy:NEAR
EXTRN	_strlen:NEAR
EXTRN	__imp___strlwr:NEAR
EXTRN	__imp__time:NEAR
EXTRN	_JabberLoginFromJID:NEAR
EXTRN	_pluginLink:DWORD
;	COMDAT ??_C@_0BJ@IGCO@DB?1Contact?1DeleteSetting?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_0BJ@IGCO@DB?1Contact?1DeleteSetting?$AA@ DB 'DB/Contact/DeleteSetti'
	DB	'ng', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@
_DATA	SEGMENT
??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ DB 'DB/Contact/WriteSetting'
	DB	00H						; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@HDHJ@DB?1Contact?1Add?$AA@
_DATA	SEGMENT
??_C@_0P@HDHJ@DB?1Contact?1Add?$AA@ DB 'DB/Contact/Add', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@POEG@Proto?1AddToContact?$AA@
_DATA	SEGMENT
??_C@_0BD@POEG@Proto?1AddToContact?$AA@ DB 'Proto/AddToContact', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_03HCJC@jid?$AA@
_DATA	SEGMENT
??_C@_03HCJC@jid?$AA@ DB 'jid', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_06OCEO@Hidden?$AA@
_DATA	SEGMENT
??_C@_06OCEO@Hidden?$AA@ DB 'Hidden', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04LMAM@Nick?$AA@
_DATA	SEGMENT
??_C@_04LMAM@Nick?$AA@ DB 'Nick', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@ECPE@DB?1Event?1Add?$AA@
_DATA	SEGMENT
??_C@_0N@ECPE@DB?1Event?1Add?$AA@ DB 'DB/Event/Add', 00H ; `string'
_DATA	ENDS
;	COMDAT _JabberDBAddAuthRequest
_TEXT	SEGMENT
_cws$83187 = -20
_cgs$83192 = -12
_cws$83197 = -20
_proto$ = 8
_jid$ = 12
_nick$ = 16
_s$ = 8
_dbei$ = -48
_JabberDBAddAuthRequest PROC NEAR			; COMDAT

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 29   : 	char *s;
; 30   : 	DBEVENTINFO dbei = {0};
; 31   : 	PBYTE pCurBlob;
; 32   : 	HANDLE hContact;
; 33   : 
; 34   : 	if ((hContact=JabberHContactFromJID(proto, jid)) == NULL) {

  00008	8b 75 08	 mov	 esi, DWORD PTR _proto$[ebp]
  0000b	57		 push	 edi
  0000c	6a 06		 push	 6
  0000e	33 db		 xor	 ebx, ebx
  00010	59		 pop	 ecx
  00011	33 c0		 xor	 eax, eax
  00013	ff 75 0c	 push	 DWORD PTR _jid$[ebp]
  00016	8d 7d d4	 lea	 edi, DWORD PTR _dbei$[ebp+4]
  00019	89 5d d0	 mov	 DWORD PTR _dbei$[ebp], ebx
  0001c	f3 ab		 rep stosd
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 _JabberHContactFromJID
  00024	8b f8		 mov	 edi, eax
  00026	59		 pop	 ecx
  00027	3b fb		 cmp	 edi, ebx
  00029	59		 pop	 ecx
  0002a	75 6b		 jne	 SHORT $L82928

; 35   : 		hContact = (HANDLE) CallService(MS_DB_CONTACT_ADD, 0, 0);

  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00031	53		 push	 ebx
  00032	53		 push	 ebx
  00033	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@HDHJ@DB?1Contact?1Add?$AA@ ; `string'
  00038	ff 50 24	 call	 DWORD PTR [eax+36]

; 36   : 		CallService(MS_PROTO_ADDTOCONTACT, (WPARAM) hContact, (LPARAM) proto->iface.m_szModuleName);

  0003b	ff 76 1c	 push	 DWORD PTR [esi+28]
  0003e	8b f8		 mov	 edi, eax
  00040	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00045	57		 push	 edi
  00046	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@POEG@Proto?1AddToContact?$AA@ ; `string'
  0004b	ff 50 24	 call	 DWORD PTR [eax+36]

; 37   :         // strip resource if present
; 38   :         s = JabberLoginFromJID(jid);

  0004e	ff 75 0c	 push	 DWORD PTR _jid$[ebp]
  00051	e8 00 00 00 00	 call	 _JabberLoginFromJID

; 39   :         _strlwr(s);

  00056	50		 push	 eax
  00057	89 45 08	 mov	 DWORD PTR _s$[ebp], eax
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___strlwr

; 40   : 		DBWriteContactSettingString(hContact, proto->iface.m_szModuleName, "jid", s);

  00060	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00063	80 4d f4 ff	 or	 BYTE PTR _cws$83187[ebp+8], 255 ; 000000ffH
  00067	89 45 ec	 mov	 DWORD PTR _cws$83187[ebp], eax
  0006a	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]
  0006d	89 45 f8	 mov	 DWORD PTR _cws$83187[ebp+12], eax
  00070	8d 45 ec	 lea	 eax, DWORD PTR _cws$83187[ebp]
  00073	50		 push	 eax
  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00079	57		 push	 edi
  0007a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ ; `string'
  0007f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$83187[ebp+4], OFFSET FLAT:??_C@_03HCJC@jid?$AA@ ; `string'
  00086	ff 50 24	 call	 DWORD PTR [eax+36]

; 41   :         mir_free(s);

  00089	ff 75 08	 push	 DWORD PTR _s$[ebp]
  0008c	ff 15 0c 00 00
	00		 call	 DWORD PTR _mmi+12
  00092	83 c4 30	 add	 esp, 48			; 00000030H

; 42   : 	}
; 43   : 	else {

  00095	eb 22		 jmp	 SHORT $L83191
$L82928:

; 44   : 		DBDeleteContactSetting(hContact, proto->iface.m_szModuleName, "Hidden");

  00097	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0009a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$83192[ebp+4], OFFSET FLAT:??_C@_06OCEO@Hidden?$AA@ ; `string'
  000a1	89 45 f4	 mov	 DWORD PTR _cgs$83192[ebp], eax
  000a4	8d 45 f4	 lea	 eax, DWORD PTR _cgs$83192[ebp]
  000a7	50		 push	 eax
  000a8	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000ad	57		 push	 edi
  000ae	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@IGCO@DB?1Contact?1DeleteSetting?$AA@ ; `string'
  000b3	ff 50 24	 call	 DWORD PTR [eax+36]
  000b6	83 c4 0c	 add	 esp, 12			; 0000000cH
$L83191:

; 45   : 	}
; 46   : 	DBWriteContactSettingString(hContact, proto->iface.m_szModuleName, "Nick", nick);

  000b9	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  000bc	80 4d f4 ff	 or	 BYTE PTR _cws$83197[ebp+8], 255 ; 000000ffH
  000c0	89 45 ec	 mov	 DWORD PTR _cws$83197[ebp], eax
  000c3	8b 45 10	 mov	 eax, DWORD PTR _nick$[ebp]
  000c6	89 45 f8	 mov	 DWORD PTR _cws$83197[ebp+12], eax
  000c9	8d 45 ec	 lea	 eax, DWORD PTR _cws$83197[ebp]
  000cc	50		 push	 eax
  000cd	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000d2	57		 push	 edi
  000d3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ ; `string'
  000d8	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$83197[ebp+4], OFFSET FLAT:??_C@_04LMAM@Nick?$AA@ ; `string'
  000df	ff 50 24	 call	 DWORD PTR [eax+36]

; 47   : 
; 48   : 	//blob is: uin(DWORD), hContact(HANDLE), nick(ASCIIZ), first(ASCIIZ), last(ASCIIZ), email(ASCIIZ), reason(ASCIIZ)
; 49   : 	//blob is: 0(DWORD), hContact(HANDLE), nick(ASCIIZ), ""(ASCIIZ), ""(ASCIIZ), email(ASCIIZ), ""(ASCIIZ)
; 50   : 	dbei.cbSize = sizeof(DBEVENTINFO);
; 51   : 	dbei.szModule = proto->iface.m_szModuleName;

  000e2	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]

; 52   : 	dbei.timestamp = (DWORD) time(NULL);

  000e5	53		 push	 ebx
  000e6	c7 45 d0 1c 00
	00 00		 mov	 DWORD PTR _dbei$[ebp], 28 ; 0000001cH
  000ed	89 45 d4	 mov	 DWORD PTR _dbei$[ebp+4], eax
  000f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__time

; 53   : 	dbei.flags = 0;
; 54   : 	dbei.eventType = EVENTTYPE_AUTHREQUEST;
; 55   : 	dbei.cbBlob = sizeof(DWORD) + sizeof(HANDLE) + strlen(nick) + strlen(jid) + 5;

  000f6	ff 75 0c	 push	 DWORD PTR _jid$[ebp]
  000f9	89 45 d8	 mov	 DWORD PTR _dbei$[ebp+8], eax
  000fc	89 5d dc	 mov	 DWORD PTR _dbei$[ebp+12], ebx
  000ff	66 c7 45 e0 e9
	03		 mov	 WORD PTR _dbei$[ebp+16], 1001 ; 000003e9H
  00105	e8 00 00 00 00	 call	 _strlen
  0010a	ff 75 10	 push	 DWORD PTR _nick$[ebp]
  0010d	8b f0		 mov	 esi, eax
  0010f	e8 00 00 00 00	 call	 _strlen
  00114	8d 44 06 0d	 lea	 eax, DWORD PTR [esi+eax+13]

; 56   : 	pCurBlob = dbei.pBlob = (PBYTE) mir_alloc(dbei.cbBlob);

  00118	50		 push	 eax
  00119	89 45 e4	 mov	 DWORD PTR _dbei$[ebp+20], eax
  0011c	ff 15 04 00 00
	00		 call	 DWORD PTR _mmi+4

; 57   : 	*((PDWORD) pCurBlob) = 0; pCurBlob += sizeof(DWORD);
; 58   : 	*((PHANDLE) pCurBlob) = hContact; pCurBlob += sizeof(HANDLE);
; 59   : 	strcpy((char *) pCurBlob, nick); pCurBlob += strlen(nick)+1;

  00122	ff 75 10	 push	 DWORD PTR _nick$[ebp]
  00125	8b f0		 mov	 esi, eax
  00127	83 c6 04	 add	 esi, 4
  0012a	89 45 e8	 mov	 DWORD PTR _dbei$[ebp+24], eax
  0012d	89 18		 mov	 DWORD PTR [eax], ebx
  0012f	89 3e		 mov	 DWORD PTR [esi], edi
  00131	83 c6 04	 add	 esi, 4
  00134	56		 push	 esi
  00135	e8 00 00 00 00	 call	 _strcpy
  0013a	ff 75 10	 push	 DWORD PTR _nick$[ebp]
  0013d	e8 00 00 00 00	 call	 _strlen

; 60   : 	*pCurBlob = '\0'; pCurBlob++;		//firstName
; 61   : 	*pCurBlob = '\0'; pCurBlob++;		//lastName
; 62   : 	strcpy((char *) pCurBlob, jid); pCurBlob += strlen(jid)+1;

  00142	ff 75 0c	 push	 DWORD PTR _jid$[ebp]
  00145	8d 74 06 01	 lea	 esi, DWORD PTR [esi+eax+1]
  00149	88 1e		 mov	 BYTE PTR [esi], bl
  0014b	46		 inc	 esi
  0014c	88 1e		 mov	 BYTE PTR [esi], bl
  0014e	46		 inc	 esi
  0014f	56		 push	 esi
  00150	e8 00 00 00 00	 call	 _strcpy
  00155	ff 75 0c	 push	 DWORD PTR _jid$[ebp]
  00158	e8 00 00 00 00	 call	 _strlen

; 63   : 	*pCurBlob = '\0';					//reason

  0015d	88 5c 30 01	 mov	 BYTE PTR [eax+esi+1], bl

; 64   : 
; 65   : 	CallService(MS_DB_EVENT_ADD, (WPARAM) (HANDLE) NULL, (LPARAM) &dbei);

  00161	8d 45 d0	 lea	 eax, DWORD PTR _dbei$[ebp]
  00164	50		 push	 eax
  00165	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0016a	53		 push	 ebx
  0016b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@ECPE@DB?1Event?1Add?$AA@ ; `string'
  00170	ff 50 24	 call	 DWORD PTR [eax+36]
  00173	83 c4 40	 add	 esp, 64			; 00000040H
  00176	5f		 pop	 edi
  00177	5e		 pop	 esi
  00178	5b		 pop	 ebx

; 66   : }

  00179	c9		 leave
  0017a	c3		 ret	 0
_JabberDBAddAuthRequest ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@	; `string'
PUBLIC	??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@	; `string'
PUBLIC	_JabberJIDFromHContact
;	COMDAT ??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ DB 'DB/Contact/GetSetting', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@
_DATA	SEGMENT
??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ DB 'DB/Contact/FreeVariant', 00H ; `string'
_DATA	ENDS
;	COMDAT _JabberJIDFromHContact
_TEXT	SEGMENT
_proto$ = 8
_hContact$ = 12
_dbv$ = -24
_cgs$83204 = -12
_JabberJIDFromHContact PROC NEAR			; COMDAT

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 70   : 	char *p = NULL;
; 71   : 	DBVARIANT dbv;
; 72   : 	if (!DBGetContactSetting(hContact, proto->iface.m_szModuleName, "jid", &dbv)) {

  00006	8b 45 08	 mov	 eax, DWORD PTR _proto$[ebp]
  00009	56		 push	 esi
  0000a	33 f6		 xor	 esi, esi
  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cgs$83204[ebp+4], OFFSET FLAT:??_C@_03HCJC@jid?$AA@ ; `string'
  00013	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  00016	89 45 f4	 mov	 DWORD PTR _cgs$83204[ebp], eax
  00019	8d 45 e8	 lea	 eax, DWORD PTR _dbv$[ebp]
  0001c	89 45 fc	 mov	 DWORD PTR _cgs$83204[ebp+8], eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR _cgs$83204[ebp]
  00022	50		 push	 eax
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00028	ff 75 0c	 push	 DWORD PTR _hContact$[ebp]
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00030	ff 50 24	 call	 DWORD PTR [eax+36]
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH
  00036	85 c0		 test	 eax, eax
  00038	75 21		 jne	 SHORT $L83208

; 73   : 		p = mir_strdup(dbv.pszVal);

  0003a	ff 75 ec	 push	 DWORD PTR _dbv$[ebp+4]
  0003d	ff 15 14 00 00
	00		 call	 DWORD PTR _mmi+20
  00043	8b f0		 mov	 esi, eax

; 74   : 		DBFreeVariant(&dbv);

  00045	8d 45 e8	 lea	 eax, DWORD PTR _dbv$[ebp]
  00048	50		 push	 eax
  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0004e	6a 00		 push	 0
  00050	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  00055	ff 50 24	 call	 DWORD PTR [eax+36]
  00058	83 c4 10	 add	 esp, 16			; 00000010H
$L83208:

; 75   : 	}
; 76   : 	return p;

  0005b	8b c6		 mov	 eax, esi
  0005d	5e		 pop	 esi

; 77   : }

  0005e	c9		 leave
  0005f	c3		 ret	 0
_JabberJIDFromHContact ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BF@ODDI@DB?1Contact?1FindFirst?$AA@	; `string'
PUBLIC	??_C@_0BK@HFIO@Proto?1GetContactBaseProto?$AA@	; `string'
PUBLIC	??_C@_0BE@LDI@DB?1Contact?1FindNext?$AA@	; `string'
EXTRN	_strcmp:NEAR
EXTRN	__imp__stricmp:NEAR
;	COMDAT ??_C@_0BF@ODDI@DB?1Contact?1FindFirst?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_0BF@ODDI@DB?1Contact?1FindFirst?$AA@ DB 'DB/Contact/FindFirst', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BK@HFIO@Proto?1GetContactBaseProto?$AA@
_DATA	SEGMENT
??_C@_0BK@HFIO@Proto?1GetContactBaseProto?$AA@ DB 'Proto/GetContactBasePr'
	DB	'oto', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@LDI@DB?1Contact?1FindNext?$AA@
_DATA	SEGMENT
??_C@_0BE@LDI@DB?1Contact?1FindNext?$AA@ DB 'DB/Contact/FindNext', 00H ; `string'
_DATA	ENDS
;	COMDAT _JabberHContactFromJID
_TEXT	SEGMENT
_proto$ = 8
_jid$ = 12
_dbv$ = -12
_cgs$83214 = -24
_JabberHContactFromJID PROC NEAR			; COMDAT

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx

; 82   : 	HANDLE hContact, hContactMatched;
; 83   : 	DBVARIANT dbv;
; 84   : 	char *szProto;
; 85   : 	char *p;
; 86   : 	if (jid == NULL) return (HANDLE) NULL;

  00007	33 db		 xor	 ebx, ebx
  00009	39 5d 0c	 cmp	 DWORD PTR _jid$[ebp], ebx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	0f 84 bc 00 00
	00		 je	 $L82999

; 87   : 	hContactMatched = NULL;
; 88   : 	hContact = (HANDLE) CallService(MS_DB_CONTACT_FINDFIRST, 0, 0);

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00019	53		 push	 ebx
  0001a	53		 push	 ebx
  0001b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@ODDI@DB?1Contact?1FindFirst?$AA@ ; `string'
  00020	ff 50 24	 call	 DWORD PTR [eax+36]
  00023	8b f0		 mov	 esi, eax
  00025	83 c4 0c	 add	 esp, 12			; 0000000cH

; 89   : 	while (hContact != NULL) {

  00028	3b f3		 cmp	 esi, ebx
  0002a	0f 84 a0 00 00
	00		 je	 $L82999
  00030	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
$L82984:

; 90   : 		szProto = (char *) CallService(MS_PROTO_GETCONTACTBASEPROTO, (WPARAM) hContact, 0);

  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0003a	53		 push	 ebx
  0003b	56		 push	 esi
  0003c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BK@HFIO@Proto?1GetContactBaseProto?$AA@ ; `string'
  00041	ff 50 24	 call	 DWORD PTR [eax+36]
  00044	83 c4 0c	 add	 esp, 12			; 0000000cH

; 91   : 		if (szProto!=NULL && !strcmp(proto->iface.m_szModuleName, szProto)) {

  00047	3b c3		 cmp	 eax, ebx
  00049	74 69		 je	 SHORT $L83221
  0004b	50		 push	 eax
  0004c	8b 45 08	 mov	 eax, DWORD PTR _proto$[ebp]
  0004f	ff 70 1c	 push	 DWORD PTR [eax+28]
  00052	e8 00 00 00 00	 call	 _strcmp
  00057	59		 pop	 ecx
  00058	85 c0		 test	 eax, eax
  0005a	59		 pop	 ecx
  0005b	75 57		 jne	 SHORT $L83221

; 92   : 			if (!DBGetContactSetting(hContact, proto->iface.m_szModuleName, "jid", &dbv)) {

  0005d	8b 45 08	 mov	 eax, DWORD PTR _proto$[ebp]
  00060	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _cgs$83214[ebp+4], OFFSET FLAT:??_C@_03HCJC@jid?$AA@ ; `string'
  00067	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0006a	89 45 e8	 mov	 DWORD PTR _cgs$83214[ebp], eax
  0006d	8d 45 f4	 lea	 eax, DWORD PTR _dbv$[ebp]
  00070	89 45 f0	 mov	 DWORD PTR _cgs$83214[ebp+8], eax
  00073	8d 45 e8	 lea	 eax, DWORD PTR _cgs$83214[ebp]
  00076	50		 push	 eax
  00077	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0007c	56		 push	 esi
  0007d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00082	ff 50 24	 call	 DWORD PTR [eax+36]
  00085	83 c4 0c	 add	 esp, 12			; 0000000cH
  00088	85 c0		 test	 eax, eax
  0008a	75 28		 jne	 SHORT $L83221

; 93   : 				if ((p=dbv.pszVal) != NULL) {

  0008c	39 5d f8	 cmp	 DWORD PTR _dbv$[ebp+4], ebx
  0008f	74 12		 je	 SHORT $L82994

; 94   : 					if (!stricmp(p, jid)) {	// exact match (node@domain/resource)

  00091	ff 75 0c	 push	 DWORD PTR _jid$[ebp]
  00094	ff 75 f8	 push	 DWORD PTR _dbv$[ebp+4]
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__stricmp
  0009d	59		 pop	 ecx
  0009e	85 c0		 test	 eax, eax
  000a0	59		 pop	 ecx
  000a1	74 34		 je	 SHORT $L83223
$L82994:

; 97   : 						break;
; 98   : 					}
; 99   : 				}
; 100  : 				DBFreeVariant(&dbv);

  000a3	8d 45 f4	 lea	 eax, DWORD PTR _dbv$[ebp]
  000a6	50		 push	 eax
  000a7	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000ac	53		 push	 ebx
  000ad	57		 push	 edi
  000ae	ff 50 24	 call	 DWORD PTR [eax+36]
  000b1	83 c4 0c	 add	 esp, 12			; 0000000cH
$L83221:

; 101  : 			}
; 102  : 		}
; 103  : 		hContact = (HANDLE) CallService(MS_DB_CONTACT_FINDNEXT, (WPARAM) hContact, 0);

  000b4	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000b9	53		 push	 ebx
  000ba	56		 push	 esi
  000bb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@LDI@DB?1Contact?1FindNext?$AA@ ; `string'
  000c0	ff 50 24	 call	 DWORD PTR [eax+36]
  000c3	8b f0		 mov	 esi, eax
  000c5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c8	3b f3		 cmp	 esi, ebx
  000ca	0f 85 65 ff ff
	ff		 jne	 $L82984
$L82999:

; 107  : 	}
; 108  : 	return NULL;

  000d0	33 c0		 xor	 eax, eax
$L82969:
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx

; 109  : }

  000d5	c9		 leave
  000d6	c3		 ret	 0
$L83223:

; 95   : 						hContactMatched = hContact;
; 96   : 						DBFreeVariant(&dbv);

  000d7	8d 45 f4	 lea	 eax, DWORD PTR _dbv$[ebp]
  000da	50		 push	 eax
  000db	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000e0	53		 push	 ebx
  000e1	57		 push	 edi
  000e2	ff 50 24	 call	 DWORD PTR [eax+36]
  000e5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 104  : 	}
; 105  : 	if (hContactMatched != NULL) {

  000e8	3b f3		 cmp	 esi, ebx
  000ea	74 e4		 je	 SHORT $L82999

; 106  : 		return hContactMatched;

  000ec	8b c6		 mov	 eax, esi
  000ee	eb e2		 jmp	 SHORT $L82969
_JabberHContactFromJID ENDP
_TEXT	ENDS
PUBLIC	??_C@_09ELKP@NotOnList?$AA@			; `string'
PUBLIC	??_C@_05NNBH@CList?$AA@				; `string'
PUBLIC	_JabberDBCreateContact
;	COMDAT ??_C@_09ELKP@NotOnList?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_09ELKP@NotOnList?$AA@ DB 'NotOnList', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05NNBH@CList?$AA@
_DATA	SEGMENT
??_C@_05NNBH@CList?$AA@ DB 'CList', 00H			; `string'
_DATA	ENDS
;	COMDAT _JabberDBCreateContact
_TEXT	SEGMENT
_proto$ = 8
_jid$ = 12
_nick$ = 16
_temporary$ = 20
_cws$83229 = -20
_cws$83234 = -20
_cws$83239 = -20
_JabberDBCreateContact PROC NEAR			; COMDAT

; 112  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	57		 push	 edi

; 113  : 	HANDLE hContact;
; 114  : 	if (jid==NULL || jid[0]=='\0')

  00007	8b 7d 0c	 mov	 edi, DWORD PTR _jid$[ebp]
  0000a	85 ff		 test	 edi, edi
  0000c	0f 84 d1 00 00
	00		 je	 $L83013
  00012	80 3f 00	 cmp	 BYTE PTR [edi], 0
  00015	0f 84 c8 00 00
	00		 je	 $L83013
  0001b	53		 push	 ebx
  0001c	56		 push	 esi

; 116  : 
; 117  : 	if ((hContact=JabberHContactFromJID(proto, jid)) == NULL) {

  0001d	8b 75 08	 mov	 esi, DWORD PTR _proto$[ebp]
  00020	57		 push	 edi
  00021	56		 push	 esi
  00022	e8 00 00 00 00	 call	 _JabberHContactFromJID
  00027	8b d8		 mov	 ebx, eax
  00029	59		 pop	 ecx
  0002a	85 db		 test	 ebx, ebx
  0002c	59		 pop	 ecx
  0002d	0f 85 aa 00 00
	00		 jne	 $L83238

; 118  : 		hContact = (HANDLE) CallService(MS_DB_CONTACT_ADD, 0, 0);

  00033	50		 push	 eax
  00034	50		 push	 eax
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0003a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@HDHJ@DB?1Contact?1Add?$AA@ ; `string'
  0003f	ff 50 24	 call	 DWORD PTR [eax+36]

; 119  : 		CallService(MS_PROTO_ADDTOCONTACT, (WPARAM) hContact, (LPARAM) proto->iface.m_szModuleName);

  00042	ff 76 1c	 push	 DWORD PTR [esi+28]
  00045	8b d8		 mov	 ebx, eax
  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0004c	53		 push	 ebx
  0004d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@POEG@Proto?1AddToContact?$AA@ ; `string'
  00052	ff 50 24	 call	 DWORD PTR [eax+36]

; 120  : 		DBWriteContactSettingString(hContact, proto->iface.m_szModuleName, "jid", jid);

  00055	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00058	80 4d f4 ff	 or	 BYTE PTR _cws$83229[ebp+8], 255 ; 000000ffH
  0005c	89 45 ec	 mov	 DWORD PTR _cws$83229[ebp], eax
  0005f	8d 45 ec	 lea	 eax, DWORD PTR _cws$83229[ebp]
  00062	89 7d f8	 mov	 DWORD PTR _cws$83229[ebp+12], edi
  00065	50		 push	 eax
  00066	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0006b	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ ; `string'
  00070	53		 push	 ebx
  00071	57		 push	 edi
  00072	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$83229[ebp+4], OFFSET FLAT:??_C@_03HCJC@jid?$AA@ ; `string'
  00079	ff 50 24	 call	 DWORD PTR [eax+36]

; 121  : 		if (nick!=NULL && nick[0]!='\0')

  0007c	8b 45 10	 mov	 eax, DWORD PTR _nick$[ebp]
  0007f	83 c4 24	 add	 esp, 36			; 00000024H
  00082	85 c0		 test	 eax, eax
  00084	74 2a		 je	 SHORT $L83233
  00086	80 38 00	 cmp	 BYTE PTR [eax], 0
  00089	74 25		 je	 SHORT $L83233

; 122  : 			DBWriteContactSettingString(hContact, proto->iface.m_szModuleName, "Nick", nick);

  0008b	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  0008e	80 4d f4 ff	 or	 BYTE PTR _cws$83234[ebp+8], 255 ; 000000ffH
  00092	89 45 f8	 mov	 DWORD PTR _cws$83234[ebp+12], eax
  00095	8d 45 ec	 lea	 eax, DWORD PTR _cws$83234[ebp]
  00098	50		 push	 eax
  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0009e	53		 push	 ebx
  0009f	57		 push	 edi
  000a0	89 4d ec	 mov	 DWORD PTR _cws$83234[ebp], ecx
  000a3	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$83234[ebp+4], OFFSET FLAT:??_C@_04LMAM@Nick?$AA@ ; `string'
  000aa	ff 50 24	 call	 DWORD PTR [eax+36]
  000ad	83 c4 0c	 add	 esp, 12			; 0000000cH
$L83233:

; 123  : 		if (temporary)

  000b0	83 7d 14 00	 cmp	 DWORD PTR _temporary$[ebp], 0
  000b4	74 27		 je	 SHORT $L83238

; 124  : 			DBWriteContactSettingByte(hContact, "CList", "NotOnList", 1);

  000b6	8d 45 ec	 lea	 eax, DWORD PTR _cws$83239[ebp]
  000b9	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _cws$83239[ebp], OFFSET FLAT:??_C@_05NNBH@CList?$AA@ ; `string'
  000c0	50		 push	 eax
  000c1	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000c6	53		 push	 ebx
  000c7	57		 push	 edi
  000c8	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _cws$83239[ebp+4], OFFSET FLAT:??_C@_09ELKP@NotOnList?$AA@ ; `string'
  000cf	c6 45 f4 01	 mov	 BYTE PTR _cws$83239[ebp+8], 1
  000d3	c6 45 f8 01	 mov	 BYTE PTR _cws$83239[ebp+12], 1
  000d7	ff 50 24	 call	 DWORD PTR [eax+36]
  000da	83 c4 0c	 add	 esp, 12			; 0000000cH
$L83238:

; 125  : 	}
; 126  : 	return hContact;

  000dd	8b c3		 mov	 eax, ebx
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	eb 02		 jmp	 SHORT $L83009
$L83013:

; 115  : 		return NULL;

  000e3	33 c0		 xor	 eax, eax
$L83009:
  000e5	5f		 pop	 edi

; 127  : }

  000e6	c9		 leave
  000e7	c3		 ret	 0
_JabberDBCreateContact ENDP
_TEXT	ENDS
PUBLIC	_JabberContactListCreateGroup
EXTRN	__imp__strncpy:NEAR
;	COMDAT _JabberContactListCreateGroup
_TEXT	SEGMENT
_groupName$ = 8
_name$ = -128
_JabberContactListCreateGroup PROC NEAR			; COMDAT

; 158  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H

; 159  : 	char name[128];
; 160  : 	char *p;
; 161  : 
; 162  : 	if (groupName==NULL || groupName[0]=='\0' || groupName[0]=='\\') return;

  00009	8b 4d 08	 mov	 ecx, DWORD PTR _groupName$[ebp]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 51		 je	 SHORT $L83050
  00010	8a 01		 mov	 al, BYTE PTR [ecx]
  00012	84 c0		 test	 al, al
  00014	74 4b		 je	 SHORT $L83050
  00016	3c 5c		 cmp	 al, 92			; 0000005cH
  00018	74 47		 je	 SHORT $L83050
  0001a	56		 push	 esi

; 163  : 
; 164  : 	strncpy(name, groupName, sizeof(name));

  0001b	68 80 00 00 00	 push	 128			; 00000080H
  00020	8d 45 80	 lea	 eax, DWORD PTR _name$[ebp]
  00023	51		 push	 ecx
  00024	50		 push	 eax
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy

; 165  : 	name[sizeof(name)-1] = '\0';

  0002b	80 65 ff 00	 and	 BYTE PTR _name$[ebp+127], 0
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 166  : 	for (p=name; *p!='\0'; p++) {

  00032	80 7d 80 00	 cmp	 BYTE PTR _name$[ebp], 0
  00036	8d 75 80	 lea	 esi, DWORD PTR _name$[ebp]
  00039	74 1b		 je	 SHORT $L83053
$L83051:

; 167  : 		if (*p == '\\') {

  0003b	80 3e 5c	 cmp	 BYTE PTR [esi], 92	; 0000005cH
  0003e	75 10		 jne	 SHORT $L83052

; 168  : 			*p = '\0';

  00040	80 26 00	 and	 BYTE PTR [esi], 0

; 169  : 			JabberContactListCreateClistGroup(name);

  00043	8d 45 80	 lea	 eax, DWORD PTR _name$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _JabberContactListCreateClistGroup
  0004c	59		 pop	 ecx

; 170  : 			*p = '\\';

  0004d	c6 06 5c	 mov	 BYTE PTR [esi], 92	; 0000005cH
$L83052:
  00050	46		 inc	 esi
  00051	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00054	75 e5		 jne	 SHORT $L83051
$L83053:

; 171  : 		}
; 172  : 	}
; 173  : 	JabberContactListCreateClistGroup(name);

  00056	8d 45 80	 lea	 eax, DWORD PTR _name$[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 _JabberContactListCreateClistGroup
  0005f	59		 pop	 ecx
  00060	5e		 pop	 esi
$L83050:

; 174  : }

  00061	c9		 leave
  00062	c3		 ret	 0
_JabberContactListCreateGroup ENDP
_TEXT	ENDS
PUBLIC	??_C@_0M@PPFM@CListGroups?$AA@			; `string'
PUBLIC	??_C@_0BC@NJGA@CLUI?1GroupCreated?$AA@		; `string'
EXTRN	__imp__itoa:NEAR
;	COMDAT ??_C@_0M@PPFM@CListGroups?$AA@
; File C:\MirandaDev\miranda_svn2\include\m_database.h
_DATA	SEGMENT
??_C@_0M@PPFM@CListGroups?$AA@ DB 'CListGroups', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@NJGA@CLUI?1GroupCreated?$AA@
_DATA	SEGMENT
??_C@_0BC@NJGA@CLUI?1GroupCreated?$AA@ DB 'CLUI/GroupCreated', 00H ; `string'
_DATA	ENDS
;	COMDAT _JabberContactListCreateClistGroup
_TEXT	SEGMENT
_groupName$ = 8
_str$ = -72
_newName$ = -200
_i$ = -4
_dbv$ = -36
_cgs$83248 = -16
_cws$83259 = -24
_JabberContactListCreateClistGroup PROC NEAR		; COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c8 00 00
	00		 sub	 esp, 200		; 000000c8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 131  : 	char str[33], newName[128];
; 132  : 	int i;
; 133  : 	DBVARIANT dbv;
; 134  : 	char *name;
; 135  : 
; 136  : 	for (i=0;;i++) {
; 137  : 		itoa(i, str, 10);

  0000c	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__itoa
  00012	8d 45 b8	 lea	 eax, DWORD PTR _str$[ebp]
  00015	33 db		 xor	 ebx, ebx
  00017	6a 0a		 push	 10			; 0000000aH
  00019	50		 push	 eax
  0001a	53		 push	 ebx
  0001b	89 5d fc	 mov	 DWORD PTR _i$[ebp], ebx
  0001e	ff d7		 call	 edi

; 138  : 		if (DBGetContactSetting(NULL, "CListGroups", str, &dbv))

  00020	8d 45 b8	 lea	 eax, DWORD PTR _str$[ebp]
  00023	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0M@PPFM@CListGroups?$AA@ ; `string'
  00028	89 45 f4	 mov	 DWORD PTR _cgs$83248[ebp+4], eax
  0002b	8d 45 dc	 lea	 eax, DWORD PTR _dbv$[ebp]
  0002e	89 45 f8	 mov	 DWORD PTR _cgs$83248[ebp+8], eax
  00031	8d 45 f0	 lea	 eax, DWORD PTR _cgs$83248[ebp]
  00034	50		 push	 eax
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  0003a	53		 push	 ebx
  0003b	bb 00 00 00 00	 mov	 ebx, OFFSET FLAT:??_C@_0BG@HANO@DB?1Contact?1GetSetting?$AA@ ; `string'
  00040	53		 push	 ebx
  00041	89 75 f0	 mov	 DWORD PTR _cgs$83248[ebp], esi
  00044	ff 50 24	 call	 DWORD PTR [eax+36]
  00047	83 c4 18	 add	 esp, 24			; 00000018H
$L83266:
  0004a	85 c0		 test	 eax, eax
  0004c	75 60		 jne	 SHORT $L83263

; 139  : 			break;
; 140  : 		name = dbv.pszVal;
; 141  : 		if (name[0]!='\0' && !strcmp(name+1, groupName)) {

  0004e	8b 45 e0	 mov	 eax, DWORD PTR _dbv$[ebp+4]
  00051	80 38 00	 cmp	 BYTE PTR [eax], 0
  00054	74 14		 je	 SHORT $L83040
  00056	ff 75 08	 push	 DWORD PTR _groupName$[ebp]
  00059	40		 inc	 eax
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 _strcmp
  00060	59		 pop	 ecx
  00061	85 c0		 test	 eax, eax
  00063	59		 pop	 ecx
  00064	0f 84 a3 00 00
	00		 je	 $L83264
$L83040:

; 144  : 			return;
; 145  : 		}
; 146  : 		DBFreeVariant(&dbv);

  0006a	8d 45 dc	 lea	 eax, DWORD PTR _dbv$[ebp]
  0006d	50		 push	 eax
  0006e	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00073	6a 00		 push	 0
  00075	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  0007a	ff 50 24	 call	 DWORD PTR [eax+36]
  0007d	ff 45 fc	 inc	 DWORD PTR _i$[ebp]
  00080	8d 45 b8	 lea	 eax, DWORD PTR _str$[ebp]
  00083	6a 0a		 push	 10			; 0000000aH
  00085	50		 push	 eax
  00086	ff 75 fc	 push	 DWORD PTR _i$[ebp]
  00089	ff d7		 call	 edi
  0008b	8d 45 b8	 lea	 eax, DWORD PTR _str$[ebp]
  0008e	89 75 f0	 mov	 DWORD PTR _cgs$83248[ebp], esi
  00091	89 45 f4	 mov	 DWORD PTR _cgs$83248[ebp+4], eax
  00094	8d 45 dc	 lea	 eax, DWORD PTR _dbv$[ebp]
  00097	89 45 f8	 mov	 DWORD PTR _cgs$83248[ebp+8], eax
  0009a	8d 45 f0	 lea	 eax, DWORD PTR _cgs$83248[ebp]
  0009d	50		 push	 eax
  0009e	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000a3	6a 00		 push	 0
  000a5	53		 push	 ebx
  000a6	ff 50 24	 call	 DWORD PTR [eax+36]
  000a9	83 c4 24	 add	 esp, 36			; 00000024H
  000ac	eb 9c		 jmp	 SHORT $L83266
$L83263:

; 147  : 	}
; 148  : 
; 149  : 	// Create new group with id = i (str is the text representation of i)
; 150  : 	newName[0] = 1 | GROUPF_EXPANDED;
; 151  : 	strncpy(newName+1, groupName, sizeof(newName)-1);

  000ae	6a 7f		 push	 127			; 0000007fH
  000b0	8d 85 39 ff ff
	ff		 lea	 eax, DWORD PTR _newName$[ebp+1]
  000b6	ff 75 08	 push	 DWORD PTR _groupName$[ebp]
  000b9	c6 85 38 ff ff
	ff 05		 mov	 BYTE PTR _newName$[ebp], 5
  000c0	50		 push	 eax
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy

; 152  : 	newName[sizeof(newName)-1] = '\0';
; 153  : 	DBWriteContactSettingString(NULL, "CListGroups", str, newName);

  000c7	8d 45 b8	 lea	 eax, DWORD PTR _str$[ebp]
  000ca	80 65 b7 00	 and	 BYTE PTR _newName$[ebp+127], 0
  000ce	89 45 ec	 mov	 DWORD PTR _cws$83259[ebp+4], eax
  000d1	80 4d f0 ff	 or	 BYTE PTR _cws$83259[ebp+8], 255 ; 000000ffH
  000d5	8d 85 38 ff ff
	ff		 lea	 eax, DWORD PTR _newName$[ebp]
  000db	89 75 e8	 mov	 DWORD PTR _cws$83259[ebp], esi
  000de	89 45 f4	 mov	 DWORD PTR _cws$83259[ebp+12], eax
  000e1	8d 45 e8	 lea	 eax, DWORD PTR _cws$83259[ebp]
  000e4	50		 push	 eax
  000e5	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  000ea	6a 00		 push	 0
  000ec	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@PLGC@DB?1Contact?1WriteSetting?$AA@ ; `string'
  000f1	ff 50 24	 call	 DWORD PTR [eax+36]

; 154  : 	CallService(MS_CLUI_GROUPADDED, i+1, 0);

  000f4	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000f7	6a 00		 push	 0
  000f9	40		 inc	 eax
  000fa	50		 push	 eax
  000fb	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00100	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@NJGA@CLUI?1GroupCreated?$AA@ ; `string'
  00105	ff 50 24	 call	 DWORD PTR [eax+36]
  00108	83 c4 24	 add	 esp, 36			; 00000024H
  0010b	eb 16		 jmp	 SHORT $L83252
$L83264:

; 142  : 			// Already exist, no need to create
; 143  : 			DBFreeVariant(&dbv);

  0010d	8d 45 dc	 lea	 eax, DWORD PTR _dbv$[ebp]
  00110	50		 push	 eax
  00111	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00116	6a 00		 push	 0
  00118	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OGAJ@DB?1Contact?1FreeVariant?$AA@ ; `string'
  0011d	ff 50 24	 call	 DWORD PTR [eax+36]
  00120	83 c4 0c	 add	 esp, 12			; 0000000cH
$L83252:
  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 155  : }

  00126	c9		 leave
  00127	c3		 ret	 0
_JabberContactListCreateClistGroup ENDP
_TEXT	ENDS
PUBLIC	_JabberForkThread
EXTRN	__imp__WaitForSingleObject@8:NEAR
EXTRN	__imp___beginthread:NEAR
EXTRN	__imp__CreateEventW@16:NEAR
EXTRN	__imp__CloseHandle@4:NEAR
;	COMDAT _JabberForkThread
_TEXT	SEGMENT
_threadcode$ = 8
_stacksize$ = 12
_arg$ = 16
_fa$ = -12
_JabberForkThread PROC NEAR				; COMDAT

; 199  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 200  : 	unsigned long rc;
; 201  : 	struct FORK_ARG fa;
; 202  : 
; 203  : 	fa.hEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  00006	33 c0		 xor	 eax, eax
  00008	56		 push	 esi
  00009	50		 push	 eax
  0000a	50		 push	 eax
  0000b	50		 push	 eax
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventW@16
  00013	89 45 f4	 mov	 DWORD PTR _fa$[ebp], eax

; 204  : 	fa.threadcode = threadcode;

  00016	8b 45 08	 mov	 eax, DWORD PTR _threadcode$[ebp]
  00019	89 45 f8	 mov	 DWORD PTR _fa$[ebp+4], eax

; 205  : 	fa.arg = arg;

  0001c	8b 45 10	 mov	 eax, DWORD PTR _arg$[ebp]
  0001f	89 45 fc	 mov	 DWORD PTR _fa$[ebp+8], eax

; 206  : 	rc = _beginthread((void (__cdecl *)(void*))forkthread_r, stacksize, &fa);

  00022	8d 45 f4	 lea	 eax, DWORD PTR _fa$[ebp]
  00025	50		 push	 eax
  00026	ff 75 0c	 push	 DWORD PTR _stacksize$[ebp]
  00029	68 00 00 00 00	 push	 OFFSET FLAT:_forkthread_r
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___beginthread
  00034	8b f0		 mov	 esi, eax
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 207  : 	if ((unsigned long) -1L != rc) {

  00039	83 fe ff	 cmp	 esi, -1
  0003c	74 0b		 je	 SHORT $L83084

; 208  : 		WaitForSingleObject(fa.hEvent, INFINITE);

  0003e	6a ff		 push	 -1
  00040	ff 75 f4	 push	 DWORD PTR _fa$[ebp]
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
$L83084:

; 209  : 	}
; 210  : 	CloseHandle(fa.hEvent);

  00049	ff 75 f4	 push	 DWORD PTR _fa$[ebp]
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 211  : 	return rc;

  00052	8b c6		 mov	 eax, esi
  00054	5e		 pop	 esi

; 212  : }

  00055	c9		 leave
  00056	c3		 ret	 0
_JabberForkThread ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@EEML@Miranda?1Thread?1Push?$AA@	; `string'
PUBLIC	??_C@_0BD@FOLM@Miranda?1Thread?1Pop?$AA@	; `string'
EXTRN	__imp__SetEvent@4:NEAR
;	COMDAT ??_C@_0BE@EEML@Miranda?1Thread?1Push?$AA@
; File E:\Documents and Settings\piotr\Moje dokumenty\NetBeansProjects\tlen8\jabber_misc.c
_DATA	SEGMENT
??_C@_0BE@EEML@Miranda?1Thread?1Push?$AA@ DB 'Miranda/Thread/Push', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@FOLM@Miranda?1Thread?1Pop?$AA@
_DATA	SEGMENT
??_C@_0BD@FOLM@Miranda?1Thread?1Pop?$AA@ DB 'Miranda/Thread/Pop', 00H ; `string'
_DATA	ENDS
;	COMDAT _forkthread_r
_TEXT	SEGMENT
_fa$ = 8
_forkthread_r PROC NEAR					; COMDAT

; 185  : 	void (*callercode)(void*) = fa->threadcode;
; 186  : 	void *arg = fa->arg;
; 187  : 	CallService(MS_SYSTEM_THREAD_PUSH, 0, 0);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00005	53		 push	 ebx
  00006	56		 push	 esi
  00007	8b 74 24 0c	 mov	 esi, DWORD PTR _fa$[esp+4]
  0000b	57		 push	 edi
  0000c	6a 00		 push	 0
  0000e	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00011	8b 5e 08	 mov	 ebx, DWORD PTR [esi+8]
  00014	6a 00		 push	 0
  00016	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@EEML@Miranda?1Thread?1Push?$AA@ ; `string'
  0001b	ff 50 24	 call	 DWORD PTR [eax+36]
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 188  : 	SetEvent(fa->hEvent);

  00021	ff 36		 push	 DWORD PTR [esi]
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4

; 189  : 	callercode(arg);

  00029	53		 push	 ebx
  0002a	ff d7		 call	 edi

; 190  : 	CallService(MS_SYSTEM_THREAD_POP, 0, 0);

  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR _pluginLink
  00031	6a 00		 push	 0
  00033	6a 00		 push	 0
  00035	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@FOLM@Miranda?1Thread?1Pop?$AA@ ; `string'
  0003a	ff 50 24	 call	 DWORD PTR [eax+36]
  0003d	83 c4 10	 add	 esp, 16			; 00000010H
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx

; 191  : 	return;
; 192  : }

  00043	c3		 ret	 0
_forkthread_r ENDP
_TEXT	ENDS
END
